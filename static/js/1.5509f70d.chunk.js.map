{"version":3,"sources":["../../src.ts/index.ts","../../src.ts/_version.ts","../../src.ts/bignumber.ts","../../src.ts/fixednumber.ts","../../src.ts/message.ts","../../src.ts/browser-pbkdf2.ts","../../src.ts/wordlist.ts","../../src.ts/lang-cz.ts","../../src.ts/lang-en.ts","../../src.ts/lang-es.ts","../../src.ts/lang-fr.ts","../../src.ts/lang-ja.ts","../../src.ts/lang-ko.ts","../../src.ts/lang-it.ts","../../src.ts/lang-zh.ts","../../src.ts/wordlists.ts","../../src.ts/utils.ts","../../src.ts/keystore.ts","../../src.ts/crowdsale.ts","../../src.ts/inspect.ts","../../src.ts/bytes32.ts","../../src.ts/ethers.ts","../node_modules/ethers/node_modules/bn.js/lib/bn.js","../../src.ts/strings.ts","../../src.ts/browser-random.ts"],"names":["version","toBigNumber","toBN","this","other","value","throwFault","decimals","String","message","length","output","push","data","parseInt","module","exports","assert","val","msg","Error","inherits","ctor","superCtor","super_","TempCtor","prototype","constructor","BN","number","base","endian","isBN","negative","words","red","_init","Buffer","wordSize","window","require","e","parseHex4Bits","string","index","c","charCodeAt","parseHexByte","lowerBound","r","parseBase","str","start","end","mul","len","Math","min","i","num","Array","isArray","max","left","right","cmp","_initNumber","_initArray","toString","replace","_parseHex","_parseBase","toArray","ceil","j","w","off","strip","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","dest","clone","_expand","size","_normSign","inspect","zeros","groupSizes","groupBases","smallMulTo","self","out","a","b","lo","carry","k","ncarry","rword","maxJ","padding","groupSize","groupBase","isZero","modn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","ArrayType","byteLength","reqLength","littleEndian","res","q","andln","iushrn","clz32","_countBits","t","_zeroBits","bitLength","hi","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","add","sub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","jumboMulTo","FFTM","mulp","x","y","mulTo","hncarry","bigMulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","s","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","n","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","toBitArray","iushln","bits","carryMask","newCarry","ishln","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","shift","_wordDiv","mode","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","acc","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","name","tmp","_tmp","K256","call","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","undefined","_strip","input","outLen","prev","next","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u","EtherSymbol","anyGlobal","crypto","getRandomValues","logger","throwError","errors","UNSUPPORTED_OPERATION","operation"],"mappings":"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","file":"static/js/1.5509f70d.chunk.js","sourcesContent":["\"use strict\";\nexport { AddressZero } from \"./addresses\";\nexport { NegativeOne, Zero, One, Two, WeiPerEther, MaxUint256 } from \"./bignumbers\";\nexport { HashZero } from \"./hashes\";\nexport { EtherSymbol } from \"./strings\";\n//# sourceMappingURL=index.js.map","export const version = \"random/5.1.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\n/**\n *  BigNumber\n *\n *  A wrapper around the BN.js object. We use the BN.js library\n *  because it is used by elliptic, so it is required regardless.\n *\n */\nimport _BN from \"bn.js\";\nvar BN = _BN.BN;\nimport { hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst _constructorGuard = {};\nconst MAX_SAFE = 0x1fffffffffffff;\nexport function isBigNumberish(value) {\n    return (value != null) && (BigNumber.isBigNumber(value) ||\n        (typeof (value) === \"number\" && (value % 1) === 0) ||\n        (typeof (value) === \"string\" && !!value.match(/^-?[0-9]+$/)) ||\n        isHexString(value) ||\n        (typeof (value) === \"bigint\") ||\n        isBytes(value));\n}\n// Only warn about passing 10 into radix once\nlet _warnedToStringRadix = false;\nexport class BigNumber {\n    constructor(constructorGuard, hex) {\n        logger.checkNew(new.target, BigNumber);\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot call constructor directly; use BigNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new (BigNumber)\"\n            });\n        }\n        this._hex = hex;\n        this._isBigNumber = true;\n        Object.freeze(this);\n    }\n    fromTwos(value) {\n        return toBigNumber(toBN(this).fromTwos(value));\n    }\n    toTwos(value) {\n        return toBigNumber(toBN(this).toTwos(value));\n    }\n    abs() {\n        if (this._hex[0] === \"-\") {\n            return BigNumber.from(this._hex.substring(1));\n        }\n        return this;\n    }\n    add(other) {\n        return toBigNumber(toBN(this).add(toBN(other)));\n    }\n    sub(other) {\n        return toBigNumber(toBN(this).sub(toBN(other)));\n    }\n    div(other) {\n        const o = BigNumber.from(other);\n        if (o.isZero()) {\n            throwFault(\"division by zero\", \"div\");\n        }\n        return toBigNumber(toBN(this).div(toBN(other)));\n    }\n    mul(other) {\n        return toBigNumber(toBN(this).mul(toBN(other)));\n    }\n    mod(other) {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"cannot modulo negative values\", \"mod\");\n        }\n        return toBigNumber(toBN(this).umod(value));\n    }\n    pow(other) {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"cannot raise to negative values\", \"pow\");\n        }\n        return toBigNumber(toBN(this).pow(value));\n    }\n    and(other) {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"cannot 'and' negative values\", \"and\");\n        }\n        return toBigNumber(toBN(this).and(value));\n    }\n    or(other) {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"cannot 'or' negative values\", \"or\");\n        }\n        return toBigNumber(toBN(this).or(value));\n    }\n    xor(other) {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"cannot 'xor' negative values\", \"xor\");\n        }\n        return toBigNumber(toBN(this).xor(value));\n    }\n    mask(value) {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"cannot mask negative values\", \"mask\");\n        }\n        return toBigNumber(toBN(this).maskn(value));\n    }\n    shl(value) {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"cannot shift negative values\", \"shl\");\n        }\n        return toBigNumber(toBN(this).shln(value));\n    }\n    shr(value) {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"cannot shift negative values\", \"shr\");\n        }\n        return toBigNumber(toBN(this).shrn(value));\n    }\n    eq(other) {\n        return toBN(this).eq(toBN(other));\n    }\n    lt(other) {\n        return toBN(this).lt(toBN(other));\n    }\n    lte(other) {\n        return toBN(this).lte(toBN(other));\n    }\n    gt(other) {\n        return toBN(this).gt(toBN(other));\n    }\n    gte(other) {\n        return toBN(this).gte(toBN(other));\n    }\n    isNegative() {\n        return (this._hex[0] === \"-\");\n    }\n    isZero() {\n        return toBN(this).isZero();\n    }\n    toNumber() {\n        try {\n            return toBN(this).toNumber();\n        }\n        catch (error) {\n            throwFault(\"overflow\", \"toNumber\", this.toString());\n        }\n        return null;\n    }\n    toBigInt() {\n        try {\n            return BigInt(this.toString());\n        }\n        catch (e) { }\n        return logger.throwError(\"this platform does not support BigInt\", Logger.errors.UNSUPPORTED_OPERATION, {\n            value: this.toString()\n        });\n    }\n    toString() {\n        // Lots of people expect this, which we do not support, so check (See: #889)\n        if (arguments.length > 0) {\n            if (arguments[0] === 10) {\n                if (!_warnedToStringRadix) {\n                    _warnedToStringRadix = true;\n                    logger.warn(\"BigNumber.toString does not accept any parameters; base-10 is assumed\");\n                }\n            }\n            else if (arguments[0] === 16) {\n                logger.throwError(\"BigNumber.toString does not accept any parameters; use bigNumber.toHexString()\", Logger.errors.UNEXPECTED_ARGUMENT, {});\n            }\n            else {\n                logger.throwError(\"BigNumber.toString does not accept parameters\", Logger.errors.UNEXPECTED_ARGUMENT, {});\n            }\n        }\n        return toBN(this).toString(10);\n    }\n    toHexString() {\n        return this._hex;\n    }\n    toJSON(key) {\n        return { type: \"BigNumber\", hex: this.toHexString() };\n    }\n    static from(value) {\n        if (value instanceof BigNumber) {\n            return value;\n        }\n        if (typeof (value) === \"string\") {\n            if (value.match(/^-?0x[0-9a-f]+$/i)) {\n                return new BigNumber(_constructorGuard, toHex(value));\n            }\n            if (value.match(/^-?[0-9]+$/)) {\n                return new BigNumber(_constructorGuard, toHex(new BN(value)));\n            }\n            return logger.throwArgumentError(\"invalid BigNumber string\", \"value\", value);\n        }\n        if (typeof (value) === \"number\") {\n            if (value % 1) {\n                throwFault(\"underflow\", \"BigNumber.from\", value);\n            }\n            if (value >= MAX_SAFE || value <= -MAX_SAFE) {\n                throwFault(\"overflow\", \"BigNumber.from\", value);\n            }\n            return BigNumber.from(String(value));\n        }\n        const anyValue = value;\n        if (typeof (anyValue) === \"bigint\") {\n            return BigNumber.from(anyValue.toString());\n        }\n        if (isBytes(anyValue)) {\n            return BigNumber.from(hexlify(anyValue));\n        }\n        if (anyValue) {\n            // Hexable interface (takes piority)\n            if (anyValue.toHexString) {\n                const hex = anyValue.toHexString();\n                if (typeof (hex) === \"string\") {\n                    return BigNumber.from(hex);\n                }\n            }\n            else {\n                // For now, handle legacy JSON-ified values (goes away in v6)\n                let hex = anyValue._hex;\n                // New-form JSON\n                if (hex == null && anyValue.type === \"BigNumber\") {\n                    hex = anyValue.hex;\n                }\n                if (typeof (hex) === \"string\") {\n                    if (isHexString(hex) || (hex[0] === \"-\" && isHexString(hex.substring(1)))) {\n                        return BigNumber.from(hex);\n                    }\n                }\n            }\n        }\n        return logger.throwArgumentError(\"invalid BigNumber value\", \"value\", value);\n    }\n    static isBigNumber(value) {\n        return !!(value && value._isBigNumber);\n    }\n}\n// Normalize the hex string\nfunction toHex(value) {\n    // For BN, call on the hex string\n    if (typeof (value) !== \"string\") {\n        return toHex(value.toString(16));\n    }\n    // If negative, prepend the negative sign to the normalized positive value\n    if (value[0] === \"-\") {\n        // Strip off the negative sign\n        value = value.substring(1);\n        // Cannot have mulitple negative signs (e.g. \"--0x04\")\n        if (value[0] === \"-\") {\n            logger.throwArgumentError(\"invalid hex\", \"value\", value);\n        }\n        // Call toHex on the positive component\n        value = toHex(value);\n        // Do not allow \"-0x00\"\n        if (value === \"0x00\") {\n            return value;\n        }\n        // Negate the value\n        return \"-\" + value;\n    }\n    // Add a \"0x\" prefix if missing\n    if (value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    // Normalize zero\n    if (value === \"0x\") {\n        return \"0x00\";\n    }\n    // Make the string even length\n    if (value.length % 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n    // Trim to smallest even-length string\n    while (value.length > 4 && value.substring(0, 4) === \"0x00\") {\n        value = \"0x\" + value.substring(4);\n    }\n    return value;\n}\nfunction toBigNumber(value) {\n    return BigNumber.from(toHex(value));\n}\nfunction toBN(value) {\n    const hex = BigNumber.from(value).toHexString();\n    if (hex[0] === \"-\") {\n        return (new BN(\"-\" + hex.substring(3), 16));\n    }\n    return new BN(hex.substring(2), 16);\n}\nfunction throwFault(fault, operation, value) {\n    const params = { fault: fault, operation: operation };\n    if (value != null) {\n        params.value = value;\n    }\n    return logger.throwError(fault, Logger.errors.NUMERIC_FAULT, params);\n}\n// value should have no prefix\nexport function _base36To16(value) {\n    return (new BN(value, 36)).toString(16);\n}\n// value should have no prefix\nexport function _base16To36(value) {\n    return (new BN(value, 16)).toString(36);\n}\n//# sourceMappingURL=bignumber.js.map","\"use strict\";\nimport { arrayify, hexZeroPad, isBytes } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { BigNumber, isBigNumberish } from \"./bignumber\";\nconst _constructorGuard = {};\nconst Zero = BigNumber.from(0);\nconst NegativeOne = BigNumber.from(-1);\nfunction throwFault(message, fault, operation, value) {\n    const params = { fault: fault, operation: operation };\n    if (value !== undefined) {\n        params.value = value;\n    }\n    return logger.throwError(message, Logger.errors.NUMERIC_FAULT, params);\n}\n// Constant to pull zeros from for multipliers\nlet zeros = \"0\";\nwhile (zeros.length < 256) {\n    zeros += zeros;\n}\n// Returns a string \"1\" followed by decimal \"0\"s\nfunction getMultiplier(decimals) {\n    if (typeof (decimals) !== \"number\") {\n        try {\n            decimals = BigNumber.from(decimals).toNumber();\n        }\n        catch (e) { }\n    }\n    if (typeof (decimals) === \"number\" && decimals >= 0 && decimals <= 256 && !(decimals % 1)) {\n        return (\"1\" + zeros.substring(0, decimals));\n    }\n    return logger.throwArgumentError(\"invalid decimal size\", \"decimals\", decimals);\n}\nexport function formatFixed(value, decimals) {\n    if (decimals == null) {\n        decimals = 0;\n    }\n    const multiplier = getMultiplier(decimals);\n    // Make sure wei is a big number (convert as necessary)\n    value = BigNumber.from(value);\n    const negative = value.lt(Zero);\n    if (negative) {\n        value = value.mul(NegativeOne);\n    }\n    let fraction = value.mod(multiplier).toString();\n    while (fraction.length < multiplier.length - 1) {\n        fraction = \"0\" + fraction;\n    }\n    // Strip training 0\n    fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n    const whole = value.div(multiplier).toString();\n    value = whole + \".\" + fraction;\n    if (negative) {\n        value = \"-\" + value;\n    }\n    return value;\n}\nexport function parseFixed(value, decimals) {\n    if (decimals == null) {\n        decimals = 0;\n    }\n    const multiplier = getMultiplier(decimals);\n    if (typeof (value) !== \"string\" || !value.match(/^-?[0-9.,]+$/)) {\n        logger.throwArgumentError(\"invalid decimal value\", \"value\", value);\n    }\n    if (multiplier.length - 1 === 0) {\n        return BigNumber.from(value);\n    }\n    // Is it negative?\n    const negative = (value.substring(0, 1) === \"-\");\n    if (negative) {\n        value = value.substring(1);\n    }\n    if (value === \".\") {\n        logger.throwArgumentError(\"missing value\", \"value\", value);\n    }\n    // Split it into a whole and fractional part\n    const comps = value.split(\".\");\n    if (comps.length > 2) {\n        logger.throwArgumentError(\"too many decimal points\", \"value\", value);\n    }\n    let whole = comps[0], fraction = comps[1];\n    if (!whole) {\n        whole = \"0\";\n    }\n    if (!fraction) {\n        fraction = \"0\";\n    }\n    // Prevent underflow\n    if (fraction.length > multiplier.length - 1) {\n        throwFault(\"fractional component exceeds decimals\", \"underflow\", \"parseFixed\");\n    }\n    // Fully pad the string with zeros to get to wei\n    while (fraction.length < multiplier.length - 1) {\n        fraction += \"0\";\n    }\n    const wholeValue = BigNumber.from(whole);\n    const fractionValue = BigNumber.from(fraction);\n    let wei = (wholeValue.mul(multiplier)).add(fractionValue);\n    if (negative) {\n        wei = wei.mul(NegativeOne);\n    }\n    return wei;\n}\nexport class FixedFormat {\n    constructor(constructorGuard, signed, width, decimals) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot use FixedFormat constructor; use FixedFormat.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n        this.signed = signed;\n        this.width = width;\n        this.decimals = decimals;\n        this.name = (signed ? \"\" : \"u\") + \"fixed\" + String(width) + \"x\" + String(decimals);\n        this._multiplier = getMultiplier(decimals);\n        Object.freeze(this);\n    }\n    static from(value) {\n        if (value instanceof FixedFormat) {\n            return value;\n        }\n        let signed = true;\n        let width = 128;\n        let decimals = 18;\n        if (typeof (value) === \"string\") {\n            if (value === \"fixed\") {\n                // defaults...\n            }\n            else if (value === \"ufixed\") {\n                signed = false;\n            }\n            else if (value != null) {\n                const match = value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);\n                if (!match) {\n                    logger.throwArgumentError(\"invalid fixed format\", \"format\", value);\n                }\n                signed = (match[1] !== \"u\");\n                width = parseInt(match[2]);\n                decimals = parseInt(match[3]);\n            }\n        }\n        else if (value) {\n            const check = (key, type, defaultValue) => {\n                if (value[key] == null) {\n                    return defaultValue;\n                }\n                if (typeof (value[key]) !== type) {\n                    logger.throwArgumentError(\"invalid fixed format (\" + key + \" not \" + type + \")\", \"format.\" + key, value[key]);\n                }\n                return value[key];\n            };\n            signed = check(\"signed\", \"boolean\", signed);\n            width = check(\"width\", \"number\", width);\n            decimals = check(\"decimals\", \"number\", decimals);\n        }\n        if (width % 8) {\n            logger.throwArgumentError(\"invalid fixed format width (not byte aligned)\", \"format.width\", width);\n        }\n        if (decimals > 80) {\n            logger.throwArgumentError(\"invalid fixed format (decimals too large)\", \"format.decimals\", decimals);\n        }\n        return new FixedFormat(_constructorGuard, signed, width, decimals);\n    }\n}\nexport class FixedNumber {\n    constructor(constructorGuard, hex, value, format) {\n        logger.checkNew(new.target, FixedNumber);\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot use FixedNumber constructor; use FixedNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n        this.format = format;\n        this._hex = hex;\n        this._value = value;\n        this._isFixedNumber = true;\n        Object.freeze(this);\n    }\n    _checkFormat(other) {\n        if (this.format.name !== other.format.name) {\n            logger.throwArgumentError(\"incompatible format; use fixedNumber.toFormat\", \"other\", other);\n        }\n    }\n    addUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.add(b), this.format.decimals, this.format);\n    }\n    subUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.sub(b), this.format.decimals, this.format);\n    }\n    mulUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(b).div(this.format._multiplier), this.format.decimals, this.format);\n    }\n    divUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(this.format._multiplier).div(b), this.format.decimals, this.format);\n    }\n    floor() {\n        let comps = this.toString().split(\".\");\n        let result = FixedNumber.from(comps[0], this.format);\n        const hasFraction = !comps[1].match(/^(0*)$/);\n        if (this.isNegative() && hasFraction) {\n            result = result.subUnsafe(ONE);\n        }\n        return result;\n    }\n    ceiling() {\n        let comps = this.toString().split(\".\");\n        let result = FixedNumber.from(comps[0], this.format);\n        const hasFraction = !comps[1].match(/^(0*)$/);\n        if (!this.isNegative() && hasFraction) {\n            result = result.addUnsafe(ONE);\n        }\n        return result;\n    }\n    // @TODO: Support other rounding algorithms\n    round(decimals) {\n        if (decimals == null) {\n            decimals = 0;\n        }\n        // If we are already in range, we're done\n        let comps = this.toString().split(\".\");\n        if (decimals < 0 || decimals > 80 || (decimals % 1)) {\n            logger.throwArgumentError(\"invalid decimal count\", \"decimals\", decimals);\n        }\n        if (comps[1].length <= decimals) {\n            return this;\n        }\n        const factor = FixedNumber.from(\"1\" + zeros.substring(0, decimals));\n        return this.mulUnsafe(factor).addUnsafe(BUMP).floor().divUnsafe(factor);\n    }\n    isZero() {\n        return (this._value === \"0.0\");\n    }\n    isNegative() {\n        return (this._value[0] === \"-\");\n    }\n    toString() { return this._value; }\n    toHexString(width) {\n        if (width == null) {\n            return this._hex;\n        }\n        if (width % 8) {\n            logger.throwArgumentError(\"invalid byte width\", \"width\", width);\n        }\n        const hex = BigNumber.from(this._hex).fromTwos(this.format.width).toTwos(width).toHexString();\n        return hexZeroPad(hex, width / 8);\n    }\n    toUnsafeFloat() { return parseFloat(this.toString()); }\n    toFormat(format) {\n        return FixedNumber.fromString(this._value, format);\n    }\n    static fromValue(value, decimals, format) {\n        // If decimals looks more like a format, and there is no format, shift the parameters\n        if (format == null && decimals != null && !isBigNumberish(decimals)) {\n            format = decimals;\n            decimals = null;\n        }\n        if (decimals == null) {\n            decimals = 0;\n        }\n        if (format == null) {\n            format = \"fixed\";\n        }\n        return FixedNumber.fromString(formatFixed(value, decimals), FixedFormat.from(format));\n    }\n    static fromString(value, format) {\n        if (format == null) {\n            format = \"fixed\";\n        }\n        const fixedFormat = FixedFormat.from(format);\n        const numeric = parseFixed(value, fixedFormat.decimals);\n        if (!fixedFormat.signed && numeric.lt(Zero)) {\n            throwFault(\"unsigned value cannot be negative\", \"overflow\", \"value\", value);\n        }\n        let hex = null;\n        if (fixedFormat.signed) {\n            hex = numeric.toTwos(fixedFormat.width).toHexString();\n        }\n        else {\n            hex = numeric.toHexString();\n            hex = hexZeroPad(hex, fixedFormat.width / 8);\n        }\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n    static fromBytes(value, format) {\n        if (format == null) {\n            format = \"fixed\";\n        }\n        const fixedFormat = FixedFormat.from(format);\n        if (arrayify(value).length > fixedFormat.width / 8) {\n            throw new Error(\"overflow\");\n        }\n        let numeric = BigNumber.from(value);\n        if (fixedFormat.signed) {\n            numeric = numeric.fromTwos(fixedFormat.width);\n        }\n        const hex = numeric.toTwos((fixedFormat.signed ? 0 : 1) + fixedFormat.width).toHexString();\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n    static from(value, format) {\n        if (typeof (value) === \"string\") {\n            return FixedNumber.fromString(value, format);\n        }\n        if (isBytes(value)) {\n            return FixedNumber.fromBytes(value, format);\n        }\n        try {\n            return FixedNumber.fromValue(value, 0, format);\n        }\n        catch (error) {\n            // Allow NUMERIC_FAULT to bubble up\n            if (error.code !== Logger.errors.INVALID_ARGUMENT) {\n                throw error;\n            }\n        }\n        return logger.throwArgumentError(\"invalid FixedNumber value\", \"value\", value);\n    }\n    static isFixedNumber(value) {\n        return !!(value && value._isFixedNumber);\n    }\n}\nconst ONE = FixedNumber.from(1);\nconst BUMP = FixedNumber.from(\"0.5\");\n//# sourceMappingURL=fixednumber.js.map","import { concat } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nexport const messagePrefix = \"\\x19Ethereum Signed Message:\\n\";\nexport function hashMessage(message) {\n    if (typeof (message) === \"string\") {\n        message = toUtf8Bytes(message);\n    }\n    return keccak256(concat([\n        toUtf8Bytes(messagePrefix),\n        toUtf8Bytes(String(message.length)),\n        message\n    ]));\n}\n//# sourceMappingURL=message.js.map","\"use strict\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { computeHmac } from \"@ethersproject/sha2\";\nexport function pbkdf2(password, salt, iterations, keylen, hashAlgorithm) {\n    password = arrayify(password);\n    salt = arrayify(salt);\n    let hLen;\n    let l = 1;\n    const DK = new Uint8Array(keylen);\n    const block1 = new Uint8Array(salt.length + 4);\n    block1.set(salt);\n    //salt.copy(block1, 0, 0, salt.length)\n    let r;\n    let T;\n    for (let i = 1; i <= l; i++) {\n        //block1.writeUInt32BE(i, salt.length)\n        block1[salt.length] = (i >> 24) & 0xff;\n        block1[salt.length + 1] = (i >> 16) & 0xff;\n        block1[salt.length + 2] = (i >> 8) & 0xff;\n        block1[salt.length + 3] = i & 0xff;\n        //let U = createHmac(password).update(block1).digest();\n        let U = arrayify(computeHmac(hashAlgorithm, password, block1));\n        if (!hLen) {\n            hLen = U.length;\n            T = new Uint8Array(hLen);\n            l = Math.ceil(keylen / hLen);\n            r = keylen - (l - 1) * hLen;\n        }\n        //U.copy(T, 0, 0, hLen)\n        T.set(U);\n        for (let j = 1; j < iterations; j++) {\n            //U = createHmac(password).update(U).digest();\n            U = arrayify(computeHmac(hashAlgorithm, password, U));\n            for (let k = 0; k < hLen; k++)\n                T[k] ^= U[k];\n        }\n        const destPos = (i - 1) * hLen;\n        const len = (i === l ? r : hLen);\n        //T.copy(DK, destPos, 0, len)\n        DK.set(arrayify(T).slice(0, len), destPos);\n    }\n    return hexlify(DK);\n}\n//# sourceMappingURL=pbkdf2.js.map","\"use strict\";\n// This gets overridden by rollup\nconst exportWordlist = false;\nimport { id } from \"@ethersproject/hash\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nexport const logger = new Logger(version);\nexport class Wordlist {\n    constructor(locale) {\n        logger.checkAbstract(new.target, Wordlist);\n        defineReadOnly(this, \"locale\", locale);\n    }\n    // Subclasses may override this\n    split(mnemonic) {\n        return mnemonic.toLowerCase().split(/ +/g);\n    }\n    // Subclasses may override this\n    join(words) {\n        return words.join(\" \");\n    }\n    static check(wordlist) {\n        const words = [];\n        for (let i = 0; i < 2048; i++) {\n            const word = wordlist.getWord(i);\n            /* istanbul ignore if */\n            if (i !== wordlist.getWordIndex(word)) {\n                return \"0x\";\n            }\n            words.push(word);\n        }\n        return id(words.join(\"\\n\") + \"\\n\");\n    }\n    static register(lang, name) {\n        if (!name) {\n            name = lang.locale;\n        }\n        /* istanbul ignore if */\n        if (exportWordlist) {\n            try {\n                const anyGlobal = window;\n                if (anyGlobal._ethers && anyGlobal._ethers.wordlists) {\n                    if (!anyGlobal._ethers.wordlists[name]) {\n                        defineReadOnly(anyGlobal._ethers.wordlists, name, lang);\n                    }\n                }\n            }\n            catch (error) { }\n        }\n    }\n}\n//# sourceMappingURL=wordlist.js.map","\"use strict\";\nimport { Wordlist } from \"./wordlist\";\nconst words = \"AbdikaceAbecedaAdresaAgreseAkceAktovkaAlejAlkoholAmputaceAnanasAndulkaAnekdotaAnketaAntikaAnulovatArchaAroganceAsfaltAsistentAspiraceAstmaAstronomAtlasAtletikaAtolAutobusAzylBabkaBachorBacilBaculkaBadatelBagetaBagrBahnoBakterieBaladaBaletkaBalkonBalonekBalvanBalzaBambusBankomatBarbarBaretBarmanBarokoBarvaBaterkaBatohBavlnaBazalkaBazilikaBazukaBednaBeranBesedaBestieBetonBezinkaBezmocBeztakBicyklBidloBiftekBikinyBilanceBiografBiologBitvaBizonBlahobytBlatouchBlechaBleduleBleskBlikatBliznaBlokovatBlouditBludBobekBobrBodlinaBodnoutBohatostBojkotBojovatBokorysBolestBorecBoroviceBotaBoubelBouchatBoudaBouleBouratBoxerBradavkaBramboraBrankaBratrBreptaBriketaBrkoBrlohBronzBroskevBrunetkaBrusinkaBrzdaBrzyBublinaBubnovatBuchtaBuditelBudkaBudovaBufetBujarostBukviceBuldokBulvaBundaBunkrBurzaButikBuvolBuzolaBydletBylinaBytovkaBzukotCapartCarevnaCedrCeduleCejchCejnCelaCelerCelkemCelniceCeninaCennostCenovkaCentrumCenzorCestopisCetkaChalupaChapadloCharitaChataChechtatChemieChichotChirurgChladChlebaChlubitChmelChmuraChobotChocholChodbaCholeraChomoutChopitChorobaChovChrapotChrlitChrtChrupChtivostChudinaChutnatChvatChvilkaChvostChybaChystatChytitCibuleCigaretaCihelnaCihlaCinkotCirkusCisternaCitaceCitrusCizinecCizostClonaCokolivCouvatCtitelCtnostCudnostCuketaCukrCupotCvaknoutCvalCvikCvrkotCyklistaDalekoDarebaDatelDatumDceraDebataDechovkaDecibelDeficitDeflaceDeklDekretDemokratDepreseDerbyDeskaDetektivDikobrazDiktovatDiodaDiplomDiskDisplejDivadloDivochDlahaDlouhoDluhopisDnesDobroDobytekDocentDochutitDodnesDohledDohodaDohraDojemDojniceDokladDokolaDoktorDokumentDolarDolevaDolinaDomaDominantDomluvitDomovDonutitDopadDopisDoplnitDoposudDoprovodDopustitDorazitDorostDortDosahDoslovDostatekDosudDosytaDotazDotekDotknoutDoufatDoutnatDovozceDozaduDoznatDozorceDrahotaDrakDramatikDravecDrazeDrdolDrobnostDrogerieDrozdDrsnostDrtitDrzostDubenDuchovnoDudekDuhaDuhovkaDusitDusnoDutostDvojiceDvorecDynamitEkologEkonomieElektronElipsaEmailEmiseEmoceEmpatieEpizodaEpochaEpopejEposEsejEsenceEskortaEskymoEtiketaEuforieEvoluceExekuceExkurzeExpediceExplozeExportExtraktFackaFajfkaFakultaFanatikFantazieFarmacieFavoritFazoleFederaceFejetonFenkaFialkaFigurantFilozofFiltrFinanceFintaFixaceFjordFlanelFlirtFlotilaFondFosforFotbalFotkaFotonFrakceFreskaFrontaFukarFunkceFyzikaGalejeGarantGenetikaGeologGilotinaGlazuraGlejtGolemGolfistaGotikaGrafGramofonGranuleGrepGrilGrogGroteskaGumaHadiceHadrHalaHalenkaHanbaHanopisHarfaHarpunaHavranHebkostHejkalHejnoHejtmanHektarHelmaHematomHerecHernaHesloHezkyHistorikHladovkaHlasivkyHlavaHledatHlenHlodavecHlohHloupostHltatHlubinaHluchotaHmatHmotaHmyzHnisHnojivoHnoutHoblinaHobojHochHodinyHodlatHodnotaHodovatHojnostHokejHolinkaHolkaHolubHomoleHonitbaHonoraceHoralHordaHorizontHorkoHorlivecHormonHorninaHoroskopHorstvoHospodaHostinaHotovostHoubaHoufHoupatHouskaHovorHradbaHraniceHravostHrazdaHrbolekHrdinaHrdloHrdostHrnekHrobkaHromadaHrotHroudaHrozenHrstkaHrubostHryzatHubenostHubnoutHudbaHukotHumrHusitaHustotaHvozdHybnostHydrantHygienaHymnaHysterikIdylkaIhnedIkonaIluzeImunitaInfekceInflaceInkasoInovaceInspekceInternetInvalidaInvestorInzerceIronieJablkoJachtaJahodaJakmileJakostJalovecJantarJarmarkJaroJasanJasnoJatkaJavorJazykJedinecJedleJednatelJehlanJekotJelenJelitoJemnostJenomJepiceJeseterJevitJezdecJezeroJinakJindyJinochJiskraJistotaJitrniceJizvaJmenovatJogurtJurtaKabaretKabelKabinetKachnaKadetKadidloKahanKajakKajutaKakaoKaktusKalamitaKalhotyKalibrKalnostKameraKamkolivKamnaKanibalKanoeKantorKapalinaKapelaKapitolaKapkaKapleKapotaKaprKapustaKapybaraKaramelKarotkaKartonKasaKatalogKatedraKauceKauzaKavalecKazajkaKazetaKazivostKdekolivKdesiKedlubenKempKeramikaKinoKlacekKladivoKlamKlapotKlasikaKlaunKlecKlenbaKlepatKlesnoutKlidKlimaKlisnaKloboukKlokanKlopaKloubKlubovnaKlusatKluzkostKmenKmitatKmotrKnihaKnotKoaliceKoberecKobkaKoblihaKobylaKocourKohoutKojenecKokosKoktejlKolapsKoledaKolizeKoloKomandoKometaKomikKomnataKomoraKompasKomunitaKonatKonceptKondiceKonecKonfeseKongresKoninaKonkursKontaktKonzervaKopanecKopieKopnoutKoprovkaKorbelKorektorKormidloKoroptevKorpusKorunaKorytoKorzetKosatecKostkaKotelKotletaKotoulKoukatKoupelnaKousekKouzloKovbojKozaKozorohKrabiceKrachKrajinaKralovatKrasopisKravataKreditKrejcarKresbaKrevetaKriketKritikKrizeKrkavecKrmelecKrmivoKrocanKrokKronikaKropitKroupaKrovkaKrtekKruhadloKrupiceKrutostKrvinkaKrychleKryptaKrystalKrytKudlankaKufrKujnostKuklaKulajdaKulichKulkaKulometKulturaKunaKupodivuKurtKurzorKutilKvalitaKvasinkaKvestorKynologKyselinaKytaraKyticeKytkaKytovecKyvadloLabradorLachtanLadnostLaikLakomecLamelaLampaLanovkaLasiceLasoLasturaLatinkaLavinaLebkaLeckdyLedenLedniceLedovkaLedvinaLegendaLegieLegraceLehceLehkostLehnoutLektvarLenochodLentilkaLepenkaLepidloLetadloLetecLetmoLetokruhLevhartLevitaceLevobokLibraLichotkaLidojedLidskostLihovinaLijavecLilekLimetkaLinieLinkaLinoleumListopadLitinaLitovatLobistaLodivodLogikaLogopedLokalitaLoketLomcovatLopataLopuchLordLososLotrLoudalLouhLoukaLouskatLovecLstivostLucernaLuciferLumpLuskLustraceLviceLyraLyrikaLysinaMadamMadloMagistrMahagonMajetekMajitelMajoritaMakakMakoviceMakrelaMalbaMalinaMalovatMalviceMaminkaMandleMankoMarnostMasakrMaskotMasopustMaticeMatrikaMaturitaMazanecMazivoMazlitMazurkaMdlobaMechanikMeditaceMedovinaMelasaMelounMentolkaMetlaMetodaMetrMezeraMigraceMihnoutMihuleMikinaMikrofonMilenecMilimetrMilostMimikaMincovnaMinibarMinometMinulostMiskaMistrMixovatMladostMlhaMlhovinaMlokMlsatMluvitMnichMnohemMobilMocnostModelkaModlitbaMohylaMokroMolekulaMomentkaMonarchaMonoklMonstrumMontovatMonzunMosazMoskytMostMotivaceMotorkaMotykaMouchaMoudrostMozaikaMozekMozolMramorMravenecMrkevMrtvolaMrzetMrzutostMstitelMudrcMuflonMulatMumieMuniceMusetMutaceMuzeumMuzikantMyslivecMzdaNabouratNachytatNadaceNadbytekNadhozNadobroNadpisNahlasNahnatNahodileNahraditNaivitaNajednouNajistoNajmoutNaklonitNakonecNakrmitNalevoNamazatNamluvitNanometrNaokoNaopakNaostroNapadatNapevnoNaplnitNapnoutNaposledNaprostoNaroditNarubyNarychloNasaditNasekatNaslepoNastatNatolikNavenekNavrchNavzdoryNazvatNebeNechatNeckyNedalekoNedbatNeduhNegaceNehetNehodaNejenNejprveNeklidNelibostNemilostNemocNeochotaNeonkaNepokojNerostNervNesmyslNesouladNetvorNeuronNevinaNezvykleNicotaNijakNikamNikdyNiklNikterakNitroNoclehNohaviceNominaceNoraNorekNositelNosnostNouzeNovinyNovotaNozdraNudaNudleNugetNutitNutnostNutrieNymfaObalObarvitObavaObdivObecObehnatObejmoutObezitaObhajobaObilniceObjasnitObjektObklopitOblastOblekOblibaOblohaObludaObnosObohatitObojekOboutObrazecObrnaObrubaObrysObsahObsluhaObstaratObuvObvazObvinitObvodObvykleObyvatelObzorOcasOcelOcenitOchladitOchotaOchranaOcitnoutOdbojOdbytOdchodOdcizitOdebratOdeslatOdevzdatOdezvaOdhadceOdhoditOdjetOdjinudOdkazOdkoupitOdlivOdlukaOdmlkaOdolnostOdpadOdpisOdploutOdporOdpustitOdpykatOdrazkaOdsouditOdstupOdsunOdtokOdtudOdvahaOdvetaOdvolatOdvracetOdznakOfinaOfsajdOhlasOhniskoOhradaOhrozitOhryzekOkapOkeniceOklikaOknoOkouzlitOkovyOkrasaOkresOkrsekOkruhOkupantOkurkaOkusitOlejninaOlizovatOmakOmeletaOmezitOmladinaOmlouvatOmluvaOmylOnehdyOpakovatOpasekOperaceOpiceOpilostOpisovatOporaOpoziceOpravduOprotiOrbitalOrchestrOrgieOrliceOrlojOrtelOsadaOschnoutOsikaOsivoOslavaOslepitOslnitOslovitOsnovaOsobaOsolitOspalecOstenOstrahaOstudaOstychOsvojitOteplitOtiskOtopOtrhatOtrlostOtrokOtrubyOtvorOvanoutOvarOvesOvlivnitOvoceOxidOzdobaPachatelPacientPadouchPahorekPaktPalandaPalecPalivoPalubaPamfletPamlsekPanenkaPanikaPannaPanovatPanstvoPantoflePaprikaParketaParodiePartaParukaParybaPasekaPasivitaPastelkaPatentPatronaPavoukPaznehtPazourekPeckaPedagogPejsekPekloPelotonPenaltaPendrekPenzePeriskopPeroPestrostPetardaPeticePetrolejPevninaPexesoPianistaPihaPijavicePiklePiknikPilinaPilnostPilulkaPinzetaPipetaPisatelPistolePitevnaPivnicePivovarPlacentaPlakatPlamenPlanetaPlastikaPlatitPlavidloPlazPlechPlemenoPlentaPlesPletivoPlevelPlivatPlnitPlnoPlochaPlodinaPlombaPloutPlukPlynPobavitPobytPochodPocitPoctivecPodatPodcenitPodepsatPodhledPodivitPodkladPodmanitPodnikPodobaPodporaPodrazPodstataPodvodPodzimPoeziePohankaPohnutkaPohovorPohromaPohybPointaPojistkaPojmoutPokazitPoklesPokojPokrokPokutaPokynPolednePolibekPolknoutPolohaPolynomPomaluPominoutPomlkaPomocPomstaPomysletPonechatPonorkaPonurostPopadatPopelPopisekPoplachPoprositPopsatPopudPoradcePorcePorodPoruchaPoryvPosaditPosedPosilaPoskokPoslanecPosouditPospoluPostavaPosudekPosypPotahPotkanPotleskPotomekPotravaPotupaPotvoraPoukazPoutoPouzdroPovahaPovidlaPovlakPovozPovrchPovstatPovykPovzdechPozdravPozemekPoznatekPozorPozvatPracovatPrahoryPraktikaPralesPraotecPraporekPrasePravdaPrincipPrknoProbuditProcentoProdejProfeseProhraProjektProlomitPromilePronikatPropadProrokProsbaProtonProutekProvazPrskavkaPrstenPrudkostPrutPrvekPrvohoryPsanecPsovodPstruhPtactvoPubertaPuchPudlPukavecPuklinaPukrlePultPumpaPuncPupenPusaPusinkaPustinaPutovatPutykaPyramidaPyskPytelRacekRachotRadiaceRadniceRadonRaftRagbyRaketaRakovinaRamenoRampouchRandeRarachRaritaRasovnaRastrRatolestRazanceRazidloReagovatReakceReceptRedaktorReferentReflexRejnokReklamaRekordRekrutRektorReputaceRevizeRevmaRevolverRezervaRiskovatRizikoRobotikaRodokmenRohovkaRokleRokokoRomanetoRopovodRopuchaRorejsRosolRostlinaRotmistrRotopedRotundaRoubenkaRouchoRoupRouraRovinaRovniceRozborRozchodRozdatRozeznatRozhodceRozinkaRozjezdRozkazRozlohaRozmarRozpadRozruchRozsahRoztokRozumRozvodRubrikaRuchadloRukaviceRukopisRybaRybolovRychlostRydloRypadloRytinaRyzostSadistaSahatSakoSamecSamizdatSamotaSanitkaSardinkaSasankaSatelitSazbaSazeniceSborSchovatSebrankaSeceseSedadloSedimentSedloSehnatSejmoutSekeraSektaSekundaSekvojeSemenoSenoServisSesaditSeshoraSeskokSeslatSestraSesuvSesypatSetbaSetinaSetkatSetnoutSetrvatSeverSeznamShodaShrnoutSifonSilniceSirkaSirotekSirupSituaceSkafandrSkaliskoSkanzenSkautSkeptikSkicaSkladbaSkleniceSkloSkluzSkobaSkokanSkoroSkriptaSkrzSkupinaSkvostSkvrnaSlabikaSladidloSlaninaSlastSlavnostSledovatSlepecSlevaSlezinaSlibSlinaSlizniceSlonSloupekSlovoSluchSluhaSlunceSlupkaSlzaSmaragdSmetanaSmilstvoSmlouvaSmogSmradSmrkSmrtkaSmutekSmyslSnadSnahaSnobSobotaSochaSodovkaSokolSopkaSotvaSoubojSoucitSoudceSouhlasSouladSoumrakSoupravaSousedSoutokSouvisetSpalovnaSpasitelSpisSplavSpodekSpojenecSpoluSponzorSpornostSpoustaSprchaSpustitSrandaSrazSrdceSrnaSrnecSrovnatSrpenSrstSrubStaniceStarostaStatikaStavbaStehnoStezkaStodolaStolekStopaStornoStoupatStrachStresStrhnoutStromStrunaStudnaStupniceStvolStykSubjektSubtropySucharSudostSuknoSundatSunoutSurikataSurovinaSvahSvalstvoSvetrSvatbaSvazekSvisleSvitekSvobodaSvodidloSvorkaSvrabSykavkaSykotSynekSynovecSypatSypkostSyrovostSyselSytostTabletkaTabuleTahounTajemnoTajfunTajgaTajitTajnostTaktikaTamhleTamponTancovatTanecTankerTapetaTaveninaTazatelTechnikaTehdyTekutinaTelefonTemnotaTendenceTenistaTenorTeplotaTepnaTeprveTerapieTermoskaTextilTichoTiskopisTitulekTkadlecTkaninaTlapkaTleskatTlukotTlupaTmelToaletaTopinkaTopolTorzoTouhaToulecTradiceTraktorTrampTrasaTraverzaTrefitTrestTrezorTrhavinaTrhlinaTrochuTrojiceTroskaTroubaTrpceTrpitelTrpkostTrubecTruchlitTruhliceTrusTrvatTudyTuhnoutTuhostTundraTuristaTurnajTuzemskoTvarohTvorbaTvrdostTvrzTygrTykevUbohostUbozeUbratUbrousekUbrusUbytovnaUchoUctivostUdivitUhraditUjednatUjistitUjmoutUkazatelUklidnitUklonitUkotvitUkrojitUliceUlitaUlovitUmyvadloUnavitUniformaUniknoutUpadnoutUplatnitUplynoutUpoutatUpravitUranUrazitUsednoutUsilovatUsmrtitUsnadnitUsnoutUsouditUstlatUstrnoutUtahovatUtkatUtlumitUtonoutUtopenecUtrousitUvalitUvolnitUvozovkaUzdravitUzelUzeninaUzlinaUznatVagonValchaValounVanaVandalVanilkaVaranVarhanyVarovatVcelkuVchodVdovaVedroVegetaceVejceVelbloudVeletrhVelitelVelmocVelrybaVenkovVerandaVerzeVeselkaVeskrzeVesniceVespoduVestaVeterinaVeverkaVibraceVichrVideohraVidinaVidleVilaViniceVisetVitalitaVizeVizitkaVjezdVkladVkusVlajkaVlakVlasecVlevoVlhkostVlivVlnovkaVloupatVnucovatVnukVodaVodivostVodoznakVodstvoVojenskyVojnaVojskoVolantVolbaVolitVolnoVoskovkaVozidloVozovnaVpravoVrabecVracetVrahVrataVrbaVrcholekVrhatVrstvaVrtuleVsaditVstoupitVstupVtipVybavitVybratVychovatVydatVydraVyfotitVyhledatVyhnoutVyhoditVyhraditVyhubitVyjasnitVyjetVyjmoutVyklopitVykonatVylekatVymazatVymezitVymizetVymysletVynechatVynikatVynutitVypadatVyplatitVypravitVypustitVyrazitVyrovnatVyrvatVyslovitVysokoVystavitVysunoutVysypatVytasitVytesatVytratitVyvinoutVyvolatVyvrhelVyzdobitVyznatVzaduVzbuditVzchopitVzdorVzduchVzdychatVzestupVzhledemVzkazVzlykatVznikVzorekVzpouraVztahVztekXylofonZabratZabydletZachovatZadarmoZadusitZafoukatZahltitZahoditZahradaZahynoutZajatecZajetZajistitZaklepatZakoupitZalepitZamezitZamotatZamysletZanechatZanikatZaplatitZapojitZapsatZarazitZastavitZasunoutZatajitZatemnitZatknoutZaujmoutZavalitZaveletZavinitZavolatZavrtatZazvonitZbavitZbrusuZbudovatZbytekZdalekaZdarmaZdatnostZdivoZdobitZdrojZdvihZdymadloZeleninaZemanZeminaZeptatZezaduZezdolaZhatitZhltnoutZhlubokaZhotovitZhrubaZimaZimniceZjemnitZklamatZkoumatZkratkaZkumavkaZlatoZlehkaZlobaZlomZlostZlozvykZmapovatZmarZmatekZmijeZmizetZmocnitZmodratZmrzlinaZmutovatZnakZnalostZnamenatZnovuZobrazitZotavitZoubekZoufaleZploditZpomalitZpravaZprostitZprudkaZprvuZradaZranitZrcadloZrnitostZrnoZrovnaZrychlitZrzavostZtichaZtratitZubovinaZubrZvednoutZvenkuZveselaZvonZvratZvukovodZvyk\";\nlet wordlist = null;\nfunction loadWords(lang) {\n    if (wordlist != null) {\n        return;\n    }\n    wordlist = words.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \");\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (Wordlist.check(lang) !== \"0x25f44555f4af25b51a711136e1c7d6e50ce9f8917d39d6b1f076b2bb4d2fac1a\") {\n        wordlist = null;\n        throw new Error(\"BIP39 Wordlist for en (English) FAILED\");\n    }\n}\nclass LangCz extends Wordlist {\n    constructor() {\n        super(\"cz\");\n    }\n    getWord(index) {\n        loadWords(this);\n        return wordlist[index];\n    }\n    getWordIndex(word) {\n        loadWords(this);\n        return wordlist.indexOf(word);\n    }\n}\nconst langCz = new LangCz();\nWordlist.register(langCz);\nexport { langCz };\n//# sourceMappingURL=lang-cz.js.map","\"use strict\";\nimport { Wordlist } from \"./wordlist\";\nconst words = \"AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo\";\nlet wordlist = null;\nfunction loadWords(lang) {\n    if (wordlist != null) {\n        return;\n    }\n    wordlist = words.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \");\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (Wordlist.check(lang) !== \"0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60\") {\n        wordlist = null;\n        throw new Error(\"BIP39 Wordlist for en (English) FAILED\");\n    }\n}\nclass LangEn extends Wordlist {\n    constructor() {\n        super(\"en\");\n    }\n    getWord(index) {\n        loadWords(this);\n        return wordlist[index];\n    }\n    getWordIndex(word) {\n        loadWords(this);\n        return wordlist.indexOf(word);\n    }\n}\nconst langEn = new LangEn();\nWordlist.register(langEn);\nexport { langEn };\n//# sourceMappingURL=lang-en.js.map","\"use strict\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { logger, Wordlist } from \"./wordlist\";\nconst words = \"A/bacoAbdomenAbejaAbiertoAbogadoAbonoAbortoAbrazoAbrirAbueloAbusoAcabarAcademiaAccesoAccio/nAceiteAcelgaAcentoAceptarA/cidoAclararAcne/AcogerAcosoActivoActoActrizActuarAcudirAcuerdoAcusarAdictoAdmitirAdoptarAdornoAduanaAdultoAe/reoAfectarAficio/nAfinarAfirmarA/gilAgitarAgoni/aAgostoAgotarAgregarAgrioAguaAgudoA/guilaAgujaAhogoAhorroAireAislarAjedrezAjenoAjusteAlacra/nAlambreAlarmaAlbaA/lbumAlcaldeAldeaAlegreAlejarAlertaAletaAlfilerAlgaAlgodo/nAliadoAlientoAlivioAlmaAlmejaAlmi/barAltarAltezaAltivoAltoAlturaAlumnoAlzarAmableAmanteAmapolaAmargoAmasarA/mbarA/mbitoAmenoAmigoAmistadAmorAmparoAmplioAnchoAncianoAnclaAndarAnde/nAnemiaA/nguloAnilloA/nimoAni/sAnotarAntenaAntiguoAntojoAnualAnularAnuncioA~adirA~ejoA~oApagarAparatoApetitoApioAplicarApodoAporteApoyoAprenderAprobarApuestaApuroAradoAra~aArarA/rbitroA/rbolArbustoArchivoArcoArderArdillaArduoA/reaA/ridoAriesArmoni/aArne/sAromaArpaArpo/nArregloArrozArrugaArteArtistaAsaAsadoAsaltoAscensoAsegurarAseoAsesorAsientoAsiloAsistirAsnoAsombroA/speroAstillaAstroAstutoAsumirAsuntoAtajoAtaqueAtarAtentoAteoA/ticoAtletaA/tomoAtraerAtrozAtu/nAudazAudioAugeAulaAumentoAusenteAutorAvalAvanceAvaroAveAvellanaAvenaAvestruzAvio/nAvisoAyerAyudaAyunoAzafra/nAzarAzoteAzu/carAzufreAzulBabaBaborBacheBahi/aBaileBajarBalanzaBalco/nBaldeBambu/BancoBandaBa~oBarbaBarcoBarnizBarroBa/sculaBasto/nBasuraBatallaBateri/aBatirBatutaBau/lBazarBebe/BebidaBelloBesarBesoBestiaBichoBienBingoBlancoBloqueBlusaBoaBobinaBoboBocaBocinaBodaBodegaBoinaBolaBoleroBolsaBombaBondadBonitoBonoBonsa/iBordeBorrarBosqueBoteBoti/nBo/vedaBozalBravoBrazoBrechaBreveBrilloBrincoBrisaBrocaBromaBronceBroteBrujaBruscoBrutoBuceoBucleBuenoBueyBufandaBufo/nBu/hoBuitreBultoBurbujaBurlaBurroBuscarButacaBuzo/nCaballoCabezaCabinaCabraCacaoCada/verCadenaCaerCafe/Cai/daCaima/nCajaCajo/nCalCalamarCalcioCaldoCalidadCalleCalmaCalorCalvoCamaCambioCamelloCaminoCampoCa/ncerCandilCanelaCanguroCanicaCantoCa~aCa~o/nCaobaCaosCapazCapita/nCapoteCaptarCapuchaCaraCarbo/nCa/rcelCaretaCargaCari~oCarneCarpetaCarroCartaCasaCascoCaseroCaspaCastorCatorceCatreCaudalCausaCazoCebollaCederCedroCeldaCe/lebreCelosoCe/lulaCementoCenizaCentroCercaCerdoCerezaCeroCerrarCertezaCe/spedCetroChacalChalecoChampu/ChanclaChapaCharlaChicoChisteChivoChoqueChozaChuletaChuparCiclo/nCiegoCieloCienCiertoCifraCigarroCimaCincoCineCintaCipre/sCircoCiruelaCisneCitaCiudadClamorClanClaroClaseClaveClienteClimaCli/nicaCobreCoccio/nCochinoCocinaCocoCo/digoCodoCofreCogerCoheteCoji/nCojoColaColchaColegioColgarColinaCollarColmoColumnaCombateComerComidaCo/modoCompraCondeConejoCongaConocerConsejoContarCopaCopiaCorazo/nCorbataCorchoCordo/nCoronaCorrerCoserCosmosCostaCra/neoCra/terCrearCrecerCrei/doCremaCri/aCrimenCriptaCrisisCromoCro/nicaCroquetaCrudoCruzCuadroCuartoCuatroCuboCubrirCucharaCuelloCuentoCuerdaCuestaCuevaCuidarCulebraCulpaCultoCumbreCumplirCunaCunetaCuotaCupo/nCu/pulaCurarCuriosoCursoCurvaCutisDamaDanzaDarDardoDa/tilDeberDe/bilDe/cadaDecirDedoDefensaDefinirDejarDelfi/nDelgadoDelitoDemoraDensoDentalDeporteDerechoDerrotaDesayunoDeseoDesfileDesnudoDestinoDesvi/oDetalleDetenerDeudaDi/aDiabloDiademaDiamanteDianaDiarioDibujoDictarDienteDietaDiezDifi/cilDignoDilemaDiluirDineroDirectoDirigirDiscoDise~oDisfrazDivaDivinoDobleDoceDolorDomingoDonDonarDoradoDormirDorsoDosDosisDrago/nDrogaDuchaDudaDueloDue~oDulceDu/oDuqueDurarDurezaDuroE/banoEbrioEcharEcoEcuadorEdadEdicio/nEdificioEditorEducarEfectoEficazEjeEjemploElefanteElegirElementoElevarElipseE/liteElixirElogioEludirEmbudoEmitirEmocio/nEmpateEmpe~oEmpleoEmpresaEnanoEncargoEnchufeEnci/aEnemigoEneroEnfadoEnfermoEnga~oEnigmaEnlaceEnormeEnredoEnsayoEnse~arEnteroEntrarEnvaseEnvi/oE/pocaEquipoErizoEscalaEscenaEscolarEscribirEscudoEsenciaEsferaEsfuerzoEspadaEspejoEspi/aEsposaEspumaEsqui/EstarEsteEstiloEstufaEtapaEternoE/ticaEtniaEvadirEvaluarEventoEvitarExactoExamenExcesoExcusaExentoExigirExilioExistirE/xitoExpertoExplicarExponerExtremoFa/bricaFa/bulaFachadaFa/cilFactorFaenaFajaFaldaFalloFalsoFaltarFamaFamiliaFamosoFarao/nFarmaciaFarolFarsaFaseFatigaFaunaFavorFaxFebreroFechaFelizFeoFeriaFerozFe/rtilFervorFesti/nFiableFianzaFiarFibraFiccio/nFichaFideoFiebreFielFieraFiestaFiguraFijarFijoFilaFileteFilialFiltroFinFincaFingirFinitoFirmaFlacoFlautaFlechaFlorFlotaFluirFlujoFlu/orFobiaFocaFogataFogo/nFolioFolletoFondoFormaForroFortunaForzarFosaFotoFracasoFra/gilFranjaFraseFraudeFrei/rFrenoFresaFri/oFritoFrutaFuegoFuenteFuerzaFugaFumarFuncio/nFundaFurgo/nFuriaFusilFu/tbolFuturoGacelaGafasGaitaGajoGalaGaleri/aGalloGambaGanarGanchoGangaGansoGarajeGarzaGasolinaGastarGatoGavila/nGemeloGemirGenGe/neroGenioGenteGeranioGerenteGermenGestoGiganteGimnasioGirarGiroGlaciarGloboGloriaGolGolfoGolosoGolpeGomaGordoGorilaGorraGotaGoteoGozarGradaGra/ficoGranoGrasaGratisGraveGrietaGrilloGripeGrisGritoGrosorGru/aGruesoGrumoGrupoGuanteGuapoGuardiaGuerraGui/aGui~oGuionGuisoGuitarraGusanoGustarHaberHa/bilHablarHacerHachaHadaHallarHamacaHarinaHazHaza~aHebillaHebraHechoHeladoHelioHembraHerirHermanoHe/roeHervirHieloHierroHi/gadoHigieneHijoHimnoHistoriaHocicoHogarHogueraHojaHombreHongoHonorHonraHoraHormigaHornoHostilHoyoHuecoHuelgaHuertaHuesoHuevoHuidaHuirHumanoHu/medoHumildeHumoHundirHuraca/nHurtoIconoIdealIdiomaI/doloIglesiaIglu/IgualIlegalIlusio/nImagenIma/nImitarImparImperioImponerImpulsoIncapazI/ndiceInerteInfielInformeIngenioInicioInmensoInmuneInnatoInsectoInstanteIntere/sI/ntimoIntuirInu/tilInviernoIraIrisIroni/aIslaIsloteJabali/Jabo/nJamo/nJarabeJardi/nJarraJaulaJazmi/nJefeJeringaJineteJornadaJorobaJovenJoyaJuergaJuevesJuezJugadorJugoJugueteJuicioJuncoJunglaJunioJuntarJu/piterJurarJustoJuvenilJuzgarKiloKoalaLabioLacioLacraLadoLadro/nLagartoLa/grimaLagunaLaicoLamerLa/minaLa/mparaLanaLanchaLangostaLanzaLa/pizLargoLarvaLa/stimaLataLa/texLatirLaurelLavarLazoLealLeccio/nLecheLectorLeerLegio/nLegumbreLejanoLenguaLentoLe~aLeo/nLeopardoLesio/nLetalLetraLeveLeyendaLibertadLibroLicorLi/derLidiarLienzoLigaLigeroLimaLi/miteLimo/nLimpioLinceLindoLi/neaLingoteLinoLinternaLi/quidoLisoListaLiteraLitioLitroLlagaLlamaLlantoLlaveLlegarLlenarLlevarLlorarLloverLluviaLoboLocio/nLocoLocuraLo/gicaLogroLombrizLomoLonjaLoteLuchaLucirLugarLujoLunaLunesLupaLustroLutoLuzMacetaMachoMaderaMadreMaduroMaestroMafiaMagiaMagoMai/zMaldadMaletaMallaMaloMama/MamboMamutMancoMandoManejarMangaManiqui/ManjarManoMansoMantaMa~anaMapaMa/quinaMarMarcoMareaMarfilMargenMaridoMa/rmolMarro/nMartesMarzoMasaMa/scaraMasivoMatarMateriaMatizMatrizMa/ximoMayorMazorcaMechaMedallaMedioMe/dulaMejillaMejorMelenaMelo/nMemoriaMenorMensajeMenteMenu/MercadoMerengueMe/ritoMesMeso/nMetaMeterMe/todoMetroMezclaMiedoMielMiembroMigaMilMilagroMilitarMillo/nMimoMinaMineroMi/nimoMinutoMiopeMirarMisaMiseriaMisilMismoMitadMitoMochilaMocio/nModaModeloMohoMojarMoldeMolerMolinoMomentoMomiaMonarcaMonedaMonjaMontoMo~oMoradaMorderMorenoMorirMorroMorsaMortalMoscaMostrarMotivoMoverMo/vilMozoMuchoMudarMuebleMuelaMuerteMuestraMugreMujerMulaMuletaMultaMundoMu~ecaMuralMuroMu/sculoMuseoMusgoMu/sicaMusloNa/carNacio/nNadarNaipeNaranjaNarizNarrarNasalNatalNativoNaturalNa/useaNavalNaveNavidadNecioNe/ctarNegarNegocioNegroNeo/nNervioNetoNeutroNevarNeveraNichoNidoNieblaNietoNi~ezNi~oNi/tidoNivelNoblezaNocheNo/minaNoriaNormaNorteNotaNoticiaNovatoNovelaNovioNubeNucaNu/cleoNudilloNudoNueraNueveNuezNuloNu/meroNutriaOasisObesoObispoObjetoObraObreroObservarObtenerObvioOcaOcasoOce/anoOchentaOchoOcioOcreOctavoOctubreOcultoOcuparOcurrirOdiarOdioOdiseaOesteOfensaOfertaOficioOfrecerOgroOi/doOi/rOjoOlaOleadaOlfatoOlivoOllaOlmoOlorOlvidoOmbligoOndaOnzaOpacoOpcio/nO/peraOpinarOponerOptarO/pticaOpuestoOracio/nOradorOralO/rbitaOrcaOrdenOrejaO/rganoOrgi/aOrgulloOrienteOrigenOrillaOroOrquestaOrugaOsadi/aOscuroOseznoOsoOstraOto~oOtroOvejaO/vuloO/xidoOxi/genoOyenteOzonoPactoPadrePaellaPa/ginaPagoPai/sPa/jaroPalabraPalcoPaletaPa/lidoPalmaPalomaPalparPanPanalPa/nicoPanteraPa~ueloPapa/PapelPapillaPaquetePararParcelaParedParirParoPa/rpadoParquePa/rrafoPartePasarPaseoPasio/nPasoPastaPataPatioPatriaPausaPautaPavoPayasoPeato/nPecadoPeceraPechoPedalPedirPegarPeinePelarPelda~oPeleaPeligroPellejoPeloPelucaPenaPensarPe~o/nPeo/nPeorPepinoPeque~oPeraPerchaPerderPerezaPerfilPericoPerlaPermisoPerroPersonaPesaPescaPe/simoPesta~aPe/taloPetro/leoPezPezu~aPicarPicho/nPiePiedraPiernaPiezaPijamaPilarPilotoPimientaPinoPintorPinzaPi~aPiojoPipaPirataPisarPiscinaPisoPistaPito/nPizcaPlacaPlanPlataPlayaPlazaPleitoPlenoPlomoPlumaPluralPobrePocoPoderPodioPoemaPoesi/aPoetaPolenPolici/aPolloPolvoPomadaPomeloPomoPompaPonerPorcio/nPortalPosadaPoseerPosiblePostePotenciaPotroPozoPradoPrecozPreguntaPremioPrensaPresoPrevioPrimoPri/ncipePrisio/nPrivarProaProbarProcesoProductoProezaProfesorProgramaProlePromesaProntoPropioPro/ximoPruebaPu/blicoPucheroPudorPuebloPuertaPuestoPulgaPulirPulmo/nPulpoPulsoPumaPuntoPu~alPu~oPupaPupilaPure/QuedarQuejaQuemarQuererQuesoQuietoQui/micaQuinceQuitarRa/banoRabiaRaboRacio/nRadicalRai/zRamaRampaRanchoRangoRapazRa/pidoRaptoRasgoRaspaRatoRayoRazaRazo/nReaccio/nRealidadReba~oReboteRecaerRecetaRechazoRecogerRecreoRectoRecursoRedRedondoReducirReflejoReformaRefra/nRefugioRegaloRegirReglaRegresoRehe/nReinoRei/rRejaRelatoRelevoRelieveRellenoRelojRemarRemedioRemoRencorRendirRentaRepartoRepetirReposoReptilResRescateResinaRespetoRestoResumenRetiroRetornoRetratoReunirReve/sRevistaReyRezarRicoRiegoRiendaRiesgoRifaRi/gidoRigorRinco/nRi~o/nRi/oRiquezaRisaRitmoRitoRizoRobleRoceRociarRodarRodeoRodillaRoerRojizoRojoRomeroRomperRonRoncoRondaRopaRoperoRosaRoscaRostroRotarRubi/RuborRudoRuedaRugirRuidoRuinaRuletaRuloRumboRumorRupturaRutaRutinaSa/badoSaberSabioSableSacarSagazSagradoSalaSaldoSaleroSalirSalmo/nSalo/nSalsaSaltoSaludSalvarSambaSancio/nSandi/aSanearSangreSanidadSanoSantoSapoSaqueSardinaSarte/nSastreSata/nSaunaSaxofo/nSeccio/nSecoSecretoSectaSedSeguirSeisSelloSelvaSemanaSemillaSendaSensorSe~alSe~orSepararSepiaSequi/aSerSerieSermo/nServirSesentaSesio/nSetaSetentaSeveroSexoSextoSidraSiestaSieteSigloSignoSi/labaSilbarSilencioSillaSi/mboloSimioSirenaSistemaSitioSituarSobreSocioSodioSolSolapaSoldadoSoledadSo/lidoSoltarSolucio/nSombraSondeoSonidoSonoroSonrisaSopaSoplarSoporteSordoSorpresaSorteoSoste/nSo/tanoSuaveSubirSucesoSudorSuegraSueloSue~oSuerteSufrirSujetoSulta/nSumarSuperarSuplirSuponerSupremoSurSurcoSure~oSurgirSustoSutilTabacoTabiqueTablaTabu/TacoTactoTajoTalarTalcoTalentoTallaTalo/nTama~oTamborTangoTanqueTapaTapeteTapiaTapo/nTaquillaTardeTareaTarifaTarjetaTarotTarroTartaTatuajeTauroTazaTazo/nTeatroTechoTeclaTe/cnicaTejadoTejerTejidoTelaTele/fonoTemaTemorTemploTenazTenderTenerTenisTensoTeori/aTerapiaTercoTe/rminoTernuraTerrorTesisTesoroTestigoTeteraTextoTezTibioTiburo/nTiempoTiendaTierraTiesoTigreTijeraTildeTimbreTi/midoTimoTintaTi/oTi/picoTipoTiraTiro/nTita/nTi/tereTi/tuloTizaToallaTobilloTocarTocinoTodoTogaToldoTomarTonoTontoToparTopeToqueTo/raxToreroTormentaTorneoToroTorpedoTorreTorsoTortugaTosToscoToserTo/xicoTrabajoTractorTraerTra/ficoTragoTrajeTramoTranceTratoTraumaTrazarTre/bolTreguaTreintaTrenTreparTresTribuTrigoTripaTristeTriunfoTrofeoTrompaTroncoTropaTroteTrozoTrucoTruenoTrufaTuberi/aTuboTuertoTumbaTumorTu/nelTu/nicaTurbinaTurismoTurnoTutorUbicarU/lceraUmbralUnidadUnirUniversoUnoUntarU~aUrbanoUrbeUrgenteUrnaUsarUsuarioU/tilUtopi/aUvaVacaVaci/oVacunaVagarVagoVainaVajillaValeVa/lidoValleValorVa/lvulaVampiroVaraVariarVaro/nVasoVecinoVectorVehi/culoVeinteVejezVelaVeleroVelozVenaVencerVendaVenenoVengarVenirVentaVenusVerVeranoVerboVerdeVeredaVerjaVersoVerterVi/aViajeVibrarVicioVi/ctimaVidaVi/deoVidrioViejoViernesVigorVilVillaVinagreVinoVi~edoVioli/nViralVirgoVirtudVisorVi/speraVistaVitaminaViudoVivazViveroVivirVivoVolca/nVolumenVolverVorazVotarVotoVozVueloVulgarYacerYateYeguaYemaYernoYesoYodoYogaYogurZafiroZanjaZapatoZarzaZonaZorroZumoZurdo\";\nconst lookup = {};\nlet wordlist = null;\nfunction dropDiacritic(word) {\n    logger.checkNormalize();\n    return toUtf8String(Array.prototype.filter.call(toUtf8Bytes(word.normalize(\"NFD\").toLowerCase()), (c) => {\n        return ((c >= 65 && c <= 90) || (c >= 97 && c <= 123));\n    }));\n}\nfunction expand(word) {\n    const output = [];\n    Array.prototype.forEach.call(toUtf8Bytes(word), (c) => {\n        // Acute accent\n        if (c === 47) {\n            output.push(204);\n            output.push(129);\n            // n-tilde\n        }\n        else if (c === 126) {\n            output.push(110);\n            output.push(204);\n            output.push(131);\n        }\n        else {\n            output.push(c);\n        }\n    });\n    return toUtf8String(output);\n}\nfunction loadWords(lang) {\n    if (wordlist != null) {\n        return;\n    }\n    wordlist = words.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \").map((w) => expand(w));\n    wordlist.forEach((word, index) => {\n        lookup[dropDiacritic(word)] = index;\n    });\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (Wordlist.check(lang) !== \"0xf74fb7092aeacdfbf8959557de22098da512207fb9f109cb526994938cf40300\") {\n        wordlist = null;\n        throw new Error(\"BIP39 Wordlist for es (Spanish) FAILED\");\n    }\n}\nclass LangEs extends Wordlist {\n    constructor() {\n        super(\"es\");\n    }\n    getWord(index) {\n        loadWords(this);\n        return wordlist[index];\n    }\n    getWordIndex(word) {\n        loadWords(this);\n        return lookup[dropDiacritic(word)];\n    }\n}\nconst langEs = new LangEs();\nWordlist.register(langEs);\nexport { langEs };\n//# sourceMappingURL=lang-es.js.map","\"use strict\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { logger, Wordlist } from \"./wordlist\";\nconst words = \"AbaisserAbandonAbdiquerAbeilleAbolirAborderAboutirAboyerAbrasifAbreuverAbriterAbrogerAbruptAbsenceAbsoluAbsurdeAbusifAbyssalAcade/mieAcajouAcarienAccablerAccepterAcclamerAccoladeAccrocheAccuserAcerbeAchatAcheterAcidulerAcierAcompteAcque/rirAcronymeActeurActifActuelAdepteAde/quatAdhe/sifAdjectifAdjugerAdmettreAdmirerAdopterAdorerAdoucirAdresseAdroitAdulteAdverbeAe/rerAe/ronefAffaireAffecterAfficheAffreuxAffublerAgacerAgencerAgileAgiterAgraferAgre/ableAgrumeAiderAiguilleAilierAimableAisanceAjouterAjusterAlarmerAlchimieAlerteAlge-breAlgueAlie/nerAlimentAlle/gerAlliageAllouerAllumerAlourdirAlpagaAltesseAlve/oleAmateurAmbiguAmbreAme/nagerAmertumeAmidonAmiralAmorcerAmourAmovibleAmphibieAmpleurAmusantAnalyseAnaphoreAnarchieAnatomieAncienAne/antirAngleAngoisseAnguleuxAnimalAnnexerAnnonceAnnuelAnodinAnomalieAnonymeAnormalAntenneAntidoteAnxieuxApaiserApe/ritifAplanirApologieAppareilAppelerApporterAppuyerAquariumAqueducArbitreArbusteArdeurArdoiseArgentArlequinArmatureArmementArmoireArmureArpenterArracherArriverArroserArsenicArte/rielArticleAspectAsphalteAspirerAssautAsservirAssietteAssocierAssurerAsticotAstreAstuceAtelierAtomeAtriumAtroceAttaqueAttentifAttirerAttraperAubaineAubergeAudaceAudibleAugurerAuroreAutomneAutrucheAvalerAvancerAvariceAvenirAverseAveugleAviateurAvideAvionAviserAvoineAvouerAvrilAxialAxiomeBadgeBafouerBagageBaguetteBaignadeBalancerBalconBaleineBalisageBambinBancaireBandageBanlieueBannie-reBanquierBarbierBarilBaronBarqueBarrageBassinBastionBatailleBateauBatterieBaudrierBavarderBeletteBe/lierBeloteBe/ne/ficeBerceauBergerBerlineBermudaBesaceBesogneBe/tailBeurreBiberonBicycleBiduleBijouBilanBilingueBillardBinaireBiologieBiopsieBiotypeBiscuitBisonBistouriBitumeBizarreBlafardBlagueBlanchirBlessantBlinderBlondBloquerBlousonBobardBobineBoireBoiserBolideBonbonBondirBonheurBonifierBonusBordureBorneBotteBoucleBoueuxBougieBoulonBouquinBourseBoussoleBoutiqueBoxeurBrancheBrasierBraveBrebisBre-cheBreuvageBricolerBrigadeBrillantBriocheBriqueBrochureBroderBronzerBrousseBroyeurBrumeBrusqueBrutalBruyantBuffleBuissonBulletinBureauBurinBustierButinerButoirBuvableBuvetteCabanonCabineCachetteCadeauCadreCafe/ineCaillouCaissonCalculerCalepinCalibreCalmerCalomnieCalvaireCamaradeCame/raCamionCampagneCanalCanetonCanonCantineCanularCapableCaporalCapriceCapsuleCapterCapucheCarabineCarboneCaresserCaribouCarnageCarotteCarreauCartonCascadeCasierCasqueCassureCauserCautionCavalierCaverneCaviarCe/dilleCeintureCe/lesteCelluleCendrierCensurerCentralCercleCe/re/bralCeriseCernerCerveauCesserChagrinChaiseChaleurChambreChanceChapitreCharbonChasseurChatonChaussonChavirerChemiseChenilleChe/quierChercherChevalChienChiffreChignonChime-reChiotChlorureChocolatChoisirChoseChouetteChromeChuteCigareCigogneCimenterCine/maCintrerCirculerCirerCirqueCiterneCitoyenCitronCivilClaironClameurClaquerClasseClavierClientClignerClimatClivageClocheClonageCloporteCobaltCobraCocasseCocotierCoderCodifierCoffreCognerCohe/sionCoifferCoincerCole-reColibriCollineColmaterColonelCombatCome/dieCommandeCompactConcertConduireConfierCongelerConnoterConsonneContactConvexeCopainCopieCorailCorbeauCordageCornicheCorpusCorrectCorte-geCosmiqueCostumeCotonCoudeCoupureCourageCouteauCouvrirCoyoteCrabeCrainteCravateCrayonCre/atureCre/diterCre/meuxCreuserCrevetteCriblerCrierCristalCrite-reCroireCroquerCrotaleCrucialCruelCrypterCubiqueCueillirCuille-reCuisineCuivreCulminerCultiverCumulerCupideCuratifCurseurCyanureCycleCylindreCyniqueDaignerDamierDangerDanseurDauphinDe/battreDe/biterDe/borderDe/briderDe/butantDe/calerDe/cembreDe/chirerDe/ciderDe/clarerDe/corerDe/crireDe/cuplerDe/daleDe/ductifDe/esseDe/fensifDe/filerDe/frayerDe/gagerDe/givrerDe/glutirDe/graferDe/jeunerDe/liceDe/logerDemanderDemeurerDe/molirDe/nicherDe/nouerDentelleDe/nuderDe/partDe/penserDe/phaserDe/placerDe/poserDe/rangerDe/roberDe/sastreDescenteDe/sertDe/signerDe/sobe/irDessinerDestrierDe/tacherDe/testerDe/tourerDe/tresseDevancerDevenirDevinerDevoirDiableDialogueDiamantDicterDiffe/rerDige/rerDigitalDigneDiluerDimancheDiminuerDioxydeDirectifDirigerDiscuterDisposerDissiperDistanceDivertirDiviserDocileDocteurDogmeDoigtDomaineDomicileDompterDonateurDonjonDonnerDopamineDortoirDorureDosageDoseurDossierDotationDouanierDoubleDouceurDouterDoyenDragonDraperDresserDribblerDroitureDuperieDuplexeDurableDurcirDynastieE/blouirE/carterE/charpeE/chelleE/clairerE/clipseE/cloreE/cluseE/coleE/conomieE/corceE/couterE/craserE/cre/merE/crivainE/crouE/cumeE/cureuilE/difierE/duquerEffacerEffectifEffigieEffortEffrayerEffusionE/galiserE/garerE/jecterE/laborerE/largirE/lectronE/le/gantE/le/phantE/le-veE/ligibleE/litismeE/logeE/luciderE/luderEmballerEmbellirEmbryonE/meraudeE/missionEmmenerE/motionE/mouvoirEmpereurEmployerEmporterEmpriseE/mulsionEncadrerEnche-reEnclaveEncocheEndiguerEndosserEndroitEnduireE/nergieEnfanceEnfermerEnfouirEngagerEnginEngloberE/nigmeEnjamberEnjeuEnleverEnnemiEnnuyeuxEnrichirEnrobageEnseigneEntasserEntendreEntierEntourerEntraverE/nume/rerEnvahirEnviableEnvoyerEnzymeE/olienE/paissirE/pargneE/patantE/pauleE/picerieE/pide/mieE/pierE/pilogueE/pineE/pisodeE/pitapheE/poqueE/preuveE/prouverE/puisantE/querreE/quipeE/rigerE/rosionErreurE/ruptionEscalierEspadonEspe-ceEspie-gleEspoirEspritEsquiverEssayerEssenceEssieuEssorerEstimeEstomacEstradeE/tage-reE/talerE/tancheE/tatiqueE/teindreE/tendoirE/ternelE/thanolE/thiqueEthnieE/tirerE/tofferE/toileE/tonnantE/tourdirE/trangeE/troitE/tudeEuphorieE/valuerE/vasionE/ventailE/videnceE/viterE/volutifE/voquerExactExage/rerExaucerExcellerExcitantExclusifExcuseExe/cuterExempleExercerExhalerExhorterExigenceExilerExisterExotiqueExpe/dierExplorerExposerExprimerExquisExtensifExtraireExulterFableFabuleuxFacetteFacileFactureFaiblirFalaiseFameuxFamilleFarceurFarfeluFarineFaroucheFascinerFatalFatigueFauconFautifFaveurFavoriFe/brileFe/conderFe/de/rerFe/linFemmeFe/murFendoirFe/odalFermerFe/roceFerveurFestivalFeuilleFeutreFe/vrierFiascoFicelerFictifFide-leFigureFilatureFiletageFilie-reFilleulFilmerFilouFiltrerFinancerFinirFioleFirmeFissureFixerFlairerFlammeFlasqueFlatteurFle/auFle-cheFleurFlexionFloconFloreFluctuerFluideFluvialFolieFonderieFongibleFontaineForcerForgeronFormulerFortuneFossileFoudreFouge-reFouillerFoulureFourmiFragileFraiseFranchirFrapperFrayeurFre/gateFreinerFrelonFre/mirFre/ne/sieFre-reFriableFrictionFrissonFrivoleFroidFromageFrontalFrotterFruitFugitifFuiteFureurFurieuxFurtifFusionFuturGagnerGalaxieGalerieGambaderGarantirGardienGarnirGarrigueGazelleGazonGe/antGe/latineGe/luleGendarmeGe/ne/ralGe/nieGenouGentilGe/ologieGe/ome-treGe/raniumGermeGestuelGeyserGibierGiclerGirafeGivreGlaceGlaiveGlisserGlobeGloireGlorieuxGolfeurGommeGonflerGorgeGorilleGoudronGouffreGoulotGoupilleGourmandGoutteGraduelGraffitiGraineGrandGrappinGratuitGravirGrenatGriffureGrillerGrimperGrognerGronderGrotteGroupeGrugerGrutierGruye-reGue/pardGuerrierGuideGuimauveGuitareGustatifGymnasteGyrostatHabitudeHachoirHalteHameauHangarHannetonHaricotHarmonieHarponHasardHe/liumHe/matomeHerbeHe/rissonHermineHe/ronHe/siterHeureuxHibernerHibouHilarantHistoireHiverHomardHommageHomoge-neHonneurHonorerHonteuxHordeHorizonHorlogeHormoneHorribleHouleuxHousseHublotHuileuxHumainHumbleHumideHumourHurlerHydromelHygie-neHymneHypnoseIdylleIgnorerIguaneIlliciteIllusionImageImbiberImiterImmenseImmobileImmuableImpactImpe/rialImplorerImposerImprimerImputerIncarnerIncendieIncidentInclinerIncoloreIndexerIndiceInductifIne/ditIneptieInexactInfiniInfligerInformerInfusionInge/rerInhalerInhiberInjecterInjureInnocentInoculerInonderInscrireInsecteInsigneInsoliteInspirerInstinctInsulterIntactIntenseIntimeIntrigueIntuitifInutileInvasionInventerInviterInvoquerIroniqueIrradierIrre/elIrriterIsolerIvoireIvresseJaguarJaillirJambeJanvierJardinJaugerJauneJavelotJetableJetonJeudiJeunesseJoindreJoncherJonglerJoueurJouissifJournalJovialJoyauJoyeuxJubilerJugementJuniorJuponJuristeJusticeJuteuxJuve/nileKayakKimonoKiosqueLabelLabialLabourerLace/rerLactoseLaguneLaineLaisserLaitierLambeauLamelleLampeLanceurLangageLanterneLapinLargeurLarmeLaurierLavaboLavoirLectureLe/galLe/gerLe/gumeLessiveLettreLevierLexiqueLe/zardLiasseLibe/rerLibreLicenceLicorneLie-geLie-vreLigatureLigoterLigueLimerLimiteLimonadeLimpideLine/aireLingotLionceauLiquideLisie-reListerLithiumLitigeLittoralLivreurLogiqueLointainLoisirLombricLoterieLouerLourdLoutreLouveLoyalLubieLucideLucratifLueurLugubreLuisantLumie-reLunaireLundiLuronLutterLuxueuxMachineMagasinMagentaMagiqueMaigreMaillonMaintienMairieMaisonMajorerMalaxerMale/ficeMalheurMaliceMalletteMammouthMandaterManiableManquantManteauManuelMarathonMarbreMarchandMardiMaritimeMarqueurMarronMartelerMascotteMassifMate/rielMatie-reMatraqueMaudireMaussadeMauveMaximalMe/chantMe/connuMe/dailleMe/decinMe/diterMe/duseMeilleurMe/langeMe/lodieMembreMe/moireMenacerMenerMenhirMensongeMentorMercrediMe/riteMerleMessagerMesureMe/talMe/te/oreMe/thodeMe/tierMeubleMiaulerMicrobeMietteMignonMigrerMilieuMillionMimiqueMinceMine/ralMinimalMinorerMinuteMiracleMiroiterMissileMixteMobileModerneMoelleuxMondialMoniteurMonnaieMonotoneMonstreMontagneMonumentMoqueurMorceauMorsureMortierMoteurMotifMoucheMoufleMoulinMoussonMoutonMouvantMultipleMunitionMurailleMure-neMurmureMuscleMuse/umMusicienMutationMuterMutuelMyriadeMyrtilleMyste-reMythiqueNageurNappeNarquoisNarrerNatationNationNatureNaufrageNautiqueNavireNe/buleuxNectarNe/fasteNe/gationNe/gligerNe/gocierNeigeNerveuxNettoyerNeuroneNeutronNeveuNicheNickelNitrateNiveauNobleNocifNocturneNoirceurNoisetteNomadeNombreuxNommerNormatifNotableNotifierNotoireNourrirNouveauNovateurNovembreNoviceNuageNuancerNuireNuisibleNume/roNuptialNuqueNutritifObe/irObjectifObligerObscurObserverObstacleObtenirObturerOccasionOccuperOce/anOctobreOctroyerOctuplerOculaireOdeurOdorantOffenserOfficierOffrirOgiveOiseauOisillonOlfactifOlivierOmbrageOmettreOnctueuxOndulerOne/reuxOniriqueOpaleOpaqueOpe/rerOpinionOpportunOpprimerOpterOptiqueOrageuxOrangeOrbiteOrdonnerOreilleOrganeOrgueilOrificeOrnementOrqueOrtieOscillerOsmoseOssatureOtarieOuraganOursonOutilOutragerOuvrageOvationOxydeOxyge-neOzonePaisiblePalacePalmare-sPalourdePalperPanachePandaPangolinPaniquerPanneauPanoramaPantalonPapayePapierPapoterPapyrusParadoxeParcelleParesseParfumerParlerParoleParrainParsemerPartagerParureParvenirPassionPaste-quePaternelPatiencePatronPavillonPavoiserPayerPaysagePeignePeintrePelagePe/licanPellePelousePeluchePendulePe/ne/trerPe/niblePensifPe/nuriePe/pitePe/plumPerdrixPerforerPe/riodePermuterPerplexePersilPertePeserPe/talePetitPe/trirPeuplePharaonPhobiePhoquePhotonPhrasePhysiquePianoPicturalPie-cePierrePieuvrePilotePinceauPipettePiquerPiroguePiscinePistonPivoterPixelPizzaPlacardPlafondPlaisirPlanerPlaquePlastronPlateauPleurerPlexusPliagePlombPlongerPluiePlumagePochettePoe/siePoe-tePointePoirierPoissonPoivrePolairePolicierPollenPolygonePommadePompierPonctuelPonde/rerPoneyPortiquePositionPosse/derPosturePotagerPoteauPotionPoucePoulainPoumonPourprePoussinPouvoirPrairiePratiquePre/cieuxPre/direPre/fixePre/ludePre/nomPre/sencePre/textePre/voirPrimitifPrincePrisonPriverProble-meProce/derProdigeProfondProgre-sProieProjeterProloguePromenerPropreProspe-reProte/gerProuesseProverbePrudencePruneauPsychosePublicPuceronPuiserPulpePulsarPunaisePunitifPupitrePurifierPuzzlePyramideQuasarQuerelleQuestionQuie/tudeQuitterQuotientRacineRaconterRadieuxRagondinRaideurRaisinRalentirRallongeRamasserRapideRasageRatisserRavagerRavinRayonnerRe/actifRe/agirRe/aliserRe/animerRecevoirRe/citerRe/clamerRe/colterRecruterReculerRecyclerRe/digerRedouterRefaireRe/flexeRe/formerRefrainRefugeRe/galienRe/gionRe/glageRe/gulierRe/ite/rerRejeterRejouerRelatifReleverReliefRemarqueReme-deRemiseRemonterRemplirRemuerRenardRenfortReniflerRenoncerRentrerRenvoiReplierReporterRepriseReptileRequinRe/serveRe/sineuxRe/soudreRespectResterRe/sultatRe/tablirRetenirRe/ticuleRetomberRetracerRe/unionRe/ussirRevancheRevivreRe/volteRe/vulsifRichesseRideauRieurRigideRigolerRincerRiposterRisibleRisqueRituelRivalRivie-reRocheuxRomanceRompreRonceRondinRoseauRosierRotatifRotorRotuleRougeRouilleRouleauRoutineRoyaumeRubanRubisRucheRuelleRugueuxRuinerRuisseauRuserRustiqueRythmeSablerSaboterSabreSacocheSafariSagesseSaisirSaladeSaliveSalonSaluerSamediSanctionSanglierSarcasmeSardineSaturerSaugrenuSaumonSauterSauvageSavantSavonnerScalpelScandaleSce/le/ratSce/narioSceptreSche/maScienceScinderScoreScrutinSculpterSe/anceSe/cableSe/cherSecouerSe/cre/terSe/datifSe/duireSeigneurSe/jourSe/lectifSemaineSemblerSemenceSe/minalSe/nateurSensibleSentenceSe/parerSe/quenceSereinSergentSe/rieuxSerrureSe/rumServiceSe/sameSe/virSevrageSextupleSide/ralSie-cleSie/gerSifflerSigleSignalSilenceSiliciumSimpleSince-reSinistreSiphonSiropSismiqueSituerSkierSocialSocleSodiumSoigneuxSoldatSoleilSolitudeSolubleSombreSommeilSomnolerSondeSongeurSonnetteSonoreSorcierSortirSosieSottiseSoucieuxSoudureSouffleSouleverSoupapeSourceSoutirerSouvenirSpacieuxSpatialSpe/cialSphe-reSpiralStableStationSternumStimulusStipulerStrictStudieuxStupeurStylisteSublimeSubstratSubtilSubvenirSucce-sSucreSuffixeSugge/rerSuiveurSulfateSuperbeSupplierSurfaceSuricateSurmenerSurpriseSursautSurvieSuspectSyllabeSymboleSyme/trieSynapseSyntaxeSyste-meTabacTablierTactileTaillerTalentTalismanTalonnerTambourTamiserTangibleTapisTaquinerTarderTarifTartineTasseTatamiTatouageTaupeTaureauTaxerTe/moinTemporelTenailleTendreTeneurTenirTensionTerminerTerneTerribleTe/tineTexteThe-meThe/orieThe/rapieThoraxTibiaTie-deTimideTirelireTiroirTissuTitaneTitreTituberTobogganTole/rantTomateToniqueTonneauToponymeTorcheTordreTornadeTorpilleTorrentTorseTortueTotemToucherTournageTousserToxineTractionTraficTragiqueTrahirTrainTrancherTravailTre-fleTremperTre/sorTreuilTriageTribunalTricoterTrilogieTriompheTriplerTriturerTrivialTromboneTroncTropicalTroupeauTuileTulipeTumulteTunnelTurbineTuteurTutoyerTuyauTympanTyphonTypiqueTyranUbuesqueUltimeUltrasonUnanimeUnifierUnionUniqueUnitaireUniversUraniumUrbainUrticantUsageUsineUsuelUsureUtileUtopieVacarmeVaccinVagabondVagueVaillantVaincreVaisseauValableValiseVallonValveVampireVanilleVapeurVarierVaseuxVassalVasteVecteurVedetteVe/ge/talVe/hiculeVeinardVe/loceVendrediVe/ne/rerVengerVenimeuxVentouseVerdureVe/rinVernirVerrouVerserVertuVestonVe/te/ranVe/tusteVexantVexerViaducViandeVictoireVidangeVide/oVignetteVigueurVilainVillageVinaigreViolonVipe-reVirementVirtuoseVirusVisageViseurVisionVisqueuxVisuelVitalVitesseViticoleVitrineVivaceVivipareVocationVoguerVoileVoisinVoitureVolailleVolcanVoltigerVolumeVoraceVortexVoterVouloirVoyageVoyelleWagonXe/nonYachtZe-breZe/nithZesteZoologie\";\nlet wordlist = null;\nconst lookup = {};\nfunction dropDiacritic(word) {\n    logger.checkNormalize();\n    return toUtf8String(Array.prototype.filter.call(toUtf8Bytes(word.normalize(\"NFD\").toLowerCase()), (c) => {\n        return ((c >= 65 && c <= 90) || (c >= 97 && c <= 123));\n    }));\n}\nfunction expand(word) {\n    const output = [];\n    Array.prototype.forEach.call(toUtf8Bytes(word), (c) => {\n        // Acute accent\n        if (c === 47) {\n            output.push(204);\n            output.push(129);\n            // Grave accent\n        }\n        else if (c === 45) {\n            output.push(204);\n            output.push(128);\n        }\n        else {\n            output.push(c);\n        }\n    });\n    return toUtf8String(output);\n}\nfunction loadWords(lang) {\n    if (wordlist != null) {\n        return;\n    }\n    wordlist = words.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \").map((w) => expand(w));\n    wordlist.forEach((word, index) => {\n        lookup[dropDiacritic(word)] = index;\n    });\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (Wordlist.check(lang) !== \"0x51deb7ae009149dc61a6bd18a918eb7ac78d2775726c68e598b92d002519b045\") {\n        wordlist = null;\n        throw new Error(\"BIP39 Wordlist for fr (French) FAILED\");\n    }\n}\nclass LangFr extends Wordlist {\n    constructor() {\n        super(\"fr\");\n    }\n    getWord(index) {\n        loadWords(this);\n        return wordlist[index];\n    }\n    getWordIndex(word) {\n        loadWords(this);\n        return lookup[dropDiacritic(word)];\n    }\n}\nconst langFr = new LangFr();\nWordlist.register(langFr);\nexport { langFr };\n//# sourceMappingURL=lang-fr.js.map","\"use strict\";\nimport { hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { logger, Wordlist } from \"./wordlist\";\nconst data = [\n    // 4-kana words\n    \"AQRASRAGBAGUAIRAHBAghAURAdBAdcAnoAMEAFBAFCBKFBQRBSFBCXBCDBCHBGFBEQBpBBpQBIkBHNBeOBgFBVCBhBBhNBmOBmRBiHBiFBUFBZDBvFBsXBkFBlcBjYBwDBMBBTBBTRBWBBWXXaQXaRXQWXSRXCFXYBXpHXOQXHRXhRXuRXmXXbRXlXXwDXTRXrCXWQXWGaBWaKcaYgasFadQalmaMBacAKaRKKBKKXKKjKQRKDRKCYKCRKIDKeVKHcKlXKjHKrYNAHNBWNaRNKcNIBNIONmXNsXNdXNnBNMBNRBNrXNWDNWMNFOQABQAHQBrQXBQXFQaRQKXQKDQKOQKFQNBQNDQQgQCXQCDQGBQGDQGdQYXQpBQpQQpHQLXQHuQgBQhBQhCQuFQmXQiDQUFQZDQsFQdRQkHQbRQlOQlmQPDQjDQwXQMBQMDQcFQTBQTHQrDDXQDNFDGBDGQDGRDpFDhFDmXDZXDbRDMYDRdDTRDrXSAhSBCSBrSGQSEQSHBSVRShYShkSyQSuFSiBSdcSoESocSlmSMBSFBSFKSFNSFdSFcCByCaRCKcCSBCSRCCrCGbCEHCYXCpBCpQCIBCIHCeNCgBCgFCVECVcCmkCmwCZXCZFCdRClOClmClFCjDCjdCnXCwBCwXCcRCFQCFjGXhGNhGDEGDMGCDGCHGIFGgBGVXGVEGVRGmXGsXGdYGoSGbRGnXGwXGwDGWRGFNGFLGFOGFdGFkEABEBDEBFEXOEaBEKSENBENDEYXEIgEIkEgBEgQEgHEhFEudEuFEiBEiHEiFEZDEvBEsXEsFEdXEdREkFEbBEbRElFEPCEfkEFNYAEYAhYBNYQdYDXYSRYCEYYoYgQYgRYuRYmCYZTYdBYbEYlXYjQYRbYWRpKXpQopQnpSFpCXpIBpISphNpdBpdRpbRpcZpFBpFNpFDpFopFrLADLBuLXQLXcLaFLCXLEhLpBLpFLHXLeVLhILdHLdRLoDLbRLrXIABIBQIBCIBsIBoIBMIBRIXaIaRIKYIKRINBINuICDIGBIIDIIkIgRIxFIyQIiHIdRIbYIbRIlHIwRIMYIcRIRVITRIFBIFNIFQOABOAFOBQOaFONBONMOQFOSFOCDOGBOEQOpBOLXOIBOIFOgQOgFOyQOycOmXOsXOdIOkHOMEOMkOWWHBNHXNHXWHNXHDuHDRHSuHSRHHoHhkHmRHdRHkQHlcHlRHwBHWcgAEgAggAkgBNgBQgBEgXOgYcgLXgHjgyQgiBgsFgdagMYgWSgFQgFEVBTVXEVKBVKNVKDVKYVKRVNBVNYVDBVDxVSBVSRVCjVGNVLXVIFVhBVhcVsXVdRVbRVlRhBYhKYhDYhGShxWhmNhdahdkhbRhjohMXhTRxAXxXSxKBxNBxEQxeNxeQxhXxsFxdbxlHxjcxFBxFNxFQxFOxFoyNYyYoybcyMYuBQuBRuBruDMuCouHBudQukkuoBulVuMXuFEmCYmCRmpRmeDmiMmjdmTFmFQiADiBOiaRiKRiNBiNRiSFiGkiGFiERipRiLFiIFihYibHijBijEiMXiWBiFBiFCUBQUXFUaRUNDUNcUNRUNFUDBUSHUCDUGBUGFUEqULNULoUIRUeEUeYUgBUhFUuRUiFUsXUdFUkHUbBUjSUjYUwXUMDUcHURdUTBUrBUrXUrQZAFZXZZaRZKFZNBZQFZCXZGBZYdZpBZLDZIFZHXZHNZeQZVRZVFZmXZiBZvFZdFZkFZbHZbFZwXZcCZcRZRBvBQvBGvBLvBWvCovMYsAFsBDsaRsKFsNFsDrsSHsSFsCXsCRsEBsEHsEfspBsLBsLDsIgsIRseGsbRsFBsFQsFSdNBdSRdCVdGHdYDdHcdVbdySduDdsXdlRdwXdWYdWcdWRkBMkXOkaRkNIkNFkSFkCFkYBkpRkeNkgBkhVkmXksFklVkMBkWDkFNoBNoaQoaFoNBoNXoNaoNEoSRoEroYXoYCoYbopRopFomXojkowXorFbBEbEIbdBbjYlaRlDElMXlFDjKjjSRjGBjYBjYkjpRjLXjIBjOFjeVjbRjwBnXQnSHnpFnLXnINnMBnTRwXBwXNwXYwNFwQFwSBwGFwLXwLDweNwgBwuHwjDwnXMBXMpFMIBMeNMTHcaQcNBcDHcSFcCXcpBcLXcLDcgFcuFcnXcwXccDcTQcrFTQErXNrCHrpFrgFrbFrTHrFcWNYWNbWEHWMXWTR\",\n    // 5-kana words\n    \"ABGHABIJAEAVAYJQALZJAIaRAHNXAHdcAHbRAZJMAZJRAZTRAdVJAklmAbcNAjdRAMnRAMWYAWpRAWgRAFgBAFhBAFdcBNJBBNJDBQKBBQhcBQlmBDEJBYJkBYJTBpNBBpJFBIJBBIJDBIcABOKXBOEJBOVJBOiJBOZJBepBBeLXBeIFBegBBgGJBVJXBuocBiJRBUJQBlXVBlITBwNFBMYVBcqXBTlmBWNFBWiJBWnRBFGHBFwXXKGJXNJBXNZJXDTTXSHSXSVRXSlHXCJDXGQJXEhXXYQJXYbRXOfXXeNcXVJFXhQJXhEJXdTRXjdXXMhBXcQTXRGBXTEBXTnQXFCXXFOFXFgFaBaFaBNJaBCJaBpBaBwXaNJKaNJDaQIBaDpRaEPDaHMFamDJalEJaMZJaFaFaFNBaFQJaFLDaFVHKBCYKBEBKBHDKXaFKXGdKXEJKXpHKXIBKXZDKXwXKKwLKNacKNYJKNJoKNWcKDGdKDTRKChXKGaRKGhBKGbRKEBTKEaRKEPTKLMDKLWRKOHDKVJcKdBcKlIBKlOPKFSBKFEPKFpFNBNJNJBQNBGHNBEPNBHXNBgFNBVXNBZDNBsXNBwXNNaRNNJDNNJENNJkNDCJNDVDNGJRNJiDNZJNNsCJNJFNNFSBNFCXNFEPNFLXNFIFQJBFQCaRQJEQQLJDQLJFQIaRQOqXQHaFQHHQQVJXQVJDQhNJQmEIQZJFQsJXQJrFQWbRDJABDBYJDXNFDXCXDXLXDXZDDXsJDQqXDSJFDJCXDEPkDEqXDYmQDpSJDOCkDOGQDHEIDVJDDuDuDWEBDJFgSBNDSBSFSBGHSBIBSBTQSKVYSJQNSJQiSJCXSEqXSJYVSIiJSOMYSHAHSHaQSeCFSepQSegBSHdHSHrFShSJSJuHSJUFSkNRSrSrSWEBSFaHSJFQSFCXSFGDSFYXSFODSFgBSFVXSFhBSFxFSFkFSFbBSFMFCADdCJXBCXaFCXKFCXNFCXCXCXGBCXEJCXYBCXLDCXIBCXOPCXHXCXgBCXhBCXiBCXlDCXcHCJNBCJNFCDCJCDGBCDVXCDhBCDiDCDJdCCmNCpJFCIaRCOqXCHCHCHZJCViJCuCuCmddCJiFCdNBCdHhClEJCnUJCreSCWlgCWTRCFBFCFNBCFYBCFVFCFhFCFdSCFTBCFWDGBNBGBQFGJBCGBEqGBpBGBgQGNBEGNJYGNkOGNJRGDUFGJpQGHaBGJeNGJeEGVBlGVKjGiJDGvJHGsVJGkEBGMIJGWjNGFBFGFCXGFGBGFYXGFpBGFMFEASJEAWpEJNFECJVEIXSEIQJEOqXEOcFEeNcEHEJEHlFEJgFEhlmEmDJEmZJEiMBEUqXEoSREPBFEPXFEPKFEPSFEPEFEPpFEPLXEPIBEJPdEPcFEPTBEJnXEqlHEMpREFCXEFODEFcFYASJYJAFYBaBYBVXYXpFYDhBYCJBYJGFYYbRYeNcYJeVYiIJYZJcYvJgYvJRYJsXYsJFYMYMYreVpBNHpBEJpBwXpQxFpYEJpeNDpJeDpeSFpeCHpHUJpHbBpHcHpmUJpiiJpUJrpsJuplITpFaBpFQqpFGBpFEfpFYBpFpBpFLJpFIDpFgBpFVXpFyQpFuFpFlFpFjDpFnXpFwXpJFMpFTBLXCJLXEFLXhFLXUJLXbFLalmLNJBLSJQLCLCLGJBLLDJLHaFLeNFLeSHLeCXLepFLhaRLZsJLsJDLsJrLocaLlLlLMdbLFNBLFSBLFEHLFkFIBBFIBXFIBaQIBKXIBSFIBpHIBLXIBgBIBhBIBuHIBmXIBiFIBZXIBvFIBbFIBjQIBwXIBWFIKTRIQUJIDGFICjQIYSRIINXIJeCIVaRImEkIZJFIvJRIsJXIdCJIJoRIbBQIjYBIcqXITFVIreVIFKFIFSFIFCJIFGFIFLDIFIBIJFOIFgBIFVXIJFhIFxFIFmXIFdHIFbBIJFrIJFWOBGBOQfXOOKjOUqXOfXBOqXEOcqXORVJOFIBOFlDHBIOHXiFHNTRHCJXHIaRHHJDHHEJHVbRHZJYHbIBHRsJHRkDHWlmgBKFgBSBgBCDgBGHgBpBgBIBgBVJgBuBgBvFgKDTgQVXgDUJgGSJgOqXgmUMgZIJgTUJgWIEgFBFgFNBgFDJgFSFgFGBgFYXgJFOgFgQgFVXgFhBgFbHgJFWVJABVQKcVDgFVOfXVeDFVhaRVmGdViJYVMaRVFNHhBNDhBCXhBEqhBpFhBLXhNJBhSJRheVXhhKEhxlmhZIJhdBQhkIJhbMNhMUJhMZJxNJgxQUJxDEkxDdFxSJRxplmxeSBxeCXxeGFxeYXxepQxegBxWVcxFEQxFLXxFIBxFgBxFxDxFZtxFdcxFbBxFwXyDJXyDlcuASJuDJpuDIBuCpJuGSJuIJFueEFuZIJusJXudWEuoIBuWGJuFBcuFKEuFNFuFQFuFDJuFGJuFVJuFUtuFdHuFTBmBYJmNJYmQhkmLJDmLJomIdXmiJYmvJRmsJRmklmmMBymMuCmclmmcnQiJABiJBNiJBDiBSFiBCJiBEFiBYBiBpFiBLXiBTHiJNciDEfiCZJiECJiJEqiOkHiHKFieNDiHJQieQcieDHieSFieCXieGFieEFieIHiegFihUJixNoioNXiFaBiFKFiFNDiFEPiFYXitFOitFHiFgBiFVEiFmXiFitiFbBiFMFiFrFUCXQUIoQUIJcUHQJUeCEUHwXUUJDUUqXUdWcUcqXUrnQUFNDUFSHUFCFUFEfUFLXUtFOZBXOZXSBZXpFZXVXZEQJZEJkZpDJZOqXZeNHZeCDZUqXZFBQZFEHZFLXvBAFvBKFvBCXvBEPvBpHvBIDvBgFvBuHvQNJvFNFvFGBvFIBvJFcsXCDsXLXsXsXsXlFsXcHsQqXsJQFsEqXseIFsFEHsFjDdBxOdNpRdNJRdEJbdpJRdhZJdnSJdrjNdFNJdFQHdFhNkNJDkYaRkHNRkHSRkVbRkuMRkjSJkcqDoSJFoEiJoYZJoOfXohEBoMGQocqXbBAFbBXFbBaFbBNDbBGBbBLXbBTBbBWDbGJYbIJHbFQqbFpQlDgQlOrFlVJRjGEBjZJRnXvJnXbBnEfHnOPDngJRnxfXnUJWwXEJwNpJwDpBwEfXwrEBMDCJMDGHMDIJMLJDcQGDcQpHcqXccqNFcqCXcFCJRBSBRBGBRBEJRBpQTBNFTBQJTBpBTBVXTFABTFSBTFCFTFGBTFMDrXCJrXLDrDNJrEfHrFQJrFitWNjdWNTR\",\n    // 6-kana words\n    \"AKLJMANOPFASNJIAEJWXAYJNRAIIbRAIcdaAeEfDAgidRAdjNYAMYEJAMIbRAFNJBAFpJFBBIJYBDZJFBSiJhBGdEBBEJfXBEJqXBEJWRBpaUJBLXrXBIYJMBOcfXBeEfFBestXBjNJRBcDJOBFEqXXNvJRXDMBhXCJNYXOAWpXONJWXHDEBXeIaRXhYJDXZJSJXMDJOXcASJXFVJXaBQqXaBZJFasXdQaFSJQaFEfXaFpJHaFOqXKBNSRKXvJBKQJhXKEJQJKEJGFKINJBKIJjNKgJNSKVElmKVhEBKiJGFKlBgJKjnUJKwsJYKMFIJKFNJDKFIJFKFOfXNJBSFNJBCXNBpJFNJBvQNJBMBNJLJXNJOqXNJeCXNJeGFNdsJCNbTKFNwXUJQNFEPQDiJcQDMSJQSFpBQGMQJQJeOcQyCJEQUJEBQJFBrQFEJqDXDJFDJXpBDJXIMDGiJhDIJGRDJeYcDHrDJDVXgFDkAWpDkIgRDjDEqDMvJRDJFNFDJFIBSKclmSJQOFSJQVHSJQjDSJGJBSJGJFSECJoSHEJqSJHTBSJVJDSViJYSZJNBSJsJDSFSJFSFEfXSJFLXCBUJVCJXSBCJXpBCXVJXCJXsXCJXdFCJNJHCLIJgCHiJFCVNJMChCJhCUHEJCsJTRCJdYcCoQJCCFEfXCFIJgCFUJxCFstFGJBaQGJBIDGQJqXGYJNRGJHKFGeQqDGHEJFGJeLXGHIiJGHdBlGUJEBGkIJTGFQPDGJFEqEAGegEJIJBEJVJXEhQJTEiJNcEJZJFEJoEqEjDEqEPDsXEPGJBEPOqXEPeQFEfDiDEJfEFEfepQEfMiJEqXNBEqDIDEqeSFEqVJXEMvJRYXNJDYXEJHYKVJcYYJEBYJeEcYJUqXYFpJFYFstXpAZJMpBSJFpNBNFpeQPDpHLJDpHIJFpHgJFpeitFpHZJFpJFADpFSJFpJFCJpFOqXpFitBpJFZJLXIJFLIJgRLVNJWLVHJMLwNpJLFGJBLFLJDLFOqXLJFUJIBDJXIBGJBIJBYQIJBIBIBOqXIBcqDIEGJFILNJTIIJEBIOiJhIJeNBIJeIBIhiJIIWoTRIJFAHIJFpBIJFuHIFUtFIJFTHOSBYJOEcqXOHEJqOvBpFOkVJrObBVJOncqDOcNJkHhNJRHuHJuHdMhBgBUqXgBsJXgONJBgHNJDgHHJQgJeitgHsJXgJyNagyDJBgZJDrgsVJQgkEJNgkjSJgJFAHgFCJDgFZtMVJXNFVXQfXVJXDJVXoQJVQVJQVDEfXVDvJHVEqNFVeQfXVHpJFVHxfXVVJSRVVmaRVlIJOhCXVJhHjYkhxCJVhWVUJhWiJcxBNJIxeEqDxfXBFxcFEPxFSJFxFYJXyBDQJydaUJyFOPDuYCJYuLvJRuHLJXuZJLDuFOPDuFZJHuFcqXmKHJdmCQJcmOsVJiJAGFitLCFieOfXiestXiZJMEikNJQirXzFiFQqXiFIJFiFZJFiFvtFUHpJFUteIcUteOcUVCJkUhdHcUbEJEUJqXQUMNJhURjYkUFitFZDGJHZJIxDZJVJXZJFDJZJFpQvBNJBvBSJFvJxBrseQqDsVFVJdFLJDkEJNBkmNJYkFLJDoQJOPoGsJRoEAHBoEJfFbBQqDbBZJHbFVJXlFIJBjYIrXjeitcjjCEBjWMNBwXQfXwXOaFwDsJXwCJTRwrCZJMDNJQcDDJFcqDOPRYiJFTBsJXTQIJBTFEfXTFLJDrXEJFrEJXMrFZJFWEJdEWYTlm\",\n    // 7-kana words\n    \"ABCDEFACNJTRAMBDJdAcNJVXBLNJEBXSIdWRXErNJkXYDJMBXZJCJaXMNJaYKKVJKcKDEJqXKDcNJhKVJrNYKbgJVXKFVJSBNBYBwDNJeQfXNJeEqXNhGJWENJFiJRQlIJbEQJfXxDQqXcfXQFNDEJQFwXUJDYcnUJDJIBgQDIUJTRDJFEqDSJQSJFSJQIJFSOPeZtSJFZJHCJXQfXCTDEqFGJBSJFGJBOfXGJBcqXGJHNJDGJRLiJEJfXEqEJFEJPEFpBEJYJBZJFYBwXUJYiJMEBYJZJyTYTONJXpQMFXFpeGIDdpJFstXpJFcPDLBVSJRLHQJqXLJFZJFIJBNJDIJBUqXIBkFDJIJEJPTIYJGWRIJeQPDIJeEfHIJFsJXOqGDSFHXEJqXgJCsJCgGQJqXgdQYJEgFMFNBgJFcqDVJwXUJVJFZJchIgJCCxOEJqXxOwXUJyDJBVRuscisciJBiJBieUtqXiJFDJkiFsJXQUGEZJcUJFsJXZtXIrXZDZJDrZJFNJDZJFstXvJFQqXvJFCJEsJXQJqkhkNGBbDJdTRbYJMEBlDwXUJMEFiJFcfXNJDRcNJWMTBLJXC\",\n    // 8-kana words\n    \"BraFUtHBFSJFdbNBLJXVJQoYJNEBSJBEJfHSJHwXUJCJdAZJMGjaFVJXEJPNJBlEJfFiJFpFbFEJqIJBVJCrIBdHiJhOPFChvJVJZJNJWxGFNIFLueIBQJqUHEJfUFstOZJDrlXEASJRlXVJXSFwVJNJWD\",\n    // 9-kana words\n    \"QJEJNNJDQJEJIBSFQJEJxegBQJEJfHEPSJBmXEJFSJCDEJqXLXNJFQqXIcQsFNJFIFEJqXUJgFsJXIJBUJEJfHNFvJxEqXNJnXUJFQqD\",\n    // 10-kana words\n    \"IJBEJqXZJ\"\n];\n// Maps each character into its kana value (the index)\nconst mapping = \"~~AzB~X~a~KN~Q~D~S~C~G~E~Y~p~L~I~O~eH~g~V~hxyumi~~U~~Z~~v~~s~~dkoblPjfnqwMcRTr~W~~~F~~~~~Jt\";\nlet wordlist = null;\nfunction hex(word) {\n    return hexlify(toUtf8Bytes(word));\n}\nconst KiYoKu = \"0xe3818de38284e3818f\";\nconst KyoKu = \"0xe3818de38283e3818f\";\nfunction loadWords(lang) {\n    if (wordlist !== null) {\n        return;\n    }\n    wordlist = [];\n    // Transforms for normalizing (sort is a not quite UTF-8)\n    const transform = {};\n    // Delete the diacritic marks\n    transform[toUtf8String([227, 130, 154])] = false;\n    transform[toUtf8String([227, 130, 153])] = false;\n    // Some simple transforms that sort out most of the order\n    transform[toUtf8String([227, 130, 133])] = toUtf8String([227, 130, 134]);\n    transform[toUtf8String([227, 129, 163])] = toUtf8String([227, 129, 164]);\n    transform[toUtf8String([227, 130, 131])] = toUtf8String([227, 130, 132]);\n    transform[toUtf8String([227, 130, 135])] = toUtf8String([227, 130, 136]);\n    // Normalize words using the transform\n    function normalize(word) {\n        let result = \"\";\n        for (let i = 0; i < word.length; i++) {\n            let kana = word[i];\n            const target = transform[kana];\n            if (target === false) {\n                continue;\n            }\n            if (target) {\n                kana = target;\n            }\n            result += kana;\n        }\n        return result;\n    }\n    // Sort how the Japanese list is sorted\n    function sortJapanese(a, b) {\n        a = normalize(a);\n        b = normalize(b);\n        if (a < b) {\n            return -1;\n        }\n        if (a > b) {\n            return 1;\n        }\n        return 0;\n    }\n    // Load all the words\n    for (let length = 3; length <= 9; length++) {\n        const d = data[length - 3];\n        for (let offset = 0; offset < d.length; offset += length) {\n            const word = [];\n            for (let i = 0; i < length; i++) {\n                const k = mapping.indexOf(d[offset + i]);\n                word.push(227);\n                word.push((k & 0x40) ? 130 : 129);\n                word.push((k & 0x3f) + 128);\n            }\n            wordlist.push(toUtf8String(word));\n        }\n    }\n    wordlist.sort(sortJapanese);\n    // For some reason kyoku and kiyoku are flipped in node (!!).\n    // The order SHOULD be:\n    //   - kyoku\n    //   - kiyoku\n    // This should ignore \"if\", but that doesn't work here??\n    /* istanbul ignore next */\n    if (hex(wordlist[442]) === KiYoKu && hex(wordlist[443]) === KyoKu) {\n        const tmp = wordlist[442];\n        wordlist[442] = wordlist[443];\n        wordlist[443] = tmp;\n    }\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (Wordlist.check(lang) !== \"0xcb36b09e6baa935787fd762ce65e80b0c6a8dabdfbc3a7f86ac0e2c4fd111600\") {\n        wordlist = null;\n        throw new Error(\"BIP39 Wordlist for ja (Japanese) FAILED\");\n    }\n}\nclass LangJa extends Wordlist {\n    constructor() {\n        super(\"ja\");\n    }\n    getWord(index) {\n        loadWords(this);\n        return wordlist[index];\n    }\n    getWordIndex(word) {\n        loadWords(this);\n        return wordlist.indexOf(word);\n    }\n    split(mnemonic) {\n        logger.checkNormalize();\n        return mnemonic.split(/(?:\\u3000| )+/g);\n    }\n    join(words) {\n        return words.join(\"\\u3000\");\n    }\n}\nconst langJa = new LangJa();\nWordlist.register(langJa);\nexport { langJa };\n//# sourceMappingURL=lang-ja.js.map","\"use strict\";\nimport { toUtf8String } from \"@ethersproject/strings\";\nimport { Wordlist } from \"./wordlist\";\nconst data = [\n    \"OYAa\",\n    \"ATAZoATBl3ATCTrATCl8ATDloATGg3ATHT8ATJT8ATJl3ATLlvATLn4ATMT8ATMX8ATMboATMgoAToLbAToMTATrHgATvHnAT3AnAT3JbAT3MTAT8DbAT8JTAT8LmAT8MYAT8MbAT#LnAUHT8AUHZvAUJXrAUJX8AULnrAXJnvAXLUoAXLgvAXMn6AXRg3AXrMbAX3JTAX3QbAYLn3AZLgvAZrSUAZvAcAZ8AaAZ8AbAZ8AnAZ8HnAZ8LgAZ8MYAZ8MgAZ8OnAaAboAaDTrAaFTrAaJTrAaJboAaLVoAaMXvAaOl8AaSeoAbAUoAbAg8AbAl4AbGnrAbMT8AbMXrAbMn4AbQb8AbSV8AbvRlAb8AUAb8AnAb8HgAb8JTAb8NTAb8RbAcGboAcLnvAcMT8AcMX8AcSToAcrAaAcrFnAc8AbAc8MgAfGgrAfHboAfJnvAfLV8AfLkoAfMT8AfMnoAfQb8AfScrAfSgrAgAZ8AgFl3AgGX8AgHZvAgHgrAgJXoAgJX8AgJboAgLZoAgLn4AgOX8AgoATAgoAnAgoCUAgoJgAgoLXAgoMYAgoSeAgrDUAgrJTAhrFnAhrLjAhrQgAjAgoAjJnrAkMX8AkOnoAlCTvAlCV8AlClvAlFg4AlFl6AlFn3AloSnAlrAXAlrAfAlrFUAlrFbAlrGgAlrOXAlvKnAlvMTAl3AbAl3MnAnATrAnAcrAnCZ3AnCl8AnDg8AnFboAnFl3AnHX4AnHbrAnHgrAnIl3AnJgvAnLXoAnLX4AnLbrAnLgrAnLhrAnMXoAnMgrAnOn3AnSbrAnSeoAnvLnAn3OnCTGgvCTSlvCTvAUCTvKnCTvNTCT3CZCT3GUCT3MTCT8HnCUCZrCULf8CULnvCU3HnCU3JUCY6NUCbDb8CbFZoCbLnrCboOTCboScCbrFnCbvLnCb8AgCb8HgCb$LnCkLfoClBn3CloDUDTHT8DTLl3DTSU8DTrAaDTrLXDTrLjDTrOYDTrOgDTvFXDTvFnDT3HUDT3LfDUCT9DUDT4DUFVoDUFV8DUFkoDUGgrDUJnrDULl8DUMT8DUMXrDUMX4DUMg8DUOUoDUOgvDUOg8DUSToDUSZ8DbDXoDbDgoDbGT8DbJn3DbLg3DbLn4DbMXrDbMg8DbOToDboJXGTClvGTDT8GTFZrGTLVoGTLlvGTLl3GTMg8GTOTvGTSlrGToCUGTrDgGTrJYGTrScGTtLnGTvAnGTvQgGUCZrGUDTvGUFZoGUHXrGULnvGUMT8GUoMgGXoLnGXrMXGXrMnGXvFnGYLnvGZOnvGZvOnGZ8LaGZ8LmGbAl3GbDYvGbDlrGbHX3GbJl4GbLV8GbLn3GbMn4GboJTGboRfGbvFUGb3GUGb4JnGgDX3GgFl$GgJlrGgLX6GgLZoGgLf8GgOXoGgrAgGgrJXGgrMYGgrScGgvATGgvOYGnAgoGnJgvGnLZoGnLg3GnLnrGnQn8GnSbrGnrMgHTClvHTDToHTFT3HTQT8HToJTHToJgHTrDUHTrMnHTvFYHTvRfHT8MnHT8SUHUAZ8HUBb4HUDTvHUoMYHXFl6HXJX6HXQlrHXrAUHXrMnHXrSbHXvFYHXvKXHX3LjHX3MeHYvQlHZrScHZvDbHbAcrHbFT3HbFl3HbJT8HbLTrHbMT8HbMXrHbMbrHbQb8HbSX3HboDbHboJTHbrFUHbrHgHbrJTHb8JTHb8MnHb8QgHgAlrHgDT3HgGgrHgHgrHgJTrHgJT8HgLX@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!Ln$CTGXMnCToLZ4CTrHT8CT3JTrCT3RZrCT#GTvCU6GgvCU8Db8CU8GZrCU8HT8CboLl3CbrGgrCbrMU8Cb8DT3Cb8GnrCb8LX4Cb8MT8Cb8ObrCgrGgvCgrKX4Cl8FZoDTrAbvDTrDboDTrGT6DTrJgrDTrMX3DTrRZrDTrRg8DTvAVvDTvFZoDT3DT8DT3Ln3DT4HZrDT4MT8DT8AlrDT8MT8DUAkGbDUDbJnDYLnQlDbDUOYDbMTAnDbMXSnDboAT3DboFn4DboLnvDj6JTrGTCgFTGTGgFnGTJTMnGTLnPlGToJT8GTrCT3GTrLVoGTrLnvGTrMX3GTrMboGTvKl3GZClFnGZrDT3GZ8DTrGZ8FZ8GZ8MXvGZ8On8GZ8ST3GbCnQXGbMbFnGboFboGboJg3GboMXoGb3JTvGb3JboGb3Mn6Gb3Qb8GgDXLjGgMnAUGgrDloGgrHX4GgrSToGgvAXrGgvAZvGgvFbrGgvLl3GgvMnvGnDnLXGnrATrGnrMboGnuLl3HTATMnHTAgCnHTCTCTHTrGTvHTrHTvHTrJX8HTrLl8HTrMT8HTrMgoHTrOTrHTuOn3HTvAZrHTvDTvHTvGboHTvJU8HTvLl3HTvMXrHTvQb4HT4GT6HT4JT8HT4Jb#HT8Al3HT8GZrHT8GgrHT8HX4HT8Jb8HT8JnoHT8LTrHT8LgvHT8SToHT8SV8HUoJUoHUoJX8HUoLnrHXrLZoHXvAl3HX3LnrHX4FkvHX4LhrHX4MXoHX4OnoHZrAZ8HZrDb8HZrGZ8HZrJnrHZvGZ8HZvLnvHZ8JnvHZ8LhrHbCXJlHbMTAnHboJl4HbpLl3HbrJX8HbrLnrHbrMnvHbvRYrHgoSTrHgrFV8HgrGZ8HgrJXoHgrRnvHgvBb!HgvGTrHgvHX4HgvHn!HgvLTrHgvSU8HnDnLbHnFbJbHnvDn8Hn6GgvHn!BTvJTCTLnJTQgFnJTrAnvJTrLX4JTrOUoJTvFn3JTvLnrJTvNToJT3AgoJT3Jn4JT3LhvJT3ObrJT8AcrJT8Al3JT8JT8JT8JnoJT8LX4JT8LnrJT8MX3JT8Rg3JT8Sc8JUoBTvJU8AToJU8GZ8JU8GgvJU8JTrJU8JXrJU8JnrJU8LnvJU8ScvJXHnJlJXrGgvJXrJU8JXrLhrJXrMT8JXrMXrJXrQUoJXvCTvJXvGZ8JXvGgrJXvQT8JX8Ab8JX8DT8JX8GZ8JX8HZvJX8LnrJX8MT8JX8MXoJX8MnvJX8ST3JYGnCTJbAkGbJbCTAnJbLTAcJboDT3JboLb6JbrAnvJbrCn3JbrDl8JbrGboJbrIZoJbrJnvJbrMnvJbrQb4Jb8RZrJeAbAnJgJnFbJgScAnJgrATrJgvHZ8JgvMn4JlJlFbJlLiQXJlLjOnJlRbOlJlvNXoJlvRl3Jl4AcrJl8AUoJl8MnrJnFnMlJnHgGbJnoDT8JnoFV8JnoGgvJnoIT8JnoQToJnoRg3JnrCZ3JnrGgrJnrHTvJnrLf8JnrOX8JnvAT3JnvFZoJnvGT8JnvJl4JnvMT8JnvMX8JnvOXrJnvPX6JnvSX3JnvSZrJn3MT8Jn3MX8Jn3RTrLTATKnLTJnLTLTMXKnLTRTQlLToGb8LTrAZ8LTrCZ8LTrDb8LTrHT8LT3PX6LT4FZoLT$CTvLT$GgrLUvHX3LVoATrLVoAgoLVoJboLVoMX3LVoRg3LV8CZ3LV8FZoLV8GTvLXrDXoLXrFbrLXvAgvLXvFlrLXvLl3LXvRn6LX4Mb8LX8GT8LYCXMnLYrMnrLZoSTvLZrAZvLZrAloLZrFToLZrJXvLZrJboLZrJl4LZrLnrLZrMT8LZrOgvLZrRnvLZrST4LZvMX8LZvSlvLZ8AgoLZ8CT3LZ8JT8LZ8LV8LZ8LZoLZ8Lg8LZ8SV8LZ8SbrLZ$HT8LZ$Mn4La6CTvLbFbMnLbRYFTLbSnFZLboJT8LbrAT9LbrGb3LbrQb8LcrJX8LcrMXrLerHTvLerJbrLerNboLgrDb8LgrGZ8LgrHTrLgrMXrLgrSU8LgvJTrLgvLl3Lg6Ll3LhrLnrLhrMT8LhvAl4LiLnQXLkoAgrLkoJT8LkoJn4LlrSU8Ll3FZoLl3HTrLl3JX8Ll3JnoLl3LToLmLeFbLnDUFbLnLVAnLnrATrLnrAZoLnrAb8LnrAlrLnrGgvLnrJU8LnrLZrLnrLhrLnrMb8LnrOXrLnrSZ8LnvAb4LnvDTrLnvDl8LnvHTrLnvHbrLnvJT8LnvJU8LnvJbrLnvLhvLnvMX8LnvMb8LnvNnoLnvSU8Ln3Al3Ln4FZoLn4GT6Ln4JgvLn4LhrLn4MT8Ln4SToMToCZrMToJX8MToLX4MToLf8MToRg3MTrEloMTvGb6MT3BTrMT3Lb6MT8AcrMT8AgrMT8GZrMT8JnoMT8LnrMT8MX3MUOUAnMXAbFnMXoAloMXoJX8MXoLf8MXoLl8MXrAb8MXrDTvMXrGT8MXrGgrMXrHTrMXrLf8MXrMU8MXrOXvMXrQb8MXvGT8MXvHTrMXvLVoMX3AX3MX3Jn3MX3LhrMX3MX3MX4AlrMX4OboMX8GTvMX8GZrMX8GgrMX8JT8MX8JX8MX8LhrMX8MT8MYDUFbMYMgDbMbGnFfMbvLX4MbvLl3Mb8Mb8Mb8ST4MgGXCnMg8ATrMg8AgoMg8CZrMg8DTrMg8DboMg8HTrMg8JgrMg8LT8MloJXoMl8AhrMl8JT8MnLgAUMnoJXrMnoLX4MnoLhrMnoMT8MnrAl4MnrDb8MnrOTvMnrOgvMnrQb8MnrSU8MnvGgrMnvHZ8Mn3MToMn4DTrMn4LTrMn4Mg8NnBXAnOTFTFnOToAToOTrGgvOTrJX8OT3JXoOT6MTrOT8GgrOT8HTpOT8MToOUoHT8OUoJT8OUoLn3OXrAgoOXrDg8OXrMT8OXvSToOX6CTvOX8CZrOX8OgrOb6HgvOb8AToOb8MT8OcvLZ8OgvAlrOgvHTvOgvJTrOgvJnrOgvLZrOgvLn4OgvMT8OgvRTrOg8AZoOg8DbvOnrOXoOnvJn4OnvLhvOnvRTrOn3GgoOn3JnvOn6JbvOn8OTrPTGYFTPbBnFnPbGnDnPgDYQTPlrAnvPlrETvPlrLnvPlrMXvPlvFX4QTMTAnQTrJU8QYCnJlQYJlQlQbGTQbQb8JnrQb8LZoQb8LnvQb8MT8Qb8Ml8Qb8ST4QloAl4QloHZvQloJX8QloMn8QnJZOlRTrAZvRTrDTrRTvJn4RTvLhvRT4Jb8RZrAZrRZ8AkrRZ8JU8RZ8LV8RZ8LnvRbJlQXRg3GboRg3MnvRg8AZ8Rg8JboRg8Jl4RnLTCbRnvFl3RnvQb8SToAl4SToCZrSToFZoSToHXrSToJU8SToJgvSToJl4SToLhrSToMX3STrAlvSTrCT9STrCgrSTrGgrSTrHXrSTrHboSTrJnoSTrNboSTvLnrST4AZoST8Ab8ST8JT8SUoJn3SU6HZ#SU6JTvSU8Db8SU8HboSU8LgrSV8JT8SZrAcrSZrAl3SZrJT8SZrJnvSZrMT8SZvLUoSZ4FZoSZ8JnoSZ8RZrScoLnrScoMT8ScoMX8ScrAT4ScrAZ8ScrLZ8ScrLkvScvDb8ScvLf8ScvNToSgrFZrShvKnrSloHUoSloLnrSlrMXoSl8HgrSmrJUoSn3BX6\",\n    \"ATFlOn3ATLgrDYAT4MTAnAT8LTMnAYJnRTrAbGgJnrAbLV8LnAbvNTAnAeFbLg3AgOYMXoAlQbFboAnDboAfAnJgoJTBToDgAnBUJbAl3BboDUAnCTDlvLnCTFTrSnCYoQTLnDTwAbAnDUDTrSnDUHgHgrDX8LXFnDbJXAcrETvLTLnGTFTQbrGTMnGToGT3DUFbGUJlPX3GbQg8LnGboJbFnGb3GgAYGgAg8ScGgMbAXrGgvAbAnGnJTLnvGnvATFgHTDT6ATHTrDlJnHYLnMn8HZrSbJTHZ8LTFnHbFTJUoHgSeMT8HgrLjAnHgvAbAnHlFUrDlHnDgvAnHnHTFT3HnQTGnrJTAaMXvJTGbCn3JTOgrAnJXvAXMnJbMg8SnJbMnRg3Jb8LTMnJnAl3OnJnGYrQlJnJlQY3LTDlCn3LTJjLg3LTLgvFXLTMg3GTLV8HUOgLXFZLg3LXNXrMnLX8QXFnLX9AlMYLYLXPXrLZAbJU8LZDUJU8LZMXrSnLZ$AgFnLaPXrDULbFYrMnLbMn8LXLboJgJgLeFbLg3LgLZrSnLgOYAgoLhrRnJlLkCTrSnLkOnLhrLnFX%AYLnFZoJXLnHTvJbLnLloAbMTATLf8MTHgJn3MTMXrAXMT3MTFnMUITvFnMXFX%AYMXMXvFbMXrFTDbMYAcMX3MbLf8SnMb8JbFnMgMXrMTMgvAXFnMgvGgCmMnAloSnMnFnJTrOXvMXSnOX8HTMnObJT8ScObLZFl3ObMXCZoPTLgrQXPUFnoQXPU3RXJlPX3RkQXPbrJXQlPlrJbFnQUAhrDbQXGnCXvQYLnHlvQbLfLnvRTOgvJbRXJYrQlRYLnrQlRbLnrQlRlFT8JlRlFnrQXSTClCn3STHTrAnSTLZQlrSTMnGTrSToHgGbSTrGTDnSTvGXCnST3HgFbSU3HXAXSbAnJn3SbFT8LnScLfLnv\",\n    \"AT3JgJX8AT8FZoSnAT8JgFV8AT8LhrDbAZ8JT8DbAb8GgLhrAb8SkLnvAe8MT8SnAlMYJXLVAl3GYDTvAl3LfLnvBUDTvLl3CTOn3HTrCT3DUGgrCU8MT8AbCbFTrJUoCgrDb8MTDTLV8JX8DTLnLXQlDT8LZrSnDUQb8FZ8DUST4JnvDb8ScOUoDj6GbJl4GTLfCYMlGToAXvFnGboAXvLnGgAcrJn3GgvFnSToGnLf8JnvGn#HTDToHTLnFXJlHTvATFToHTvHTDToHTvMTAgoHT3STClvHT4AlFl6HT8HTDToHUoDgJTrHUoScMX3HbRZrMXoHboJg8LTHgDb8JTrHgMToLf8HgvLnLnoHnHn3HT4Hn6MgvAnJTJU8ScvJT3AaQT8JT8HTrAnJXrRg8AnJbAloMXoJbrATFToJbvMnoSnJgDb6GgvJgDb8MXoJgSX3JU8JguATFToJlPYLnQlJlQkDnLbJlQlFYJlJl8Lf8OTJnCTFnLbJnLTHXMnJnLXGXCnJnoFfRg3JnrMYRg3Jn3HgFl3KT8Dg8LnLTRlFnPTLTvPbLbvLVoSbrCZLXMY6HT3LXNU7DlrLXNXDTATLX8DX8LnLZDb8JU8LZMnoLhrLZSToJU8LZrLaLnrLZvJn3SnLZ8LhrSnLaJnoMT8LbFlrHTvLbrFTLnrLbvATLlvLb6OTFn3LcLnJZOlLeAT6Mn4LeJT3ObrLg6LXFlrLhrJg8LnLhvDlPX4LhvLfLnvLj6JTFT3LnFbrMXoLnQluCTvLnrQXCY6LnvLfLnvLnvMgLnvLnvSeLf8MTMbrJn3MT3JgST3MT8AnATrMT8LULnrMUMToCZrMUScvLf8MXoDT8SnMX6ATFToMX8AXMT8MX8FkMT8MX8HTrDUMX8ScoSnMYJT6CTvMgAcrMXoMg8SToAfMlvAXLg3MnFl3AnvOT3AnFl3OUoATHT8OU3RnLXrOXrOXrSnObPbvFn6Og8HgrSnOg8OX8DbPTvAgoJgPU3RYLnrPXrDnJZrPb8CTGgvPlrLTDlvPlvFUJnoQUvFXrQlQeMnoAl3QlrQlrSnRTFTrJUoSTDlLiLXSTFg6HT3STJgoMn4STrFTJTrSTrLZFl3ST4FnMXoSUrDlHUoScvHTvSnSfLkvMXo\",\n    \"AUoAcrMXoAZ8HboAg8AbOg6ATFgAg8AloMXoAl3AT8JTrAl8MX8MXoCT3SToJU8Cl8Db8MXoDT8HgrATrDboOT8MXoGTOTrATMnGT8LhrAZ8GnvFnGnQXHToGgvAcrHTvAXvLl3HbrAZoMXoHgBlFXLg3HgMnFXrSnHgrSb8JUoHn6HT8LgvITvATrJUoJUoLZrRnvJU8HT8Jb8JXvFX8QT8JXvLToJTrJYrQnGnQXJgrJnoATrJnoJU8ScvJnvMnvMXoLTCTLgrJXLTJlRTvQlLbRnJlQYvLbrMb8LnvLbvFn3RnoLdCVSTGZrLeSTvGXCnLg3MnoLn3MToLlrETvMT8SToAl3MbrDU6GTvMb8LX4LhrPlrLXGXCnSToLf8Rg3STrDb8LTrSTvLTHXMnSb3RYLnMnSgOg6ATFg\",\n    \"HUDlGnrQXrJTrHgLnrAcJYMb8DULc8LTvFgGnCk3Mg8JbAnLX4QYvFYHnMXrRUoJnGnvFnRlvFTJlQnoSTrBXHXrLYSUJgLfoMT8Se8DTrHbDb\",\n    \"AbDl8SToJU8An3RbAb8ST8DUSTrGnrAgoLbFU6Db8LTrMg8AaHT8Jb8ObDl8SToJU8Pb3RlvFYoJl\"\n];\nconst codes = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*\";\nfunction getHangul(code) {\n    if (code >= 40) {\n        code = code + 168 - 40;\n    }\n    else if (code >= 19) {\n        code = code + 97 - 19;\n    }\n    return toUtf8String([225, (code >> 6) + 132, (code & 0x3f) + 128]);\n}\nlet wordlist = null;\nfunction loadWords(lang) {\n    if (wordlist != null) {\n        return;\n    }\n    wordlist = [];\n    data.forEach((data, length) => {\n        length += 4;\n        for (let i = 0; i < data.length; i += length) {\n            let word = \"\";\n            for (let j = 0; j < length; j++) {\n                word += getHangul(codes.indexOf(data[i + j]));\n            }\n            wordlist.push(word);\n        }\n    });\n    wordlist.sort();\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (Wordlist.check(lang) !== \"0xf9eddeace9c5d3da9c93cf7d3cd38f6a13ed3affb933259ae865714e8a3ae71a\") {\n        wordlist = null;\n        throw new Error(\"BIP39 Wordlist for ko (Korean) FAILED\");\n    }\n}\nclass LangKo extends Wordlist {\n    constructor() {\n        super(\"ko\");\n    }\n    getWord(index) {\n        loadWords(this);\n        return wordlist[index];\n    }\n    getWordIndex(word) {\n        loadWords(this);\n        return wordlist.indexOf(word);\n    }\n}\nconst langKo = new LangKo();\nWordlist.register(langKo);\nexport { langKo };\n//# sourceMappingURL=lang-ko.js.map","\"use strict\";\nimport { Wordlist } from \"./wordlist\";\nconst words = \"AbacoAbbaglioAbbinatoAbeteAbissoAbolireAbrasivoAbrogatoAccadereAccennoAccusatoAcetoneAchilleAcidoAcquaAcreAcrilicoAcrobataAcutoAdagioAddebitoAddomeAdeguatoAderireAdipeAdottareAdulareAffabileAffettoAffissoAffrantoAforismaAfosoAfricanoAgaveAgenteAgevoleAggancioAgireAgitareAgonismoAgricoloAgrumetoAguzzoAlabardaAlatoAlbatroAlberatoAlboAlbumeAlceAlcolicoAlettoneAlfaAlgebraAlianteAlibiAlimentoAllagatoAllegroAllievoAllodolaAllusivoAlmenoAlogenoAlpacaAlpestreAltalenaAlternoAlticcioAltroveAlunnoAlveoloAlzareAmalgamaAmanitaAmarenaAmbitoAmbratoAmebaAmericaAmetistaAmicoAmmassoAmmendaAmmirareAmmonitoAmoreAmpioAmpliareAmuletoAnacardoAnagrafeAnalistaAnarchiaAnatraAncaAncellaAncoraAndareAndreaAnelloAngeloAngolareAngustoAnimaAnnegareAnnidatoAnnoAnnuncioAnonimoAnticipoAnziApaticoAperturaApodeApparireAppetitoAppoggioApprodoAppuntoAprileArabicaArachideAragostaAraldicaArancioAraturaArazzoArbitroArchivioArditoArenileArgentoArgineArgutoAriaArmoniaArneseArredatoArringaArrostoArsenicoArsoArteficeArzilloAsciuttoAscoltoAsepsiAsetticoAsfaltoAsinoAsolaAspiratoAsproAssaggioAsseAssolutoAssurdoAstaAstenutoAsticeAstrattoAtavicoAteismoAtomicoAtonoAttesaAttivareAttornoAttritoAttualeAusilioAustriaAutistaAutonomoAutunnoAvanzatoAvereAvvenireAvvisoAvvolgereAzioneAzotoAzzimoAzzurroBabeleBaccanoBacinoBacoBadessaBadilataBagnatoBaitaBalconeBaldoBalenaBallataBalzanoBambinoBandireBaraondaBarbaroBarcaBaritonoBarlumeBaroccoBasilicoBassoBatostaBattutoBauleBavaBavosaBeccoBeffaBelgioBelvaBendaBenevoleBenignoBenzinaBereBerlinaBetaBibitaBiciBidoneBifidoBigaBilanciaBimboBinocoloBiologoBipedeBipolareBirbanteBirraBiscottoBisestoBisnonnoBisonteBisturiBizzarroBlandoBlattaBollitoBonificoBordoBoscoBotanicoBottinoBozzoloBraccioBradipoBramaBrancaBravuraBretellaBrevettoBrezzaBrigliaBrillanteBrindareBroccoloBrodoBronzinaBrulloBrunoBubboneBucaBudinoBuffoneBuioBulboBuonoBurloneBurrascaBussolaBustaCadettoCaducoCalamaroCalcoloCalesseCalibroCalmoCaloriaCambusaCamerataCamiciaCamminoCamolaCampaleCanapaCandelaCaneCaninoCanottoCantinaCapaceCapelloCapitoloCapogiroCapperoCapraCapsulaCarapaceCarcassaCardoCarismaCarovanaCarrettoCartolinaCasaccioCascataCasermaCasoCassoneCastelloCasualeCatastaCatenaCatrameCautoCavilloCedibileCedrataCefaloCelebreCellulareCenaCenoneCentesimoCeramicaCercareCertoCerumeCervelloCesoiaCespoCetoChelaChiaroChiccaChiedereChimeraChinaChirurgoChitarraCiaoCiclismoCifrareCignoCilindroCiottoloCircaCirrosiCitricoCittadinoCiuffoCivettaCivileClassicoClinicaCloroCoccoCodardoCodiceCoerenteCognomeCollareColmatoColoreColposoColtivatoColzaComaCometaCommandoComodoComputerComuneConcisoCondurreConfermaCongelareConiugeConnessoConoscereConsumoContinuoConvegnoCopertoCopioneCoppiaCopricapoCorazzaCordataCoricatoCorniceCorollaCorpoCorredoCorsiaCorteseCosmicoCostanteCotturaCovatoCratereCravattaCreatoCredereCremosoCrescitaCretaCricetoCrinaleCrisiCriticoCroceCronacaCrostataCrucialeCruscaCucireCuculoCuginoCullatoCupolaCuratoreCursoreCurvoCuscinoCustodeDadoDainoDalmataDamerinoDanielaDannosoDanzareDatatoDavantiDavveroDebuttoDecennioDecisoDeclinoDecolloDecretoDedicatoDefinitoDeformeDegnoDelegareDelfinoDelirioDeltaDemenzaDenotatoDentroDepositoDerapataDerivareDerogaDescrittoDesertoDesiderioDesumereDetersivoDevotoDiametroDicembreDiedroDifesoDiffusoDigerireDigitaleDiluvioDinamicoDinnanziDipintoDiplomaDipoloDiradareDireDirottoDirupoDisagioDiscretoDisfareDisgeloDispostoDistanzaDisumanoDitoDivanoDiveltoDividereDivoratoDobloneDocenteDoganaleDogmaDolceDomatoDomenicaDominareDondoloDonoDormireDoteDottoreDovutoDozzinaDragoDruidoDubbioDubitareDucaleDunaDuomoDupliceDuraturoEbanoEccessoEccoEclissiEconomiaEderaEdicolaEdileEditoriaEducareEgemoniaEgliEgoismoEgregioElaboratoElargireEleganteElencatoElettoElevareElficoElicaElmoElsaElusoEmanatoEmblemaEmessoEmiroEmotivoEmozioneEmpiricoEmuloEndemicoEnduroEnergiaEnfasiEnotecaEntrareEnzimaEpatiteEpilogoEpisodioEpocaleEppureEquatoreErarioErbaErbosoEredeEremitaErigereErmeticoEroeErosivoErranteEsagonoEsameEsanimeEsaudireEscaEsempioEsercitoEsibitoEsigenteEsistereEsitoEsofagoEsortatoEsosoEspansoEspressoEssenzaEssoEstesoEstimareEstoniaEstrosoEsultareEtilicoEtnicoEtruscoEttoEuclideoEuropaEvasoEvidenzaEvitatoEvolutoEvvivaFabbricaFaccendaFachiroFalcoFamigliaFanaleFanfaraFangoFantasmaFareFarfallaFarinosoFarmacoFasciaFastosoFasulloFaticareFatoFavolosoFebbreFecolaFedeFegatoFelpaFeltroFemminaFendereFenomenoFermentoFerroFertileFessuraFestivoFettaFeudoFiabaFiduciaFifaFiguratoFiloFinanzaFinestraFinireFioreFiscaleFisicoFiumeFlaconeFlamencoFleboFlemmaFloridoFluenteFluoroFobicoFocacciaFocosoFoderatoFoglioFolataFolcloreFolgoreFondenteFoneticoFoniaFontanaForbitoForchettaForestaFormicaFornaioForoFortezzaForzareFosfatoFossoFracassoFranaFrassinoFratelloFreccettaFrenataFrescoFrigoFrollinoFrondeFrugaleFruttaFucilataFucsiaFuggenteFulmineFulvoFumanteFumettoFumosoFuneFunzioneFuocoFurboFurgoneFuroreFusoFutileGabbianoGaffeGalateoGallinaGaloppoGamberoGammaGaranziaGarboGarofanoGarzoneGasdottoGasolioGastricoGattoGaudioGazeboGazzellaGecoGelatinaGelsoGemelloGemmatoGeneGenitoreGennaioGenotipoGergoGhepardoGhiaccioGhisaGialloGildaGineproGiocareGioielloGiornoGioveGiratoGironeGittataGiudizioGiuratoGiustoGlobuloGlutineGnomoGobbaGolfGomitoGommoneGonfioGonnaGovernoGracileGradoGraficoGrammoGrandeGrattareGravosoGraziaGrecaGreggeGrifoneGrigioGrinzaGrottaGruppoGuadagnoGuaioGuantoGuardareGufoGuidareIbernatoIconaIdenticoIdillioIdoloIdraIdricoIdrogenoIgieneIgnaroIgnoratoIlareIllesoIllogicoIlludereImballoImbevutoImboccoImbutoImmaneImmersoImmolatoImpaccoImpetoImpiegoImportoImprontaInalareInarcareInattivoIncantoIncendioInchinoIncisivoInclusoIncontroIncrocioIncuboIndagineIndiaIndoleIneditoInfattiInfilareInflittoIngaggioIngegnoIngleseIngordoIngrossoInnescoInodoreInoltrareInondatoInsanoInsettoInsiemeInsonniaInsulinaIntasatoInteroIntonacoIntuitoInumidireInvalidoInveceInvitoIperboleIpnoticoIpotesiIppicaIrideIrlandaIronicoIrrigatoIrrorareIsolatoIsotopoIstericoIstitutoIstriceItaliaIterareLabbroLabirintoLaccaLaceratoLacrimaLacunaLaddoveLagoLampoLancettaLanternaLardosoLargaLaringeLastraLatenzaLatinoLattugaLavagnaLavoroLegaleLeggeroLemboLentezzaLenzaLeoneLepreLesivoLessatoLestoLetteraleLevaLevigatoLiberoLidoLievitoLillaLimaturaLimitareLimpidoLineareLinguaLiquidoLiraLiricaLiscaLiteLitigioLivreaLocandaLodeLogicaLombareLondraLongevoLoquaceLorenzoLotoLotteriaLuceLucidatoLumacaLuminosoLungoLupoLuppoloLusingaLussoLuttoMacabroMacchinaMaceroMacinatoMadamaMagicoMagliaMagneteMagroMaiolicaMalafedeMalgradoMalintesoMalsanoMaltoMalumoreManaManciaMandorlaMangiareManifestoMannaroManovraMansardaMantideManubrioMappaMaratonaMarcireMarettaMarmoMarsupioMascheraMassaiaMastinoMaterassoMatricolaMattoneMaturoMazurcaMeandroMeccanicoMecenateMedesimoMeditareMegaMelassaMelisMelodiaMeningeMenoMensolaMercurioMerendaMerloMeschinoMeseMessereMestoloMetalloMetodoMettereMiagolareMicaMicelioMicheleMicroboMidolloMieleMiglioreMilanoMiliteMimosaMineraleMiniMinoreMirinoMirtilloMiscelaMissivaMistoMisurareMitezzaMitigareMitraMittenteMnemonicoModelloModificaModuloMoganoMogioMoleMolossoMonasteroMoncoMondinaMonetarioMonileMonotonoMonsoneMontatoMonvisoMoraMordereMorsicatoMostroMotivatoMotosegaMottoMovenzaMovimentoMozzoMuccaMucosaMuffaMughettoMugnaioMulattoMulinelloMultiploMummiaMuntoMuovereMuraleMusaMuscoloMusicaMutevoleMutoNababboNaftaNanometroNarcisoNariceNarratoNascereNastrareNaturaleNauticaNaviglioNebulosaNecrosiNegativoNegozioNemmenoNeofitaNerettoNervoNessunoNettunoNeutraleNeveNevroticoNicchiaNinfaNitidoNobileNocivoNodoNomeNominaNordicoNormaleNorvegeseNostranoNotareNotiziaNotturnoNovellaNucleoNullaNumeroNuovoNutrireNuvolaNuzialeOasiObbedireObbligoObeliscoOblioOboloObsoletoOccasioneOcchioOccidenteOccorrereOccultareOcraOculatoOdiernoOdorareOffertaOffrireOffuscatoOggettoOggiOgnunoOlandeseOlfattoOliatoOlivaOlogrammaOltreOmaggioOmbelicoOmbraOmegaOmissioneOndosoOnereOniceOnnivoroOnorevoleOntaOperatoOpinioneOppostoOracoloOrafoOrdineOrecchinoOreficeOrfanoOrganicoOrigineOrizzonteOrmaOrmeggioOrnativoOrologioOrrendoOrribileOrtensiaOrticaOrzataOrzoOsareOscurareOsmosiOspedaleOspiteOssaOssidareOstacoloOsteOtiteOtreOttagonoOttimoOttobreOvaleOvestOvinoOviparoOvocitoOvunqueOvviareOzioPacchettoPacePacificoPadellaPadronePaesePagaPaginaPalazzinaPalesarePallidoPaloPaludePandoroPannelloPaoloPaonazzoPapricaParabolaParcellaParerePargoloPariParlatoParolaPartireParvenzaParzialePassivoPasticcaPataccaPatologiaPattumePavonePeccatoPedalarePedonalePeggioPelosoPenarePendicePenisolaPennutoPenombraPensarePentolaPepePepitaPerbenePercorsoPerdonatoPerforarePergamenaPeriodoPermessoPernoPerplessoPersuasoPertugioPervasoPesatorePesistaPesoPestiferoPetaloPettinePetulantePezzoPiacerePiantaPiattinoPiccinoPicozzaPiegaPietraPifferoPigiamaPigolioPigroPilaPiliferoPillolaPilotaPimpantePinetaPinnaPinoloPioggiaPiomboPiramidePireticoPiritePirolisiPitonePizzicoPlaceboPlanarePlasmaPlatanoPlenarioPochezzaPoderosoPodismoPoesiaPoggiarePolentaPoligonoPollicePolmonitePolpettaPolsoPoltronaPolverePomicePomodoroPontePopolosoPorfidoPorosoPorporaPorrePortataPosaPositivoPossessoPostulatoPotassioPoterePranzoPrassiPraticaPreclusoPredicaPrefissoPregiatoPrelievoPremerePrenotarePreparatoPresenzaPretestoPrevalsoPrimaPrincipePrivatoProblemaProcuraProdurreProfumoProgettoProlungaPromessaPronomePropostaProrogaProtesoProvaPrudentePrugnaPruritoPsichePubblicoPudicaPugilatoPugnoPulcePulitoPulsantePuntarePupazzoPupillaPuroQuadroQualcosaQuasiQuerelaQuotaRaccoltoRaddoppioRadicaleRadunatoRafficaRagazzoRagioneRagnoRamarroRamingoRamoRandagioRantolareRapatoRapinaRappresoRasaturaRaschiatoRasenteRassegnaRastrelloRataRavvedutoRealeRecepireRecintoReclutaReconditoRecuperoRedditoRedimereRegalatoRegistroRegolaRegressoRelazioneRemareRemotoRennaReplicaReprimereReputareResaResidenteResponsoRestauroReteRetinaRetoricaRettificaRevocatoRiassuntoRibadireRibelleRibrezzoRicaricaRiccoRicevereRiciclatoRicordoRicredutoRidicoloRidurreRifasareRiflessoRiformaRifugioRigareRigettatoRighelloRilassatoRilevatoRimanereRimbalzoRimedioRimorchioRinascitaRincaroRinforzoRinnovoRinomatoRinsavitoRintoccoRinunciaRinvenireRiparatoRipetutoRipienoRiportareRipresaRipulireRisataRischioRiservaRisibileRisoRispettoRistoroRisultatoRisvoltoRitardoRitegnoRitmicoRitrovoRiunioneRivaRiversoRivincitaRivoltoRizomaRobaRoboticoRobustoRocciaRocoRodaggioRodereRoditoreRogitoRollioRomanticoRompereRonzioRosolareRospoRotanteRotondoRotulaRovescioRubizzoRubricaRugaRullinoRumineRumorosoRuoloRupeRussareRusticoSabatoSabbiareSabotatoSagomaSalassoSaldaturaSalgemmaSalivareSalmoneSaloneSaltareSalutoSalvoSapereSapidoSaporitoSaracenoSarcasmoSartoSassosoSatelliteSatiraSatolloSaturnoSavanaSavioSaziatoSbadiglioSbalzoSbancatoSbarraSbattereSbavareSbendareSbirciareSbloccatoSbocciatoSbrinareSbruffoneSbuffareScabrosoScadenzaScalaScambiareScandaloScapolaScarsoScatenareScavatoSceltoScenicoScettroSchedaSchienaSciarpaScienzaScindereScippoSciroppoScivoloSclerareScodellaScolpitoScompartoSconfortoScoprireScortaScossoneScozzeseScribaScrollareScrutinioScuderiaScultoreScuolaScuroScusareSdebitareSdoganareSeccaturaSecondoSedanoSeggiolaSegnalatoSegregatoSeguitoSelciatoSelettivoSellaSelvaggioSemaforoSembrareSemeSeminatoSempreSensoSentireSepoltoSequenzaSerataSerbatoSerenoSerioSerpenteSerraglioServireSestinaSetolaSettimanaSfaceloSfaldareSfamatoSfarzosoSfaticatoSferaSfidaSfilatoSfingeSfocatoSfoderareSfogoSfoltireSforzatoSfrattoSfruttatoSfuggitoSfumareSfusoSgabelloSgarbatoSgonfiareSgorbioSgrassatoSguardoSibiloSiccomeSierraSiglaSignoreSilenzioSillabaSimboloSimpaticoSimulatoSinfoniaSingoloSinistroSinoSintesiSinusoideSiparioSismaSistoleSituatoSlittaSlogaturaSlovenoSmarritoSmemoratoSmentitoSmeraldoSmilzoSmontareSmottatoSmussatoSnellireSnervatoSnodoSobbalzoSobrioSoccorsoSocialeSodaleSoffittoSognoSoldatoSolenneSolidoSollazzoSoloSolubileSolventeSomaticoSommaSondaSonettoSonniferoSopireSoppesoSopraSorgereSorpassoSorrisoSorsoSorteggioSorvolatoSospiroSostaSottileSpadaSpallaSpargereSpatolaSpaventoSpazzolaSpecieSpedireSpegnereSpelaturaSperanzaSpessoreSpettraleSpezzatoSpiaSpigolosoSpillatoSpinosoSpiraleSplendidoSportivoSposoSprangaSprecareSpronatoSpruzzoSpuntinoSquilloSradicareSrotolatoStabileStaccoStaffaStagnareStampatoStantioStarnutoStaseraStatutoSteloSteppaSterzoStilettoStimaStirpeStivaleStizzosoStonatoStoricoStrappoStregatoStriduloStrozzareStruttoStuccareStufoStupendoSubentroSuccosoSudoreSuggeritoSugoSultanoSuonareSuperboSupportoSurgelatoSurrogatoSussurroSuturaSvagareSvedeseSveglioSvelareSvenutoSveziaSviluppoSvistaSvizzeraSvoltaSvuotareTabaccoTabulatoTacciareTaciturnoTaleTalismanoTamponeTanninoTaraTardivoTargatoTariffaTarpareTartarugaTastoTatticoTavernaTavolataTazzaTecaTecnicoTelefonoTemerarioTempoTemutoTendoneTeneroTensioneTentacoloTeoremaTermeTerrazzoTerzettoTesiTesseratoTestatoTetroTettoiaTifareTigellaTimbroTintoTipicoTipografoTiraggioTiroTitanioTitoloTitubanteTizioTizzoneToccareTollerareToltoTombolaTomoTonfoTonsillaTopazioTopologiaToppaTorbaTornareTorroneTortoraToscanoTossireTostaturaTotanoTraboccoTracheaTrafilaTragediaTralcioTramontoTransitoTrapanoTrarreTraslocoTrattatoTraveTrecciaTremolioTrespoloTributoTrichecoTrifoglioTrilloTrinceaTrioTristezzaTrituratoTrivellaTrombaTronoTroppoTrottolaTrovareTruccatoTubaturaTuffatoTulipanoTumultoTunisiaTurbareTurchinoTutaTutelaUbicatoUccelloUccisoreUdireUditivoUffaUfficioUgualeUlisseUltimatoUmanoUmileUmorismoUncinettoUngereUnghereseUnicornoUnificatoUnisonoUnitarioUnteUovoUpupaUraganoUrgenzaUrloUsanzaUsatoUscitoUsignoloUsuraioUtensileUtilizzoUtopiaVacanteVaccinatoVagabondoVagliatoValangaValgoValicoVallettaValorosoValutareValvolaVampataVangareVanitosoVanoVantaggioVanveraVaporeVaranoVarcatoVarianteVascaVedettaVedovaVedutoVegetaleVeicoloVelcroVelinaVellutoVeloceVenatoVendemmiaVentoVeraceVerbaleVergognaVerificaVeroVerrucaVerticaleVescicaVessilloVestaleVeteranoVetrinaVetustoViandanteVibranteVicendaVichingoVicinanzaVidimareVigiliaVignetoVigoreVileVillanoViminiVincitoreViolaViperaVirgolaVirologoVirulentoViscosoVisioneVispoVissutoVisuraVitaVitelloVittimaVivandaVividoViziareVoceVogaVolatileVolereVolpeVoragineVulcanoZampognaZannaZappatoZatteraZavorraZefiroZelanteZeloZenzeroZerbinoZibettoZincoZirconeZittoZollaZoticoZuccheroZufoloZuluZuppa\";\nlet wordlist = null;\nfunction loadWords(lang) {\n    if (wordlist != null) {\n        return;\n    }\n    wordlist = words.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \");\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (Wordlist.check(lang) !== \"0x5c1362d88fd4cf614a96f3234941d29f7d37c08c5292fde03bf62c2db6ff7620\") {\n        wordlist = null;\n        throw new Error(\"BIP39 Wordlist for it (Italian) FAILED\");\n    }\n}\nclass LangIt extends Wordlist {\n    constructor() {\n        super(\"it\");\n    }\n    getWord(index) {\n        loadWords(this);\n        return wordlist[index];\n    }\n    getWordIndex(word) {\n        loadWords(this);\n        return wordlist.indexOf(word);\n    }\n}\nconst langIt = new LangIt();\nWordlist.register(langIt);\nexport { langIt };\n//# sourceMappingURL=lang-it.js.map","\"use strict\";\nimport { toUtf8String } from \"@ethersproject/strings\";\nimport { Wordlist } from \"./wordlist\";\nconst data = \"}aE#4A=Yv&co#4N#6G=cJ&SM#66|/Z#4t&kn~46#4K~4q%b9=IR#7l,mB#7W_X2*dl}Uo~7s}Uf&Iw#9c&cw~6O&H6&wx&IG%v5=IQ~8a&Pv#47$PR&50%Ko&QM&3l#5f,D9#4L|/H&tQ;v0~6n]nN<di,AM=W5%QO&ka&ua,hM^tm=zV=JA=wR&+X]7P&NB#4J#5L|/b[dA}tJ<Do&6m&u2[U1&Kb.HM&mC=w0&MW<rY,Hq#6M}QG,13&wP}Jp]Ow%ue&Kg<HP<D9~4k~9T&I2_c6$9T#9/[C5~7O~4a=cs&O7=KK=An&l9$6U$8A&uD&QI|/Y&bg}Ux&F2#6b}E2&JN&kW&kp=U/&bb=Xl<Cj}k+~5J#6L&5z&9i}b4&Fo,ho(X0_g3~4O$Fz&QE<HN=Ww]6/%GF-Vw=tj&/D&PN#9g=YO}cL&Of&PI~5I&Ip=vU=IW#9G;0o-wU}ss&QR<BT&R9=tk$PY_dh&Pq-yh]7T,nj.Xu=EP&76=cI&Fs*Xg}z7$Gb&+I=DF,AF=cA}rL#7j=Dz&3y<Aa$52=PQ}b0(iY$Fa}oL&xV#6U=ec=WZ,xh%RY<dp#9N&Fl&44=WH*A7=sh&TB&8P=07;u+&PK}uh}J5#72)V/=xC,AB$k0&f6;1E|+5=1B,3v]6n&wR%b+&xx]7f=Ol}fl;+D^wG]7E;nB;uh^Ir&l5=JL,nS=cf=g5;u6|/Q$Gc=MH%Hg#5d%M6^86=U+$Gz,l/,ir^5y&Ba&/F-IY&FI&be%IZ#77&PW_Nu$kE(Yf&NX]7Z,Jy&FJ(Xo&Nz#/d=y7&MX<Ag}Z+;nE]Dt(iG#4D=13&Pj~4c%v8&Zo%OL&/X#4W<HR&ie~6J_1O(Y2=y5=Ad*cv_eB#6k&PX:BU#7A;uk&Ft&Fx_dD=U2;vB=U5=4F}+O&GN.HH:9s=b0%NV(jO&IH=JT}Z9=VZ<Af,Kx^4m&uJ%c6,6r;9m#+L}cf%Kh&F3~4H=vP}bu,Hz|++,1w]nv}k6;uu$jw*Kl*WX&uM[x7&Fr[m7$NO&QN]hu=JN}nR^8g#/h(ps|KC;vd}xz=V0}p6&FD$G1#7K<bG_4p~8g&cf;u4=tl}+k%5/}fz;uw<cA=u1}gU}VM=LJ=eX&+L&Pr#4U}p2:nC,2K]7H:jF&9x}uX#9O=MB<fz~8X~5m&4D&kN&u5%E/(h7(ZF&VG<de(qM|/e-Wt=3x(a+,/R]f/&ND$Ro&nU}0g=KA%kH&NK$Ke<dS}cB&IX~5g$TN]6m=Uv,Is&Py=Ef%Kz#+/%bi&+A<F4$OG&4C&FL#9V<Zk=2I_eE&6c]nw&kq$HG}y+&A8$P3}OH=XP]70%IS(AJ_gH%GZ&tY&AZ=vb~6y&/r=VI=Wv<Zi=fl=xf&eL}c8}OL=MJ=g8$F7=YT}9u=0+^xC}JH&nL^N0~4T]K2,Cy%OC#6s;vG(AC^xe^cG&MF}Br#9P;wD-7h$O/&xA}Fn^PC]6i]7G&8V$Qs;vl(TB~73~4l<mW&6V=2y&uY&+3)aP}XF;LP&kx$wU=t7;uy<FN&lz)7E=Oo*Y+;wI}9q}le;J6&Ri&4t&Qr#8B=cb&vG=J5|Ql(h5<Yy~4+}QD,Lx=wn%K/&RK=dO&Pw,Q9=co%4u;9u}g0@6a^4I%b0=zo|/c&tX=dQ=OS#+b=yz_AB&wB&Pm=W9$HP_gR=62=AO=ti=hI,oA&jr&dH=tm&b6$P2(x8=zi;nG~7F;05]0n[Ix&3m}rg=Xp=cd&uz]7t;97=cN;vV<jf&FF&F1=6Q&Ik*Kk&P4,2z=fQ]7D&3u,H0=d/}Uw<ZN<7R}Kv;0f$H7,MD]7n$F0#88~9Z%da=by;+T#/u=VF&fO&kr^kf<AB]sU,I5$Ng&Pz;0i&QD&vM=Yl:BM;nJ_xJ]U7&Kf&30,3f|Z9*dC)je_jA&Q4&Kp$NH(Yz#6S&Id%Ib=KX,AD=KV%dP}tW&Pk^+E_Ni=cq,3R}VZ(Si=b+}rv;0j}rZ]uA,/w(Sx&Jv$w9&4d&wE,NJ$Gy=J/]Ls#7k<ZQ<Y/&uj]Ov$PM;v3,2F&+u:up=On&3e,Jv;90=J+&Qm]6q}bK#+d~8Y(h2]hA;99&AS=I/}qB&dQ}yJ-VM}Vl&ui,iB&G3|Dc]7d=eQ%dX%JC_1L~4d^NP;vJ&/1)ZI#7N]9X[bQ&PL=0L(UZ,Lm&kc&IR}n7(iR<AQ<dg=33=vN}ft}au]7I,Ba=x9=dR~6R&Tq=Xi,3d$Nr&Bc}DI&ku&vf]Dn,/F&iD,Ll&Nw=0y&I7=Ls=/A&tU=Qe}Ua&uk&+F=g4=gh=Vj#+1&Qn}Uy*44#5F,Pc&Rz*Xn=oh=5W;0n_Nf(iE<Y7=vr=Zu]oz#5Z%mI=kN=Bv_Jp(T2;vt_Ml<FS&uI=L/&6P]64$M7}86<bo%QX(SI%IY&VK=Al&Ux;vv;ut*E/%uh<ZE|O3,M2(yc]yu=Wk&tp:Ex}hr,Cl&WE)+Z=8U}I2_4Q,hA_si=iw=OM=tM=yZ%Ia=U7;wT}b+;uo=Za}yS!5x}HD}fb#5O_dA;Nv%uB(yB;01(Sf}Fk;v7}Pt#8v<mZ#7L,/r&Pl~4w&f5=Ph$Fw_LF&8m,bL=yJ&BH}p/*Jn}tU~5Q;wB(h6]Df]8p^+B;E4&Wc=d+;Ea&bw$8C&FN,DM=Yf}mP~5w=fT#6V=mC=Fi=AV}jB&AN}lW}aH#/D)dZ;hl;vE}/7,CJ;31&w8,hj%u9_Js=jJ&4M~8k=TN&eC}nL&uc-wi&lX}dj=Mv=e2#6u=cr$uq$6G]8W}Jb:nm=Yg<b3(UA;vX&6n&xF=KT,jC,De&R8&oY=Zv&oB]7/=Z2&Oa}bf,hh(4h^tZ&72&Nx;D2&xL~5h~40)ZG)h+=OJ&RA]Bv$yB=Oq=df,AQ%Jn}OJ;11,3z&Tl&tj;v+^Hv,Dh(id=s+]7N&N3)9Q~8f,S4=uW=w4&uX,LX&3d]CJ&yp&8x<b2_do&lP=y/<cy_dG=Oi=7R(VH(lt_1T,Iq_AA;12^6T%k6#8K[B1{oO<AU[Bt;1b$9S&Ps<8T=St{bY,jB(Zp&63&Uv$9V,PM]6v&Af}zW[bW_oq}sm}nB&Kq&gC&ff_eq_2m&5F&TI}rf}Gf;Zr_z9;ER&jk}iz_sn<BN~+n&vo=Vi%97|ZR=Wc,WE&6t]6z%85(ly#84=KY)6m_5/=aX,N3}Tm&he&6K]tR_B2-I3;u/&hU&lH<AP=iB&IA=XL;/5&Nh=wv<BH#79=vS=zl<AA=0X_RG}Bw&9p$NW,AX&kP_Lp&/Z(Tc]Mu}hs#6I}5B&cI<bq&H9#6m=K9}vH(Y1(Y0#4B&w6,/9&gG<bE,/O=zb}I4_l8<B/;wL%Qo<HO[Mq=XX}0v&BP&F4(mG}0i}nm,EC=9u{I3,xG&/9=JY*DK&hR)BX=EI=cx=b/{6k}yX%A+&wa}Xb=la;wi^lL;0t}jo&Qb=xg=XB}iO<qo{bR=NV&8f=a0&Jy;0v=uK)HK;vN#6h&jB(h/%ud&NI%wY.X7=Pt}Cu-uL&Gs_hl%mH,tm]78=Lb^Q0#7Y=1u<Bt&+Q=Co_RH,w3;1e}ux<aU;ui}U3&Q5%bt]63&UQ|0l&uL}O7&3o,AV&dm|Nj(Xt*5+(Uu&Hh(p7(UF=VR=Bp^Jl&Hd[ix)9/=Iq]C8<67]66}mB%6f}bb}JI]8T$HA}db=YM&pa=2J}tS&Y0=PS&y4=cX$6E,hX,XP&nR;04,FQ&l0&Vm_Dv#5Y~8Z=Bi%MA]6x=JO:+p,Az&9q,Hj~6/}SD=K1:EJ}nA;Qo#/E]9R,Ie&6X%W3]61&v4=xX_MC=0q;06(Xq=fs}IG}Dv=0l}o7$iZ;9v&LH&DP-7a&OY,SZ,Kz,Cv&dh=fx|Nh,F/~7q=XF&w+;9n&Gw;0h}Z7<7O&JK(S7&LS<AD<ac=wo<Dt&zw%4B=4v#8P;9o~6p*vV=Tm,Or&I6=1q}nY=P0=gq&Bl&Uu,Ch%yb}UY=zh}dh}rl(T4_xk(YA#8R*xH,IN}Jn]7V}C4&Ty}j3]7p=cL=3h&wW%Qv<Z3=f0&RI&+S(ic_zq}oN&/Y=z1;Td=LW=0e=OI(Vc,+b^ju(UL;0r:Za%8v=Rp=zw&58&73&wK}qX]6y&8E)a2}WR=wP^ur&nQ<cH}Re=Aq&wk}Q0&+q=PP,Gc|/d^k5,Fw]8Y}Pg]p3=ju=ed}r5_yf&Cs]7z$/G<Cm&Jp&54_1G_gP_Ll}JZ;0u]k8_7k(Sg]65{9i=LN&Sx&WK,iW&fD&Lk{9a}Em-9c#8N&io=sy]8d&nT&IK(lx#7/$lW(Td<s8~49,3o<7Y=MW(T+_Jr&Wd,iL}Ct=xh&5V;v4&8n%Kx=iF&l2_0B{B+,If(J0,Lv;u8=Kx-vB=HC&vS=Z6&fU&vE^xK;3D=4h=MR#45:Jw;0d}iw=LU}I5=I0]gB*im,K9}GU,1k_4U&Tt=Vs(iX&lU(TF#7y,ZO}oA&m5#5P}PN}Uz=hM<B1&FB<aG,e6~7T<tP(UQ_ZT=wu&F8)aQ]iN,1r_Lo&/g:CD}84{J1_Ki&Na&3n$jz&FE=dc;uv;va}in}ll=fv(h1&3h}fp=Cy}BM(+E~8m}lo%v7=hC(T6$cj=BQ=Bw(DR,2j=Ks,NS|F+;00=fU=70}Mb(YU;+G&m7&hr=Sk%Co]t+(X5_Jw}0r}gC(AS-IP&QK<Z2#8Q$WC]WX}T2&pG_Ka,HC=R4&/N;Z+;ch(C7,D4$3p_Mk&B2$8D=n9%Ky#5z(CT&QJ#7B]DC]gW}nf~5M;Iw#80}Tc_1F#4Z-aC}Hl=ph=fz,/3=aW}JM}nn;DG;vm}wn,4P}T3;wx&RG$u+}zK=0b;+J_Ek{re<aZ=AS}yY#5D]7q,Cp}xN=VP*2C}GZ}aG~+m_Cs=OY#6r]6g<GS}LC(UB=3A=Bo}Jy<c4}Is;1P<AG}Op<Z1}ld}nS=1Z,yM&95&98=CJ(4t:2L$Hk=Zo}Vc;+I}np&N1}9y=iv}CO*7p=jL)px]tb^zh&GS&Vl%v/;vR=14=zJ&49|/f]hF}WG;03=8P}o/&Gg&rp;DB,Kv}Ji&Pb;aA^ll(4j%yt}+K$Ht#4y&hY]7Y<F1,eN}bG(Uh%6Z]t5%G7;+F_RE;it}tL=LS&Da=Xx(S+(4f=8G=yI}cJ}WP=37=jS}pX}hd)fp<A8=Jt~+o$HJ=M6}iX=g9}CS=dv=Cj(mP%Kd,xq|+9&LD(4/=Xm&QP=Lc}LX&fL;+K=Op(lu=Qs.qC:+e&L+=Jj#8w;SL]7S(b+#4I=c1&nG_Lf&uH;+R)ZV<bV%B/,TE&0H&Jq&Ah%OF&Ss(p2,Wv&I3=Wl}Vq;1L&lJ#9b_1H=8r=b8=JH(SZ=hD=J2#7U,/U#/X~6P,FU<eL=jx,mG=hG=CE&PU=Se(qX&LY=X6=y4&tk&QQ&tf=4g&xI}W+&mZ=Dc#7w}Lg;DA;wQ_Kb(cJ=hR%yX&Yb,hw{bX_4X;EP;1W_2M}Uc=b5(YF,CM&Tp^OJ{DD]6s=vF=Yo~8q}XH}Fu%P5(SJ=Qt;MO]s8<F3&B3&8T(Ul-BS*dw&dR<87}/8]62$PZ]Lx<Au}9Q]7c=ja=KR,Go,Us&v6(qk}pG&G2=ev^GM%w4&H4]7F&dv]J6}Ew:9w=sj-ZL}Ym$+h(Ut(Um~4n=Xs(U7%eE=Qc_JR<CA#6t<Fv|/I,IS,EG<F2(Xy$/n<Fa(h9}+9_2o&N4#7X<Zq|+f_Dp=dt&na,Ca=NJ)jY=8C=YG=s6&Q+<DO}D3=xB&R1(lw;Qn<bF(Cu|/B}HV=SS&n7,10&u0]Dm%A6^4Q=WR(TD=Xo<GH,Rj(l8)bP&n/=LM&CF,F5&ml=PJ;0k=LG=tq,Rh,D6@4i=1p&+9=YC%er_Mh;nI;0q=Fw]80=xq=FM$Gv;v6&nc;wK%H2&Kj;vs,AA=YP,66}bI(qR~5U=6q~4b$Ni=K5.X3$So&Iu(p+]8G=Cf=RY(TS_O3(iH&57=fE=Dg_Do#9z#7H;FK{qd_2k%JR}en&gh_z8;Rx}9p<cN_Ne,DO;LN_7o~/p=NF=5Y}gN<ce<C1,QE]Wv=3u<BC}GK]yq}DY&u/_hj=II(pz&rC,jV&+Z}ut=NQ;Cg-SR_ZS,+o=u/;Oy_RK_QF(Fx&xP}Wr&TA,Uh&g1=yr{ax[VF$Pg(YB;Ox=Vy;+W(Sp}XV%dd&33(l/]l4#4Y}OE=6c=bw(A7&9t%wd&N/&mo,JH&Qe)fm=Ao}fu=tH\";\nconst deltaData = \"FAZDC6BALcLZCA+GBARCW8wNCcDDZ8LVFBOqqDUiou+M42TFAyERXFb7EjhP+vmBFpFrUpfDV2F7eB+eCltCHJFWLFCED+pWTojEIHFXc3aFn4F68zqjEuKidS1QBVPDEhE7NA4mhMF7oThD49ot3FgtzHFCK0acW1x8DH1EmLoIlrWFBLE+y5+NA3Cx65wJHTaEZVaK1mWAmPGxgYCdxwOjTDIt/faOEhTl1vqNsKtJCOhJWuio2g07KLZEQsFBUpNtwEByBgxFslFheFbiEPvi61msDvApxCzB6rBCzox7joYA5UdDc+Cb4FSgIabpXFAj3bjkmFAxCZE+mD/SFf/0ELecYCt3nLoxC6WEZf2tKDB4oZvrEmqFkKk7BwILA7gtYBpsTq//D4jD0F0wEB9pyQ1BD5Ba0oYHDI+sbDFhvrHXdDHfgFEIJLi5r8qercNFBgFLC4bo5ERJtamWBDFy73KCEb6M8VpmEt330ygCTK58EIIFkYgF84gtGA9Uyh3m68iVrFbWFbcbqiCYHZ9J1jeRPbL8yswhMiDbhEhdNoSwFbZrLT740ABEqgCkO8J1BLd1VhKKR4sD1yUo0z+FF59Mvg71CFbyEhbHSFBKEIKyoQNgQppq9T0KAqePu0ZFGrXOHdKJqkoTFhYvpDNyuuznrN84thJbsCoO6Cu6Xlvntvy0QYuAExQEYtTUBf3CoCqwgGFZ4u1HJFzDVwEy3cjcpV4QvsPaBC3rCGyCF23o4K3pp2gberGgFEJEHo4nHICtyKH2ZqyxhN05KBBJIQlKh/Oujv/DH32VrlqFdIFC7Fz9Ct4kaqFME0UETLprnN9kfy+kFmtQBB0+5CFu0N9Ij8l/VvJDh2oq3hT6EzjTHKFN7ZjZwoTsAZ4Exsko6Fpa6WC+sduz8jyrLpegTv2h1EBeYpLpm2czQW0KoCcS0bCVXCmuWJDBjN1nQNLdF58SFJ0h7i3pC3oEOKy/FjBklL70XvBEEIWp2yZ04xObzAWDDJG7f+DbqBEA7LyiR95j7MDVdDViz2RE5vWlBMv5e4+VfhP3aXNPhvLSynb9O2x4uFBV+3jqu6d5pCG28/sETByvmu/+IJ0L3wb4rj9DNOLBF6XPIODr4L19U9RRofAG6Nxydi8Bki8BhGJbBAJKzbJxkZSlF9Q2Cu8oKqggB9hBArwLLqEBWEtFowy8XK8bEyw9snT+BeyFk1ZCSrdmgfEwFePTgCjELBEnIbjaDDPJm36rG9pztcEzT8dGk23SBhXBB1H4z+OWze0ooFzz8pDBYFvp9j9tvFByf9y4EFdVnz026CGR5qMr7fxMHN8UUdlyJAzlTBDRC28k+L4FB8078ljyD91tUj1ocnTs8vdEf7znbzm+GIjEZnoZE5rnLL700Xc7yHfz05nWxy03vBB9YGHYOWxgMQGBCR24CVYNE1hpfKxN0zKnfJDmmMgMmBWqNbjfSyFCBWSCGCgR8yFXiHyEj+VtD1FB3FpC1zI0kFbzifiKTLm9yq5zFmur+q8FHqjoOBWsBPiDbnCC2ErunV6cJ6TygXFYHYp7MKN9RUlSIS8/xBAGYLzeqUnBF4QbsTuUkUqGs6CaiDWKWjQK9EJkjpkTmNCPYXL\";\n// @TODO: Load lazily\nconst wordlist = {\n    zh_cn: null,\n    zh_tw: null\n};\nconst Checks = {\n    zh_cn: \"0x17bcc4d8547e5a7135e365d1ab443aaae95e76d8230c2782c67305d4f21497a1\",\n    zh_tw: \"0x51e720e90c7b87bec1d70eb6e74a21a449bd3ec9c020b01d3a40ed991b60ce5d\"\n};\nconst codes = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nconst style = \"~!@#$%^&*_-=[]{}|;:,.()<>?\";\nfunction loadWords(lang) {\n    if (wordlist[lang.locale] !== null) {\n        return;\n    }\n    wordlist[lang.locale] = [];\n    let deltaOffset = 0;\n    for (let i = 0; i < 2048; i++) {\n        const s = style.indexOf(data[i * 3]);\n        const bytes = [\n            228 + (s >> 2),\n            128 + codes.indexOf(data[i * 3 + 1]),\n            128 + codes.indexOf(data[i * 3 + 2]),\n        ];\n        if (lang.locale === \"zh_tw\") {\n            const common = s % 4;\n            for (let i = common; i < 3; i++) {\n                bytes[i] = codes.indexOf(deltaData[deltaOffset++]) + ((i == 0) ? 228 : 128);\n            }\n        }\n        wordlist[lang.locale].push(toUtf8String(bytes));\n    }\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (Wordlist.check(lang) !== Checks[lang.locale]) {\n        wordlist[lang.locale] = null;\n        throw new Error(\"BIP39 Wordlist for \" + lang.locale + \" (Chinese) FAILED\");\n    }\n}\nclass LangZh extends Wordlist {\n    constructor(country) {\n        super(\"zh_\" + country);\n    }\n    getWord(index) {\n        loadWords(this);\n        return wordlist[this.locale][index];\n    }\n    getWordIndex(word) {\n        loadWords(this);\n        return wordlist[this.locale].indexOf(word);\n    }\n    split(mnemonic) {\n        mnemonic = mnemonic.replace(/(?:\\u3000| )+/g, \"\");\n        return mnemonic.split(\"\");\n    }\n}\nconst langZhCn = new LangZh(\"cn\");\nWordlist.register(langZhCn);\nWordlist.register(langZhCn, \"zh\");\nconst langZhTw = new LangZh(\"tw\");\nWordlist.register(langZhTw);\nexport { langZhCn, langZhTw };\n//# sourceMappingURL=lang-zh.js.map","import { langCz as cz } from \"./lang-cz\";\nimport { langEn as en } from \"./lang-en\";\nimport { langEs as es } from \"./lang-es\";\nimport { langFr as fr } from \"./lang-fr\";\nimport { langJa as ja } from \"./lang-ja\";\nimport { langKo as ko } from \"./lang-ko\";\nimport { langIt as it } from \"./lang-it\";\nimport { langZhCn as zh_cn, langZhTw as zh_tw } from \"./lang-zh\";\nexport const wordlists = {\n    cz: cz,\n    en: en,\n    es: es,\n    fr: fr,\n    it: it,\n    ja: ja,\n    ko: ko,\n    zh: zh_cn,\n    zh_cn: zh_cn,\n    zh_tw: zh_tw\n};\n//# sourceMappingURL=wordlists.js.map","\"use strict\";\nimport { AbiCoder, checkResultErrors, defaultAbiCoder, EventFragment, FormatTypes, Fragment, FunctionFragment, Indexed, Interface, LogDescription, ParamType, TransactionDescription } from \"@ethersproject/abi\";\nimport { getAddress, getCreate2Address, getContractAddress, getIcapAddress, isAddress } from \"@ethersproject/address\";\nimport * as base64 from \"@ethersproject/base64\";\nimport { Base58 as base58 } from \"@ethersproject/basex\";\nimport { arrayify, concat, hexConcat, hexDataSlice, hexDataLength, hexlify, hexStripZeros, hexValue, hexZeroPad, isBytes, isBytesLike, isHexString, joinSignature, zeroPad, splitSignature, stripZeros } from \"@ethersproject/bytes\";\nimport { _TypedDataEncoder, hashMessage, id, isValidName, namehash } from \"@ethersproject/hash\";\nimport { defaultPath, entropyToMnemonic, HDNode, isValidMnemonic, mnemonicToEntropy, mnemonicToSeed } from \"@ethersproject/hdnode\";\nimport { getJsonWalletAddress } from \"@ethersproject/json-wallets\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { computeHmac, ripemd160, sha256, sha512 } from \"@ethersproject/sha2\";\nimport { keccak256 as solidityKeccak256, pack as solidityPack, sha256 as soliditySha256 } from \"@ethersproject/solidity\";\nimport { randomBytes, shuffled } from \"@ethersproject/random\";\nimport { checkProperties, deepCopy, defineReadOnly, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport * as RLP from \"@ethersproject/rlp\";\nimport { computePublicKey, recoverPublicKey, SigningKey } from \"@ethersproject/signing-key\";\nimport { formatBytes32String, nameprep, parseBytes32String, _toEscapedUtf8String, toUtf8Bytes, toUtf8CodePoints, toUtf8String, Utf8ErrorFuncs } from \"@ethersproject/strings\";\nimport { accessListify, computeAddress, parse as parseTransaction, recoverAddress, serialize as serializeTransaction } from \"@ethersproject/transactions\";\nimport { commify, formatEther, parseEther, formatUnits, parseUnits } from \"@ethersproject/units\";\nimport { verifyMessage, verifyTypedData } from \"@ethersproject/wallet\";\nimport { _fetchData, fetchJson, poll } from \"@ethersproject/web\";\n////////////////////////\n// Enums\nimport { SupportedAlgorithm } from \"@ethersproject/sha2\";\nimport { UnicodeNormalizationForm, Utf8ErrorReason } from \"@ethersproject/strings\";\n////////////////////////\n// Exports\nexport { AbiCoder, defaultAbiCoder, Fragment, EventFragment, FunctionFragment, ParamType, FormatTypes, checkResultErrors, Logger, RLP, _fetchData, fetchJson, poll, checkProperties, deepCopy, defineReadOnly, getStatic, resolveProperties, shallowCopy, arrayify, concat, stripZeros, zeroPad, isBytes, isBytesLike, defaultPath, HDNode, SigningKey, Interface, LogDescription, TransactionDescription, base58, base64, hexlify, isHexString, hexConcat, hexStripZeros, hexValue, hexZeroPad, hexDataLength, hexDataSlice, nameprep, _toEscapedUtf8String, toUtf8Bytes, toUtf8CodePoints, toUtf8String, Utf8ErrorFuncs, formatBytes32String, parseBytes32String, hashMessage, namehash, isValidName, id, _TypedDataEncoder, getAddress, getIcapAddress, getContractAddress, getCreate2Address, isAddress, formatEther, parseEther, formatUnits, parseUnits, commify, computeHmac, keccak256, ripemd160, sha256, sha512, randomBytes, shuffled, solidityPack, solidityKeccak256, soliditySha256, splitSignature, joinSignature, accessListify, parseTransaction, serializeTransaction, getJsonWalletAddress, computeAddress, recoverAddress, computePublicKey, recoverPublicKey, verifyMessage, verifyTypedData, mnemonicToEntropy, entropyToMnemonic, isValidMnemonic, mnemonicToSeed, \n////////////////////////\n// Enums\nSupportedAlgorithm, UnicodeNormalizationForm, Utf8ErrorReason, Indexed };\n//# sourceMappingURL=utils.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport aes from \"aes-js\";\nimport scrypt from \"scrypt-js\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { arrayify, concat, hexlify } from \"@ethersproject/bytes\";\nimport { defaultPath, entropyToMnemonic, HDNode, mnemonicToEntropy } from \"@ethersproject/hdnode\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { pbkdf2 as _pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { randomBytes } from \"@ethersproject/random\";\nimport { Description } from \"@ethersproject/properties\";\nimport { computeAddress } from \"@ethersproject/transactions\";\nimport { getPassword, looseArrayify, searchPath, uuidV4, zpad } from \"./utils\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n// Exported Types\nfunction hasMnemonic(value) {\n    return (value != null && value.mnemonic && value.mnemonic.phrase);\n}\nexport class KeystoreAccount extends Description {\n    isKeystoreAccount(value) {\n        return !!(value && value._isKeystoreAccount);\n    }\n}\nfunction _decrypt(data, key, ciphertext) {\n    const cipher = searchPath(data, \"crypto/cipher\");\n    if (cipher === \"aes-128-ctr\") {\n        const iv = looseArrayify(searchPath(data, \"crypto/cipherparams/iv\"));\n        const counter = new aes.Counter(iv);\n        const aesCtr = new aes.ModeOfOperation.ctr(key, counter);\n        return arrayify(aesCtr.decrypt(ciphertext));\n    }\n    return null;\n}\nfunction _getAccount(data, key) {\n    const ciphertext = looseArrayify(searchPath(data, \"crypto/ciphertext\"));\n    const computedMAC = hexlify(keccak256(concat([key.slice(16, 32), ciphertext]))).substring(2);\n    if (computedMAC !== searchPath(data, \"crypto/mac\").toLowerCase()) {\n        throw new Error(\"invalid password\");\n    }\n    const privateKey = _decrypt(data, key.slice(0, 16), ciphertext);\n    if (!privateKey) {\n        logger.throwError(\"unsupported cipher\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"decrypt\"\n        });\n    }\n    const mnemonicKey = key.slice(32, 64);\n    const address = computeAddress(privateKey);\n    if (data.address) {\n        let check = data.address.toLowerCase();\n        if (check.substring(0, 2) !== \"0x\") {\n            check = \"0x\" + check;\n        }\n        if (getAddress(check) !== address) {\n            throw new Error(\"address mismatch\");\n        }\n    }\n    const account = {\n        _isKeystoreAccount: true,\n        address: address,\n        privateKey: hexlify(privateKey)\n    };\n    // Version 0.1 x-ethers metadata must contain an encrypted mnemonic phrase\n    if (searchPath(data, \"x-ethers/version\") === \"0.1\") {\n        const mnemonicCiphertext = looseArrayify(searchPath(data, \"x-ethers/mnemonicCiphertext\"));\n        const mnemonicIv = looseArrayify(searchPath(data, \"x-ethers/mnemonicCounter\"));\n        const mnemonicCounter = new aes.Counter(mnemonicIv);\n        const mnemonicAesCtr = new aes.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n        const path = searchPath(data, \"x-ethers/path\") || defaultPath;\n        const locale = searchPath(data, \"x-ethers/locale\") || \"en\";\n        const entropy = arrayify(mnemonicAesCtr.decrypt(mnemonicCiphertext));\n        try {\n            const mnemonic = entropyToMnemonic(entropy, locale);\n            const node = HDNode.fromMnemonic(mnemonic, null, locale).derivePath(path);\n            if (node.privateKey != account.privateKey) {\n                throw new Error(\"mnemonic mismatch\");\n            }\n            account.mnemonic = node.mnemonic;\n        }\n        catch (error) {\n            // If we don't have the locale wordlist installed to\n            // read this mnemonic, just bail and don't set the\n            // mnemonic\n            if (error.code !== Logger.errors.INVALID_ARGUMENT || error.argument !== \"wordlist\") {\n                throw error;\n            }\n        }\n    }\n    return new KeystoreAccount(account);\n}\nfunction pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc) {\n    return arrayify(_pbkdf2(passwordBytes, salt, count, dkLen, prfFunc));\n}\nfunction pbkdf2(passwordBytes, salt, count, dkLen, prfFunc) {\n    return Promise.resolve(pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc));\n}\nfunction _computeKdfKey(data, password, pbkdf2Func, scryptFunc, progressCallback) {\n    const passwordBytes = getPassword(password);\n    const kdf = searchPath(data, \"crypto/kdf\");\n    if (kdf && typeof (kdf) === \"string\") {\n        const throwError = function (name, value) {\n            return logger.throwArgumentError(\"invalid key-derivation function parameters\", name, value);\n        };\n        if (kdf.toLowerCase() === \"scrypt\") {\n            const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n            const N = parseInt(searchPath(data, \"crypto/kdfparams/n\"));\n            const r = parseInt(searchPath(data, \"crypto/kdfparams/r\"));\n            const p = parseInt(searchPath(data, \"crypto/kdfparams/p\"));\n            // Check for all required parameters\n            if (!N || !r || !p) {\n                throwError(\"kdf\", kdf);\n            }\n            // Make sure N is a power of 2\n            if ((N & (N - 1)) !== 0) {\n                throwError(\"N\", N);\n            }\n            const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) {\n                throwError(\"dklen\", dkLen);\n            }\n            return scryptFunc(passwordBytes, salt, N, r, p, 64, progressCallback);\n        }\n        else if (kdf.toLowerCase() === \"pbkdf2\") {\n            const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n            let prfFunc = null;\n            const prf = searchPath(data, \"crypto/kdfparams/prf\");\n            if (prf === \"hmac-sha256\") {\n                prfFunc = \"sha256\";\n            }\n            else if (prf === \"hmac-sha512\") {\n                prfFunc = \"sha512\";\n            }\n            else {\n                throwError(\"prf\", prf);\n            }\n            const count = parseInt(searchPath(data, \"crypto/kdfparams/c\"));\n            const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) {\n                throwError(\"dklen\", dkLen);\n            }\n            return pbkdf2Func(passwordBytes, salt, count, dkLen, prfFunc);\n        }\n    }\n    return logger.throwArgumentError(\"unsupported key-derivation function\", \"kdf\", kdf);\n}\nexport function decryptSync(json, password) {\n    const data = JSON.parse(json);\n    const key = _computeKdfKey(data, password, pbkdf2Sync, scrypt.syncScrypt);\n    return _getAccount(data, key);\n}\nexport function decrypt(json, password, progressCallback) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const data = JSON.parse(json);\n        const key = yield _computeKdfKey(data, password, pbkdf2, scrypt.scrypt, progressCallback);\n        return _getAccount(data, key);\n    });\n}\nexport function encrypt(account, password, options, progressCallback) {\n    try {\n        // Check the address matches the private key\n        if (getAddress(account.address) !== computeAddress(account.privateKey)) {\n            throw new Error(\"address/privateKey mismatch\");\n        }\n        // Check the mnemonic (if any) matches the private key\n        if (hasMnemonic(account)) {\n            const mnemonic = account.mnemonic;\n            const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path || defaultPath);\n            if (node.privateKey != account.privateKey) {\n                throw new Error(\"mnemonic mismatch\");\n            }\n        }\n    }\n    catch (e) {\n        return Promise.reject(e);\n    }\n    // The options are optional, so adjust the call as needed\n    if (typeof (options) === \"function\" && !progressCallback) {\n        progressCallback = options;\n        options = {};\n    }\n    if (!options) {\n        options = {};\n    }\n    const privateKey = arrayify(account.privateKey);\n    const passwordBytes = getPassword(password);\n    let entropy = null;\n    let path = null;\n    let locale = null;\n    if (hasMnemonic(account)) {\n        const srcMnemonic = account.mnemonic;\n        entropy = arrayify(mnemonicToEntropy(srcMnemonic.phrase, srcMnemonic.locale || \"en\"));\n        path = srcMnemonic.path || defaultPath;\n        locale = srcMnemonic.locale || \"en\";\n    }\n    let client = options.client;\n    if (!client) {\n        client = \"ethers.js\";\n    }\n    // Check/generate the salt\n    let salt = null;\n    if (options.salt) {\n        salt = arrayify(options.salt);\n    }\n    else {\n        salt = randomBytes(32);\n        ;\n    }\n    // Override initialization vector\n    let iv = null;\n    if (options.iv) {\n        iv = arrayify(options.iv);\n        if (iv.length !== 16) {\n            throw new Error(\"invalid iv\");\n        }\n    }\n    else {\n        iv = randomBytes(16);\n    }\n    // Override the uuid\n    let uuidRandom = null;\n    if (options.uuid) {\n        uuidRandom = arrayify(options.uuid);\n        if (uuidRandom.length !== 16) {\n            throw new Error(\"invalid uuid\");\n        }\n    }\n    else {\n        uuidRandom = randomBytes(16);\n    }\n    // Override the scrypt password-based key derivation function parameters\n    let N = (1 << 17), r = 8, p = 1;\n    if (options.scrypt) {\n        if (options.scrypt.N) {\n            N = options.scrypt.N;\n        }\n        if (options.scrypt.r) {\n            r = options.scrypt.r;\n        }\n        if (options.scrypt.p) {\n            p = options.scrypt.p;\n        }\n    }\n    // We take 64 bytes:\n    //   - 32 bytes   As normal for the Web3 secret storage (derivedKey, macPrefix)\n    //   - 32 bytes   AES key to encrypt mnemonic with (required here to be Ethers Wallet)\n    return scrypt.scrypt(passwordBytes, salt, N, r, p, 64, progressCallback).then((key) => {\n        key = arrayify(key);\n        // This will be used to encrypt the wallet (as per Web3 secret storage)\n        const derivedKey = key.slice(0, 16);\n        const macPrefix = key.slice(16, 32);\n        // This will be used to encrypt the mnemonic phrase (if any)\n        const mnemonicKey = key.slice(32, 64);\n        // Encrypt the private key\n        const counter = new aes.Counter(iv);\n        const aesCtr = new aes.ModeOfOperation.ctr(derivedKey, counter);\n        const ciphertext = arrayify(aesCtr.encrypt(privateKey));\n        // Compute the message authentication code, used to check the password\n        const mac = keccak256(concat([macPrefix, ciphertext]));\n        // See: https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition\n        const data = {\n            address: account.address.substring(2).toLowerCase(),\n            id: uuidV4(uuidRandom),\n            version: 3,\n            Crypto: {\n                cipher: \"aes-128-ctr\",\n                cipherparams: {\n                    iv: hexlify(iv).substring(2),\n                },\n                ciphertext: hexlify(ciphertext).substring(2),\n                kdf: \"scrypt\",\n                kdfparams: {\n                    salt: hexlify(salt).substring(2),\n                    n: N,\n                    dklen: 32,\n                    p: p,\n                    r: r\n                },\n                mac: mac.substring(2)\n            }\n        };\n        // If we have a mnemonic, encrypt it into the JSON wallet\n        if (entropy) {\n            const mnemonicIv = randomBytes(16);\n            const mnemonicCounter = new aes.Counter(mnemonicIv);\n            const mnemonicAesCtr = new aes.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n            const mnemonicCiphertext = arrayify(mnemonicAesCtr.encrypt(entropy));\n            const now = new Date();\n            const timestamp = (now.getUTCFullYear() + \"-\" +\n                zpad(now.getUTCMonth() + 1, 2) + \"-\" +\n                zpad(now.getUTCDate(), 2) + \"T\" +\n                zpad(now.getUTCHours(), 2) + \"-\" +\n                zpad(now.getUTCMinutes(), 2) + \"-\" +\n                zpad(now.getUTCSeconds(), 2) + \".0Z\");\n            data[\"x-ethers\"] = {\n                client: client,\n                gethFilename: (\"UTC--\" + timestamp + \"--\" + data.address),\n                mnemonicCounter: hexlify(mnemonicIv).substring(2),\n                mnemonicCiphertext: hexlify(mnemonicCiphertext).substring(2),\n                path: path,\n                locale: locale,\n                version: \"0.1\"\n            };\n        }\n        return JSON.stringify(data);\n    });\n}\n//# sourceMappingURL=keystore.js.map","\"use strict\";\nimport aes from \"aes-js\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { Description } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { getPassword, looseArrayify, searchPath } from \"./utils\";\nexport class CrowdsaleAccount extends Description {\n    isCrowdsaleAccount(value) {\n        return !!(value && value._isCrowdsaleAccount);\n    }\n}\n// See: https://github.com/ethereum/pyethsaletool\nexport function decrypt(json, password) {\n    const data = JSON.parse(json);\n    password = getPassword(password);\n    // Ethereum Address\n    const ethaddr = getAddress(searchPath(data, \"ethaddr\"));\n    // Encrypted Seed\n    const encseed = looseArrayify(searchPath(data, \"encseed\"));\n    if (!encseed || (encseed.length % 16) !== 0) {\n        logger.throwArgumentError(\"invalid encseed\", \"json\", json);\n    }\n    const key = arrayify(pbkdf2(password, password, 2000, 32, \"sha256\")).slice(0, 16);\n    const iv = encseed.slice(0, 16);\n    const encryptedSeed = encseed.slice(16);\n    // Decrypt the seed\n    const aesCbc = new aes.ModeOfOperation.cbc(key, iv);\n    const seed = aes.padding.pkcs7.strip(arrayify(aesCbc.decrypt(encryptedSeed)));\n    // This wallet format is weird... Convert the binary encoded hex to a string.\n    let seedHex = \"\";\n    for (let i = 0; i < seed.length; i++) {\n        seedHex += String.fromCharCode(seed[i]);\n    }\n    const seedHexBytes = toUtf8Bytes(seedHex);\n    const privateKey = keccak256(seedHexBytes);\n    return new CrowdsaleAccount({\n        _isCrowdsaleAccount: true,\n        address: ethaddr,\n        privateKey: privateKey\n    });\n}\n//# sourceMappingURL=crowdsale.js.map","\"use strict\";\nimport { getAddress } from \"@ethersproject/address\";\nexport function isCrowdsaleWallet(json) {\n    let data = null;\n    try {\n        data = JSON.parse(json);\n    }\n    catch (error) {\n        return false;\n    }\n    return (data.encseed && data.ethaddr);\n}\nexport function isKeystoreWallet(json) {\n    let data = null;\n    try {\n        data = JSON.parse(json);\n    }\n    catch (error) {\n        return false;\n    }\n    if (!data.version || parseInt(data.version) !== data.version || parseInt(data.version) !== 3) {\n        return false;\n    }\n    // @TODO: Put more checks to make sure it has kdf, iv and all that good stuff\n    return true;\n}\n//export function isJsonWallet(json: string): boolean {\n//    return (isSecretStorageWallet(json) || isCrowdsaleWallet(json));\n//}\nexport function getJsonWalletAddress(json) {\n    if (isCrowdsaleWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).ethaddr);\n        }\n        catch (error) {\n            return null;\n        }\n    }\n    if (isKeystoreWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).address);\n        }\n        catch (error) {\n            return null;\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=inspect.js.map","\"use strict\";\nimport { HashZero } from \"@ethersproject/constants\";\nimport { arrayify, concat, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, toUtf8String } from \"./utf8\";\nexport function formatBytes32String(text) {\n    // Get the bytes\n    const bytes = toUtf8Bytes(text);\n    // Check we have room for null-termination\n    if (bytes.length > 31) {\n        throw new Error(\"bytes32 string must be less than 32 bytes\");\n    }\n    // Zero-pad (implicitly null-terminates)\n    return hexlify(concat([bytes, HashZero]).slice(0, 32));\n}\nexport function parseBytes32String(bytes) {\n    const data = arrayify(bytes);\n    // Must be 32 bytes with a null-termination\n    if (data.length !== 32) {\n        throw new Error(\"invalid bytes32 - not 32 bytes long\");\n    }\n    if (data[31] !== 0) {\n        throw new Error(\"invalid bytes32 string - no null terminator\");\n    }\n    // Find the null termination\n    let length = 31;\n    while (data[length - 1] === 0) {\n        length--;\n    }\n    // Determine the string value\n    return toUtf8String(data.slice(0, length));\n}\n//# sourceMappingURL=bytes32.js.map","\"use strict\";\nimport { BaseContract, Contract, ContractFactory } from \"@ethersproject/contracts\";\nimport { BigNumber, FixedNumber } from \"@ethersproject/bignumber\";\nimport { Signer, VoidSigner } from \"@ethersproject/abstract-signer\";\nimport { Wallet } from \"@ethersproject/wallet\";\nimport * as constants from \"@ethersproject/constants\";\nimport * as providers from \"@ethersproject/providers\";\nimport { getDefaultProvider } from \"@ethersproject/providers\";\nimport { Wordlist, wordlists } from \"@ethersproject/wordlists\";\nimport * as utils from \"./utils\";\nimport { ErrorCode as errors, Logger } from \"@ethersproject/logger\";\n////////////////////////\n// Compile-Time Constants\n// This is generated by \"npm run dist\"\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n////////////////////////\n// Exports\nexport { Signer, Wallet, VoidSigner, getDefaultProvider, providers, BaseContract, Contract, ContractFactory, BigNumber, FixedNumber, constants, errors, logger, utils, wordlists, \n////////////////////////\n// Compile-Time Constants\nversion, Wordlist };\n//# sourceMappingURL=ethers.js.map","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","// NFKC (composed)             // (decomposed)\nexport const EtherSymbol = \"\\u039e\"; // \"\\uD835\\uDF63\";\n//# sourceMappingURL=strings.js.map","\"use strict\";\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nlet anyGlobal = null;\ntry {\n    anyGlobal = window;\n    if (anyGlobal == null) {\n        throw new Error(\"try next\");\n    }\n}\ncatch (error) {\n    try {\n        anyGlobal = global;\n        if (anyGlobal == null) {\n            throw new Error(\"try next\");\n        }\n    }\n    catch (error) {\n        anyGlobal = {};\n    }\n}\nlet crypto = anyGlobal.crypto || anyGlobal.msCrypto;\nif (!crypto || !crypto.getRandomValues) {\n    logger.warn(\"WARNING: Missing strong random number source\");\n    crypto = {\n        getRandomValues: function (buffer) {\n            return logger.throwError(\"no secure random source avaialble\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"crypto.getRandomValues\"\n            });\n        }\n    };\n}\nexport function randomBytes(length) {\n    if (length <= 0 || length > 1024 || (length % 1)) {\n        logger.throwArgumentError(\"invalid length\", \"length\", length);\n    }\n    const result = new Uint8Array(length);\n    crypto.getRandomValues(result);\n    return arrayify(result);\n}\n;\n//# sourceMappingURL=random.js.map"],"sourceRoot":""}