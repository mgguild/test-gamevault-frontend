{"version":3,"sources":["components/UnlockButton.tsx","utils/bscscan.ts","utils/assetFetch.ts","components/Launchpad/SocialGroup.tsx","components/Launchpad/Anchor.tsx","components/Launchpad/SvgIcon.tsx","components/Launchpad/icons/MediumIcon.svg","views/Farms/components/FarmCards/styles.tsx","views/Gamefi/components/InputComponent.tsx","views/Gamefi/NewUI/styled.tsx","views/Gamefi/components/ApexCharts.tsx","views/Gamefi/NewUI/Table.tsx","views/Gamefi/NewUI/sections/FarmsSection.tsx","views/Gamefi/NewUI/sections/PoolSection.tsx","views/Gamefi/NewUI/StakingPage.tsx"],"names":["UnlockButton","props","customTitle","useTranslation","t","useAuth","login","logout","onPresentConnectModal","useWalletModal","onClick","fullWidth","getBscScanAddressUrl","address","BASE_BSC_SCAN_URL","getBscScanBlockCountdownUrl","block","useFetchBanner","symbol","useFetchPadBG","getImageUrlFromToken","token","getAddress","tokens","wbnb","iconExtension","RenderSocials","socials","size","color","center","theme","useContext","ThemeContext","colour","colors","text","style","justifyContent","website","href","twitter","telegram","discord","medium","width","Icon","MediumIcon","fill","youtube","linkedin","Anchor","children","margin","target","rel","SvgContainer","styled","div","height","SvgIcon","_path","_extends","Object","assign","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgMediumIcon","_ref","svgRef","title","titleId","xmlns","viewBox","ref","id","d","ForwardRef","Card2Container","button","bgColor","src","TokenLogo","img","LinearBG","type","PageContainer","contain","ButtonSM","Button","StyledDetails","Flex","textSubtle","Component","dayDuration","dayFunction","currentFarm","currentPoolBased","stakingType","pairSymbol","lpSymbol","stakingToken","Grid","container","spacing","xs","md","map","day","item","sm","flex","position","padding","placeholder","min","top","right","FlexC","StatCard","MGG_mainBG","Stats","MGG_container","TableStyle","ChartStyle","ApexChart","state","series","options","chart","toolbar","show","tools","download","selection","zoom","zoomin","zoomout","pan","reset","xaxis","categories","markers","strokeColors","strokeWidth","dataLabels","enabled","React","RenderTable","columns","data","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","MGG_accent2","render","row","getRowProps","cells","cell","getCellProps","RenderFarm","farmID","tblColumns","useState","setDayDuration","account","useWeb3React","pathname","useLocation","useFarms","farmsLP","isArchived","userDataLoaded","includes","filter","farm","BigNumber","pid","isEqualTo","usePollFarmsData","useMemo","depWith","tokensStaked","earnings","txn","time","UIProps","display","alignItems","textAlign","flexFlow","rowGap","fontSize","name","backgroundColor","maxWidth","zIndex","gap","flexWrap","InputComponent","borderTop","MGG_active","borderBottom","quoteToken","RenderPool","useRouteMatch","path","chainId","usePools","poolsWithoutAutoVault","pools","currentPool","pool","sousId","earningToken","FarmPage","match","params","Header","accessor"],"mappings":"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","file":"static/js/16.372009a2.chunk.js","sourcesContent":["import React from 'react'\nimport { Button, useWalletModal } from '@metagg/mgg-uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\n\nconst UnlockButton = (props) => {\n  const { customTitle } = props\n  const { t } = useTranslation()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props} fullWidth>\n      {!customTitle ? 'Connect Wallet' : customTitle}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import { BASE_BSC_SCAN_URL } from 'config'\n\nexport const getExplorerAddressUrl = (address: string) => {\n  return `${BASE_BSC_SCAN_URL}/address/${address}`\n}\n\nexport const getExplorerTransactionUrl = (address: string) => {\n  return `${BASE_BSC_SCAN_URL}/address/${address}`\n}\n\nexport const getBscScanAddressUrl = (address: string) => {\n  return `${BASE_BSC_SCAN_URL}/address/${address}`\n}\n\nexport const getBscScanTransactionUrl = (transactionHash: string) => {\n  return `${BASE_BSC_SCAN_URL}/tx/${transactionHash}`\n}\n\nexport const getBscScanBlockNumberUrl = (block: string | number) => {\n  return `${BASE_BSC_SCAN_URL}/block/${block}`\n}\n\nexport const getBscScanBlockCountdownUrl = (block: string | number) => {\n  return `${BASE_BSC_SCAN_URL}/block/countdown/${block}`\n}\n","/* eslint-disable import/prefer-default-export */\n\nimport tokens from 'config/constants/tokens'\nimport { Token } from 'config/constants/types'\nimport { getAddress } from './addressHelpers'\n\n// use this for Header Banners\nexport const useFetchBanner = (symbol: string) => {\n  return `/images/guildpad-assets/${symbol}Banner.png`\n}\n\n// use this for pad backgrounds\nexport const useFetchPadBG = (symbol: string) => {\n  return `/images/guildpad-assets/${symbol}PadBG.png`\n}\n\nexport const useFetchImage = (symbol: string) => {\n  return `/images/guildpad-assets/${symbol}.png`\n}\n\nexport const getImageUrlFromToken = (token: Token) => {\n  const address = getAddress(token.symbol === 'BNB' ? tokens.wbnb.address : token.address)\n  return `/images/tokens/${address}.${token.iconExtension ?? 'svg'}`\n}\n","import { Globe, Send, Twitter, Linkedin } from 'react-feather'\nimport { SiDiscord, SiYoutube } from 'react-icons/si'\nimport React, { useContext } from 'react'\nimport { ThemeContext } from 'styled-components'\nimport { Flex } from '@metagg/mgg-uikit'\nimport { Socials } from 'config/constants/types'\nimport Anchor from './Anchor'\nimport SvgIcon from './SvgIcon'\nimport { ReactComponent as MediumIcon } from './icons/MediumIcon.svg'\n\ntype SocialsProps = {\n  socials: Socials\n  size?: number\n  color?: string | null\n  center?: boolean\n}\n\nconst RenderSocials: React.FC<SocialsProps> = ({ socials, size = 16, color = null, center }) => {\n  const theme = useContext(ThemeContext)\n  const colour = color ?? theme.colors.text\n\n  return (\n    <>\n      <Flex style={{ justifyContent: center ? 'center' : 'left' }}>\n        {socials?.website && (\n          <Anchor href={socials?.website}>\n            <Globe size={`${size}px`} color={colour} />\n          </Anchor>\n        )}\n        {socials?.twitter && (\n          <Anchor href={socials?.twitter}>\n            <Twitter size={`${size}px`} color={colour} />\n          </Anchor>\n        )}\n        {socials?.telegram && (\n          <Anchor href={socials?.telegram}>\n            <Send size={`${size}px`} color={colour} />\n          </Anchor>\n        )}\n        {socials?.discord && (\n          <Anchor href={socials?.discord}>\n            <SiDiscord size={`${size}px`} color={colour} />\n          </Anchor>\n        )}\n        {socials?.medium && (\n          <Anchor href={socials?.medium}>\n            <SvgIcon width={size} Icon={MediumIcon} fill={colour} />\n          </Anchor>\n        )}\n        {socials?.youtube && (\n          <Anchor href={socials?.youtube}>\n            <SiYoutube size={`${size}px`} color={colour} />\n          </Anchor>\n        )}\n        {socials?.linkedin && (\n          <Anchor href={socials.linkedin}>\n            <Linkedin size={`${size}px`} color={colour} />\n          </Anchor>\n        )}\n      </Flex>\n    </>\n  )\n}\n\nexport default RenderSocials\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\nconst Anchor = ({ href, children }: { href: string; children: React.ReactNode }) => {\n  return (\n    // <div style={{ margin: '5px' }}></div>\n    <div style={{ margin: '5px 10px 0px 0px' }}>\n      <a href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n        {children}\n      </a>\n    </div>\n  )\n}\n\nexport default Anchor\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface Props {\n  Icon: React.FunctionComponent<React.SVGProps<SVGSVGElement>>\n  width?: number\n  height?: number\n  fill?: string\n}\n\nexport const SvgContainer = styled.div<{\n  height?: number\n  width?: number\n  fill?: string\n}>`\n  height: 'auto';\n  width: 'auto';\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n\n  & svg {\n    fill: ${(props) => (props.fill ? props.fill : props.theme.colors.text)};\n    height: ${(props) => (props.height ? `${props.height}px` : '100%')};\n    width: ${(props) => (props.width ? `${props.width}px` : '100%')};\n  }\n`\n\nconst SvgIcon: React.FC<Props> = (props) => {\n  const { Icon } = props\n  return (\n    <SvgContainer {...props}>\n      <Icon />\n    </SvgContainer>\n  )\n}\n\nexport default SvgIcon\n","var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgMediumIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"#000000\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 50 50\",\n    width: \"50px\",\n    height: \"50px\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 3 6 L 7 11.091797 L 7 35.285156 L 1 43 L 15 43 L 9 35.285156 L 9 13.75 L 22 43 L 21.998047 43.013672 L 34 13.544922 L 34 39 L 30 43 L 47 43 L 43 39 L 42.972656 10.503906 L 46.863281 6.0136719 L 34.845703 6.0136719 L 25.605469 28.744141 L 15.496094 6 L 3 6 z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMediumIcon);\nexport default __webpack_public_path__ + \"static/media/MediumIcon.7b14fab6.svg\";\nexport { ForwardRef as ReactComponent };","import styled, { ThemeContext } from 'styled-components'\n\nexport const Cards2 = styled.button<{ src?: string; bgColor?: string }>`\n  position: relative;\n  min-width: 20rem;\n  min-height: 12rem;\n  cursor: pointer;\n  border: none;\n  padding: 0;\n  text-align: left;\n  flex: 1;\n  background-color: ${({ bgColor }) => bgColor ?? '#030f62'};\n  ${({ src }) =>\n    `&:before {\n      content: '';\n      position: absolute;\n      left: 0;\n      top: 0;\n      opacity: 0.2;\n      width: 100%;\n      height: 100%;\n      z-index: 0;\n      background-image: url(${src ?? `./MGG.png`});\n      background-repeat: no-repeat;\n      // background-attachment: fixed;\n      background-position: center;\n      background-size: cover;\n    }`}\n`\n\nexport const Card2Container = styled.div`\n  position: relative;\n  padding: 1rem 1.5rem;\n  // background: linear-gradient(0deg,rgb(0 0 0) 0%,rgb(0 0 0 / 50%) 25%,rgba(36,121,9,0) 75%);\n  width: 100%;\n  height: 100%;\n  z-index: 2;\n`\nexport const TokenLogo = styled.img<{ size?: string }>`\n  border-radius: 50%;\n  height: ${({ size }) => (!size ? '80px' : size)};\n  width: ${({ size }) => (!size ? '80px' : size)};\n  z-index: 2;\n  @media (max-width: 500px) {\n    height: ${({ size }) => (!size ? '50px' : size)};\n    width: ${({ size }) => (!size ? '50px' : size)};\n  }\n`\n\nexport const Badge = styled.div<{ type?: number }>`\n  ${({ type }) =>\n    type\n      ? `\n      padding: 0.2rem 0.5rem;\n      border: thin solid white;\n      border-radius: 0.3rem;\n    `\n      : `\n      padding: 0.2rem 0.5rem;\n      background-color: rgb(0,196,204);\n      border-radius: 0.3rem;\n    `}\n`\n\nexport const LinearBG = styled.div<{ src?: string; bgColor?: string; contain?: boolean }>`\n  background: linear-gradient(0deg, rgb(0 0 0) 0%, rgb(0 0 0 / 50%) 25%, rgba(36, 121, 9, 0) 75%);\n`\n\nexport const PageContainer = styled.div<{ bgColor?: string; src?: string; contain?: boolean }>`\n  background-color: ${({ bgColor }) => bgColor ?? '#030f62'};\n  ${({ src, contain }) =>\n    `&:before {\n  content: '';\n  position: absolute;\n  inset:  ${contain ? '10rem 0 0 -2vh' : '0 0 0 0'};\n  opacity: 0.2;\n  width: 100%;\n  height: ${contain ? '30vw' : null};\n  z-index: 2;\n  background-image: url(${src ?? `./MGG-BG.svg`});\n  background-repeat: no-repeat;\n  background-position: ${contain ? 'right' : 'center'};\n  background-size: contain;\n}`}\n`\n","import React, { Dispatch, SetStateAction, useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\nimport { Grid } from '@mui/material'\nimport { Flex, Text, Button, Input } from '@metagg/mgg-uikit'\nimport { FarmWithStakedValue } from 'views/Gamefi/config'\nimport { Pool } from 'state/types'\n\nconst ButtonSM = styled(Button)`\n  padding: 0.5rem 1rem;\n  font-size: 1rem;\n  height: 2.5rem;\n  border-radius: 4px;\n`\n\nconst StyledDetails = styled(Flex)`\n  width: 100%;\n  flex-direction: column;\n  & > * {\n    justify-content: space-between;\n    flex: 1;\n    & :first-child {\n      color: ${({ theme }) => theme.colors.textSubtle};\n    }\n  }\n`\n\ninterface ComponentProps {\n  dayDuration: string\n  dayFunction: Dispatch<SetStateAction<string>>\n  currentFarm?: FarmWithStakedValue\n  stakingType: string\n  currentPoolBased?: Pool\n}\n\nconst Component: React.FC<ComponentProps> = ({\n  dayDuration,\n  dayFunction,\n  currentFarm,\n  currentPoolBased,\n  stakingType,\n}) => {\n  const theme = useContext(ThemeContext)\n  const pairSymbol = stakingType === 'farm' ? currentFarm.lpSymbol : currentPoolBased.stakingToken.symbol\n  return (\n    <>\n      <Flex justifyContent=\"center\" style={{ width: '100%' }}>\n        <Grid container spacing={{ xs: 2, md: 1 }} justifyContent=\"center\">\n          {['15', '90', '180', '365'].map((day) => (\n            <>\n              <Grid item xs={12} sm={3} md={3}>\n                <ButtonSM fullWidth onClick={() => dayFunction(day)}>\n                  {`${day} Days`}\n                </ButtonSM>\n              </Grid>\n            </>\n          ))}\n        </Grid>\n      </Flex>\n      <StyledDetails>\n        <Flex>\n          <Text>APY</Text>\n          <Text>2%</Text>\n        </Flex>\n        <Flex>\n          <Text>Max fine</Text>\n          <Text>60%</Text>\n        </Flex>\n        <Flex>\n          <Text>Max profit (estimated)</Text>\n          <Text>-</Text>\n        </Flex>\n        <hr style={{ width: '100%' }} />\n        <Flex>\n          <Text>You staked</Text>\n          <Text>1000 {pairSymbol}</Text>\n        </Flex>\n        <Flex>\n          <Text>Your balance</Text>\n          <Text>0 {pairSymbol}</Text>\n        </Flex>\n        <Flex>\n          <Text>Total staked</Text>\n          <Text>10000.00 {pairSymbol}</Text>\n        </Flex>\n      </StyledDetails>\n      <Flex style={{ flex: '0 50%' }}>\n        <Text>Amount</Text>\n      </Flex>\n      <Flex style={{ flex: '0 50%', justifyContent: 'end' }}>\n        <ButtonSM>Deposit Max</ButtonSM>\n      </Flex>\n      <Flex style={{ flex: '0 100%', position: 'relative' }}>\n        <Input style={{ padding: '1.5rem' }} placeholder=\"0\" type=\"number\" min=\"0\" />\n        <div style={{ position: 'absolute', top: '0.7rem', right: '1.5rem' }}>\n          <Text color={theme.colors.textSubtle}>{pairSymbol}</Text>\n        </div>\n      </Flex>\n      <Flex style={{ flex: '0 100%', justifyContent: 'center' }}>\n        <Button fullWidth>Stake</Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default Component\n","import styled from 'styled-components'\nimport { Flex, Button } from '@metagg/mgg-uikit'\n\nexport const FlexC = styled(Flex)`\n  padding: 2.5rem;\n  flex-flow column wrap;\n  row-gap: 1rem;\n  align-content: center;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`\n\nexport const ButtonSM = styled(Button)`\n  padding: 0.5rem 1rem;\n  font-size: 1rem;\n  height: 2.5rem;\n  border-radius: 4px;\n`\n\nexport const StatCard = styled(Flex)`\n  padding: 1rem;\n  flex-flow: column;\n  row-gap: 1rem;\n  background-color: ${({ theme }) => theme.colors.MGG_mainBG};\n  text-align: start;\n  min-width: 21rem;\n  flex: 1;\n`\n\nexport const Stats = styled(Flex)`\n  justify-content: center;\n  align-items: center;\n  padding: 0.5rem 1rem;\n  background-color: ${({ theme }) => theme.colors.MGG_container};\n  min-width: 11rem;\n`\n\nexport const TableStyle = styled.div`\n  display: flex;\n  position: relative;\n  min-height: 15rem;\n  width: 100%;\n  padding: 1rem;\n  overflow: auto;\n  background-color: ${({ theme }) => theme.colors.MGG_mainBG};\n  z-index: 2;\n\n  table {\n    width: 99%;\n    position: absolute;\n\n    th {\n      text-align: start;\n      margin: 0;\n      padding: 0.5rem;\n    }\n    td {\n      text-align: start;\n      margin: 0;\n      padding: 0.5rem;\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n  }\n`\n\nexport const ChartStyle = styled(Flex)`\n  width: 100%;\n  max-width: 100%;\n  background-color: ${({ theme }) => theme.colors.MGG_mainBG};\n  padding: 1rem;\n  z-index: 3;\n  .apexcharts-text {\n    fill: ${({ theme }) => theme.colors.text};\n  }\n`\n","import React from 'react'\nimport { ApexOptions } from 'apexcharts'\nimport ReactApexChart from 'react-apexcharts'\nimport { Series } from '../NewUI/types'\n\nclass ApexChart extends React.Component<{ series: Series[] }, { options: ApexOptions; series: Series[] }> {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      series: props.series,\n\n      options: {\n        chart: {\n          id: 'basic-area',\n          toolbar: {\n            show: true,\n            tools: {\n              download: false,\n              selection: false,\n              zoom: true,\n              zoomin: true,\n              zoomout: true,\n              pan: false,\n              reset: '<img src=\"/images/icons/refresh-ccw.svg\" />',\n            },\n          },\n        },\n        xaxis: {\n          categories: ['03/15', '03/16', '03/17', '03/18', '03/19', '03/20', '03/21', '03/22', '03/23'],\n        },\n        markers: {\n          size: 5,\n          colors: ['#000524'],\n          strokeColors: ['#00BAEC'],\n          strokeWidth: 3,\n        },\n        dataLabels: {\n          enabled: false,\n        },\n        // yaxis:{\n        //   labels:{\n        //     style:{\n        //       colors:[theme.colors.text]\n        //     }\n        //   }\n        // }\n      },\n    }\n  }\n\n  render() {\n    const { options, series } = this.state\n    return (\n      <div style={{ width: '100%', height: '100%' }}>\n        <ReactApexChart options={options} series={series} type=\"area\" height={300} width=\"100%\" />\n      </div>\n    )\n  }\n}\n\nconst options: ApexOptions = {\n  chart: {\n    id: 'basic-area',\n    events: {\n      mounted: (chart) => {\n        chart.windowResizeHandler()\n      },\n    },\n    height: '100%',\n    width: '100%',\n  },\n  xaxis: {\n    categories: [0.001, 0.002, 0.003, 0.004, 0.005, 0.006, 0.007, 0.008, 0.009],\n  },\n}\n\nexport default ApexChart\n","import React, { useContext } from 'react'\nimport { ThemeContext } from 'styled-components'\nimport { useTable } from 'react-table'\nimport { Text } from '@metagg/mgg-uikit'\n\nconst RenderTable = ({ columns, data }) => {\n  const theme = useContext(ThemeContext)\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } = useTable({ columns, data })\n\n  return (\n    <table {...getTableProps()}>\n      <thead style={{ width: '100%' }}>\n        {headerGroups.map((headerGroup) => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column) => (\n              <th {...column.getHeaderProps()}>\n                <Text color={theme.colors.MGG_accent2}>{column.render('Header')}</Text>\n              </th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          prepareRow(row)\n          return (\n            <tr {...row.getRowProps()}>\n              {row.cells.map((cell) => {\n                return (\n                  <td {...cell.getCellProps()}>\n                    <Text>{cell.render('Cell')}</Text>\n                  </td>\n                )\n              })}\n            </tr>\n          )\n        })}\n      </tbody>\n    </table>\n  )\n}\n\nexport default RenderTable\n","import React, { useContext, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getImageUrlFromToken } from 'utils/assetFetch'\nimport { Flex, Link, Text, Heading } from '@metagg/mgg-uikit'\nimport { ThemeContext } from 'styled-components'\nimport { useFarms, usePollFarmsData } from 'state/hooks'\nimport { getAddress } from 'utils/addressHelpers'\nimport UnlockButton from 'components/UnlockButton'\nimport RenderSocials from 'components/Launchpad/SocialGroup'\nimport { getBscScanAddressUrl } from 'utils/bscscan'\nimport { Card2Container, TokenLogo, Badge, LinearBG, PageContainer } from 'views/Farms/components/FarmCards/styles'\nimport InputComponent from '../../components/InputComponent'\nimport { FlexC, StatCard, Stats, TableStyle, ChartStyle } from '../styled'\nimport { Series } from '../types'\nimport ApexChart from '../../components/ApexCharts'\nimport RenderTable from '../Table'\n\nconst RenderFarm: React.FC<{ farmID: string; stakingType?: string; tblColumns: any }> = ({\n  farmID,\n  tblColumns,\n  stakingType,\n}) => {\n  const [dayDuration, setDayDuration] = useState<string>('')\n  const theme = useContext(ThemeContext)\n  const { account } = useWeb3React()\n  const { pathname } = useLocation()\n  const { data: farmsLP, userDataLoaded } = useFarms()\n  const isArchived = pathname.includes('archived')\n  const currentFarm = farmsLP.filter((farm) => new BigNumber(farm.pid).isEqualTo(new BigNumber(farmID)))[0]\n  usePollFarmsData(isArchived)\n\n  const data = React.useMemo(\n    () => [\n      {\n        depWith: 'Staking',\n        tokensStaked: `39.36k`,\n        earnings: '',\n        txn: '0x70F657164e5b75689b64B7fd1fA275F334f28e18',\n        time: '1hr 53m ago',\n      },\n      {\n        depWith: 'Staking',\n        tokensStaked: `39.36k`,\n        earnings: '',\n        txn: '0x70F657164e5b75689b64B7fd1fA275F334f28e18',\n        time: '1hr 53m ago',\n      },\n      {\n        depWith: 'Staking',\n        tokensStaked: `39.36k`,\n        earnings: '',\n        txn: '0x70F657164e5b75689b64B7fd1fA275F334f28e18',\n        time: '1hr 53m ago',\n      },\n    ],\n    [],\n  )\n\n  const series: Series[] = [\n    {\n      name: 'MGG',\n      data: [0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08, 0.09],\n    },\n  ]\n\n  return (\n    <PageContainer bgColor={currentFarm.UIProps.bgColor} contain={currentFarm.UIProps.contain}>\n      <LinearBG>\n        <Flex>\n          <>\n            <Card2Container style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n              <Flex style={{ textAlign: 'center', flexFlow: 'column', rowGap: '1rem' }}>\n                <Flex style={{ alignItems: 'center', justifyContent: 'center' }}>\n                  <TokenLogo size=\"3rem\" src={getImageUrlFromToken(currentFarm.token)} />\n                  <Heading color=\"white\" style={{ fontSize: '1.875rem', padding: '0 1rem' }}>\n                    {currentFarm.name} Token\n                  </Heading>\n                </Flex>\n                <Text color=\"white\">Hold your {currentFarm.token.symbol} tokens for great benefits</Text>\n                <Flex>\n                  <Text color=\"white\">\n                    Token address{' '}\n                    <Link\n                      style={{ display: 'contents' }}\n                      href={getBscScanAddressUrl(getAddress(currentFarm.token.address))}\n                    >\n                      {getAddress(currentFarm.token.address)}\n                    </Link>\n                  </Text>\n                </Flex>\n                <RenderSocials socials={currentFarm.UIProps.socials} center color=\"white\" size={20} />\n              </Flex>\n            </Card2Container>\n          </>\n        </Flex>\n        <FlexC>\n          <FlexC style={{ backgroundColor: theme.colors.MGG_mainBG, maxWidth: '40rem', zIndex: 3 }}>\n            <Heading style={{ fontSize: '1.875rem' }}>{currentFarm.lpSymbol} Staking Farm</Heading>\n            <Text>Deposit your {currentFarm.lpSymbol} Tokens to earn Extra Annual Percentage Rate</Text>\n            <Text color={theme.colors.MGG_accent2}>Current APR</Text>\n            <Flex\n              style={{\n                width: '100%',\n                justifyContent: 'center',\n                padding: '1rem',\n                backgroundColor: theme.colors.MGG_container,\n              }}\n            >\n              <Heading style={{ fontSize: '1.875rem' }}>150%</Heading>\n            </Flex>\n\n            <Flex style={{ width: '100%', flexFlow: 'row wrap', gap: '1rem', justifyContent: 'space-evenly' }}>\n              <Stats>\n                <div>\n                  <Heading size=\"l\">{dayDuration !== '' ? `${dayDuration} days` : 'Select Days'}</Heading>\n                  {dayDuration !== '' && <Text fontSize=\"0.8rem\">Program duration</Text>}\n                </div>\n              </Stats>\n              <Stats>\n                <div>\n                  <Heading size=\"l\">June 03, 2022</Heading>\n                  <Text fontSize=\"0.8rem\">Last day to earn APR</Text>\n                </div>\n              </Stats>\n              {/* <Stats>\n                  <div>\n                    <Heading size=\"l\">14 days</Heading>\n                    <Text fontSize=\"0.8rem\">Minimum Staking Time</Text>\n                  </div>\n                </Stats> */}\n            </Flex>\n\n            <Text fontSize=\"0.8rem\" color={theme.colors.textSubtle}>\n              <em>*Neither stake nor rewards can be withdrawn before minimum staking time</em>\n            </Text>\n            <Flex\n              style={{\n                width: '100%',\n                flexWrap: 'wrap',\n                rowGap: '1rem',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n              }}\n            >\n              {!account ? (\n                <Flex style={{ flex: '0 100%', justifyContent: 'center' }}>\n                  <UnlockButton customTitle=\"Connect Wallet to Stake\" />\n                </Flex>\n              ) : (\n                <InputComponent\n                  dayDuration={dayDuration}\n                  dayFunction={setDayDuration}\n                  stakingType=\"farm\"\n                  currentFarm={currentFarm}\n                />\n              )}\n              <Flex style={{ flex: '0 100%' }} />\n              <Flex style={{ flex: '0 50%' }}>\n                <Text fontSize=\"0.7rem\" color={theme.colors.MGG_accent2}>\n                  Add Liquidity to get {currentFarm.lpSymbol} Tokens\n                </Text>\n              </Flex>\n              <Flex style={{ flex: '0 50%', justifyContent: 'end' }}>\n                <Text fontSize=\"0.7rem\" color={theme.colors.MGG_accent2}>\n                  Pool info on SparkSwap\n                </Text>\n              </Flex>\n            </Flex>\n          </FlexC>\n          <Flex style={{ margin: '2rem 0', zIndex: 3 }}>\n            <div>\n              <Heading style={{ fontSize: '1.875rem' }} color=\"white\">\n                {' '}\n                LP Farming Stats\n              </Heading>\n              <Text color=\"white\">Learn About {currentFarm.name} LP staking Farm, and track its results</Text>\n            </div>\n          </Flex>\n\n          <Flex\n            style={{\n              padding: '1rem 2rem',\n              width: '100%',\n              flexFlow: 'row wrap',\n              justifyContent: 'space-between',\n              backgroundColor: theme.colors.MGG_mainBG,\n              zIndex: 3,\n            }}\n          >\n            <Text>Current Total Value Locked - $100k</Text>\n            <Text>All Time High Value Locked - $120k</Text>\n            <Text color={theme.colors.MGG_accent2}>Farm Contract Address</Text>\n          </Flex>\n\n          <Flex\n            style={{\n              width: '100%',\n              flexFlow: 'row wrap',\n              justifyContent: 'space-between',\n              gap: '0.5rem',\n              zIndex: 3,\n            }}\n          >\n            <StatCard>\n              <Text color={theme.colors.MGG_accent2}>Total {currentFarm.lpSymbol} Staked</Text>\n              <Heading style={{ fontSize: '1.875rem' }}>2M</Heading>\n              <hr\n                style={{\n                  width: '100%',\n                  borderTop: `1px solid ${theme.colors.MGG_active}`,\n                  borderBottom: `1px solid ${theme.colors.MGG_active}`,\n                }}\n              />\n              <Text fontSize=\"0.8rem\" color={theme.colors.textSubtle}>\n                123.456789k LP Tokens\n              </Text>\n            </StatCard>\n\n            <StatCard>\n              <Text color={theme.colors.MGG_accent2}>Total {currentFarm.quoteToken.symbol} Rewards Locked</Text>\n              <Heading style={{ fontSize: '1.875rem' }}>1.977M</Heading>\n              <hr\n                style={{\n                  width: '100%',\n                  borderTop: `1px solid ${theme.colors.MGG_active}`,\n                  borderBottom: `1px solid ${theme.colors.MGG_active}`,\n                }}\n              />\n              <Text fontSize=\"0.8rem\" color={theme.colors.textSubtle}>\n                26.21 {currentFarm.token.symbol} token per minute\n              </Text>\n            </StatCard>\n\n            <StatCard>\n              <Text color={theme.colors.MGG_accent2}>Farming Program Ends</Text>\n              <Heading style={{ fontSize: '1.875rem' }}>100D 23H 22M</Heading>\n              <hr\n                style={{\n                  width: '100%',\n                  borderTop: `1px solid ${theme.colors.MGG_active}`,\n                  borderBottom: `1px solid ${theme.colors.MGG_active}`,\n                }}\n              />\n              <Text fontSize=\"0.8rem\" color={theme.colors.textSubtle}>\n                145402 Minutes Remaining\n              </Text>\n            </StatCard>\n\n            <StatCard>\n              <Text color={theme.colors.MGG_accent2}>Total {currentFarm.quoteToken.symbol} Rewards Unlocked</Text>\n              <Heading style={{ fontSize: '1.875rem' }}>2M</Heading>\n              <hr\n                style={{\n                  width: '100%',\n                  borderTop: `1px solid ${theme.colors.MGG_active}`,\n                  borderBottom: `1px solid ${theme.colors.MGG_active}`,\n                }}\n              />\n              <Text fontSize=\"0.8rem\" color={theme.colors.textSubtle}>\n                0 Rewards Withdrawn\n              </Text>\n            </StatCard>\n          </Flex>\n\n          <ChartStyle>\n            <ApexChart series={series} />\n          </ChartStyle>\n\n          <TableStyle>\n            <RenderTable columns={tblColumns} data={data} />\n          </TableStyle>\n        </FlexC>\n      </LinearBG>\n    </PageContainer>\n  )\n}\n\nexport default RenderFarm\n","import React, { useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react'\nimport { Route, useLocation, useRouteMatch } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getImageUrlFromToken } from 'utils/assetFetch'\nimport { Flex, Link, Text, Heading } from '@metagg/mgg-uikit'\nimport styled, { ThemeContext } from 'styled-components'\nimport { useFarms, usePollFarmsData, usePools } from 'state/hooks'\nimport { getAddress } from 'utils/addressHelpers'\nimport UnlockButton from 'components/UnlockButton'\nimport RenderSocials from 'components/Launchpad/SocialGroup'\nimport { getBscScanAddressUrl } from 'utils/bscscan'\nimport {\n  Cards2,\n  Card2Container,\n  TokenLogo,\n  Badge,\n  LinearBG,\n  PageContainer,\n} from 'views/Farms/components/FarmCards/styles'\nimport InputComponent from '../../components/InputComponent'\nimport { FlexC, StatCard, Stats, TableStyle, ChartStyle } from '../styled'\nimport { Series } from '../types'\nimport ApexChart from '../../components/ApexCharts'\nimport RenderTable from '../Table'\n\nconst RenderPool: React.FC<{ farmID: string; tblColumns: any }> = ({ farmID, tblColumns }) => {\n  const [dayDuration, setDayDuration] = useState<string>('')\n  const theme = useContext(ThemeContext)\n  const { path } = useRouteMatch()\n  const { account, chainId } = useWeb3React()\n  const { pathname } = useLocation()\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools(account)\n\n  const currentPool = useMemo(() => {\n    const getPool = poolsWithoutAutoVault.filter((pool) =>\n      new BigNumber(pool.sousId).isEqualTo(new BigNumber(farmID)),\n    )[0]\n\n    return getPool\n  }, [poolsWithoutAutoVault, farmID])\n\n  const data = React.useMemo(\n    () => [\n      {\n        depWith: 'Staking',\n        tokensStaked: `39.36k`,\n        earnings: '',\n        txn: '0x70F657164e5b75689b64B7fd1fA275F334f28e18',\n        time: '1hr 53m ago',\n      },\n      {\n        depWith: 'Staking',\n        tokensStaked: `39.36k`,\n        earnings: '',\n        txn: '0x70F657164e5b75689b64B7fd1fA275F334f28e18',\n        time: '1hr 53m ago',\n      },\n      {\n        depWith: 'Staking',\n        tokensStaked: `39.36k`,\n        earnings: '',\n        txn: '0x70F657164e5b75689b64B7fd1fA275F334f28e18',\n        time: '1hr 53m ago',\n      },\n    ],\n    [],\n  )\n\n  const series: Series[] = [\n    {\n      name: 'MGG',\n      data: [0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08, 0.09],\n    },\n  ]\n\n  return (\n    <PageContainer bgColor={currentPool.UIProps.bgColor} contain={currentPool.UIProps.contain}>\n      <LinearBG>\n        <Flex>\n          <>\n            <Card2Container style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', zIndex: 3 }}>\n              <Flex style={{ textAlign: 'center', flexFlow: 'column', rowGap: '1rem' }}>\n                <Flex style={{ alignItems: 'center', justifyContent: 'center' }}>\n                  <TokenLogo size=\"3rem\" src={getImageUrlFromToken(currentPool.stakingToken)} />\n                  <Heading color=\"white\" style={{ fontSize: '1.875rem', padding: '0 1rem' }}>\n                    {currentPool.name} Token\n                  </Heading>\n                </Flex>\n                <Text color=\"white\">Hold your {currentPool.stakingToken.symbol} tokens for great benefits</Text>\n                <Flex>\n                  <Text color=\"white\">\n                    Token address{' '}\n                    <Link\n                      style={{ display: 'contents' }}\n                      href={getBscScanAddressUrl(getAddress(currentPool.stakingToken.address))}\n                    >\n                      {getAddress(currentPool.stakingToken.address)}\n                    </Link>\n                  </Text>\n                </Flex>\n                <RenderSocials socials={currentPool.UIProps.socials} center color=\"white\" size={20} />\n              </Flex>\n            </Card2Container>\n          </>\n        </Flex>\n        <FlexC>\n          <FlexC style={{ backgroundColor: theme.colors.MGG_mainBG, maxWidth: '40rem', zIndex: 3 }}>\n            <Heading style={{ fontSize: '1.875rem' }}>\n              {currentPool.stakingToken.symbol} - {currentPool.earningToken.symbol} Pool Based Farm\n            </Heading>\n            <Text>Deposit your {currentPool.stakingToken.symbol} Tokens to earn Extra Annual Percentage Rate</Text>\n            <Text color={theme.colors.MGG_accent2}>Current APR</Text>\n            <Flex\n              style={{\n                width: '100%',\n                justifyContent: 'center',\n                padding: '1rem',\n                backgroundColor: theme.colors.MGG_container,\n              }}\n            >\n              <Heading style={{ fontSize: '1.875rem' }}>150%</Heading>\n            </Flex>\n\n            <Flex style={{ width: '100%', flexFlow: 'row wrap', gap: '1rem', justifyContent: 'space-evenly' }}>\n              <Stats>\n                <div>\n                  <Heading size=\"l\">{dayDuration !== '' ? `${dayDuration} days ` : 'Select days'}</Heading>\n                  {dayDuration !== '' && <Text fontSize=\"0.8rem\">Program duration</Text>}\n                </div>\n              </Stats>\n              <Stats>\n                <div>\n                  <Heading size=\"l\">June 03, 2022</Heading>\n                  <Text fontSize=\"0.8rem\">Last day to earn APR</Text>\n                </div>\n              </Stats>\n              {/* <Stats>\n                <div>\n                  <Heading size=\"l\">14 days</Heading>\n                  <Text fontSize=\"0.8rem\">Minimum Staking Time</Text>\n                </div>\n              </Stats> */}\n            </Flex>\n\n            <Text fontSize=\"0.8rem\" color={theme.colors.textSubtle}>\n              <em>*Neither stake nor rewards can be withdrawn before minimum staking time</em>\n            </Text>\n            <Flex\n              style={{\n                width: '100%',\n                flexWrap: 'wrap',\n                rowGap: '1rem',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n              }}\n            >\n              {!account ? (\n                <Flex style={{ flex: '0 100%', justifyContent: 'center' }}>\n                  <UnlockButton customTitle=\"Connect wallet to Stake\" />\n                </Flex>\n              ) : (\n                <InputComponent\n                  dayDuration={dayDuration}\n                  dayFunction={setDayDuration}\n                  stakingType=\"pool\"\n                  currentPoolBased={currentPool}\n                />\n              )}\n              <Flex style={{ flex: '0 100%' }} />\n              <Flex style={{ flex: '0 50%' }}>\n                <Text fontSize=\"0.7rem\" color={theme.colors.MGG_accent2}>\n                  Add Liquidity to get {currentPool.earningToken.symbol} Tokens\n                </Text>\n              </Flex>\n              <Flex style={{ flex: '0 50%', justifyContent: 'end' }}>\n                <Text fontSize=\"0.7rem\" color={theme.colors.MGG_accent2}>\n                  Pool info on SparkSwap\n                </Text>\n              </Flex>\n            </Flex>\n          </FlexC>\n          <Flex style={{ margin: '2rem 0', zIndex: 3 }}>\n            <div>\n              <Heading style={{ fontSize: '1.875rem' }}> Pool Based Farming Stats</Heading>\n              <Text>Learn About {currentPool.name} Pool Based Farm, and track its results</Text>\n            </div>\n          </Flex>\n\n          <Flex\n            style={{\n              padding: '1rem 2rem',\n              width: '100%',\n              flexFlow: 'row wrap',\n              justifyContent: 'space-between',\n              backgroundColor: theme.colors.MGG_mainBG,\n              zIndex: 3,\n            }}\n          >\n            <Text>Current Total Value Locked - $100k</Text>\n            <Text>All Time High Value Locked - $120k</Text>\n            <Text color={theme.colors.MGG_accent2}>Farm Contract Address</Text>\n          </Flex>\n\n          <Flex\n            style={{\n              width: '100%',\n              flexFlow: 'row wrap',\n              justifyContent: 'space-evenly',\n              gap: '0.5rem',\n              zIndex: 3,\n            }}\n          >\n            <StatCard>\n              <Text color={theme.colors.MGG_accent2}>Total {currentPool.stakingToken.symbol} Staked</Text>\n              <Heading style={{ fontSize: '1.875rem' }}>2M</Heading>\n              <hr\n                style={{\n                  width: '100%',\n                  borderTop: `1px solid ${theme.colors.MGG_active}`,\n                  borderBottom: `1px solid ${theme.colors.MGG_active}`,\n                }}\n              />\n              <Text fontSize=\"0.8rem\" color={theme.colors.textSubtle}>\n                123.456789k LP Tokens\n              </Text>\n            </StatCard>\n\n            <StatCard>\n              <Text color={theme.colors.MGG_accent2}>Total {currentPool.earningToken.symbol} Rewards Locked</Text>\n              <Heading style={{ fontSize: '1.875rem' }}>1.977M</Heading>\n              <hr\n                style={{\n                  width: '100%',\n                  borderTop: `1px solid ${theme.colors.MGG_active}`,\n                  borderBottom: `1px solid ${theme.colors.MGG_active}`,\n                }}\n              />\n              <Text fontSize=\"0.8rem\" color={theme.colors.textSubtle}>\n                26.21 {currentPool.earningToken.symbol} token per minute\n              </Text>\n            </StatCard>\n\n            <StatCard>\n              <Text color={theme.colors.MGG_accent2}>Farming Program Ends</Text>\n              <Heading style={{ fontSize: '1.875rem' }}>100D 23H 22M</Heading>\n              <hr\n                style={{\n                  width: '100%',\n                  borderTop: `1px solid ${theme.colors.MGG_active}`,\n                  borderBottom: `1px solid ${theme.colors.MGG_active}`,\n                }}\n              />\n              <Text fontSize=\"0.8rem\" color={theme.colors.textSubtle}>\n                145402 Minutes Remaining\n              </Text>\n            </StatCard>\n\n            <StatCard>\n              <Text color={theme.colors.MGG_accent2}>Total {currentPool.earningToken.symbol} Rewards Unlocked</Text>\n              <Heading style={{ fontSize: '1.875rem' }}>2M</Heading>\n              <hr\n                style={{\n                  width: '100%',\n                  borderTop: `1px solid ${theme.colors.MGG_active}`,\n                  borderBottom: `1px solid ${theme.colors.MGG_active}`,\n                }}\n              />\n              <Text fontSize=\"0.8rem\" color={theme.colors.textSubtle}>\n                0 Rewards Withdrawn\n              </Text>\n            </StatCard>\n          </Flex>\n\n          <ChartStyle>\n            <ApexChart series={series} />\n          </ChartStyle>\n\n          <TableStyle>\n            <RenderTable columns={tblColumns} data={data} />\n          </TableStyle>\n        </FlexC>\n      </LinearBG>\n    </PageContainer>\n  )\n}\n\nexport default RenderPool\n","import React, { useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\nimport RenderFarm from './sections/FarmsSection'\nimport RenderPool from './sections/PoolSection'\n\nconst FarmPage: React.FC<RouteComponentProps<{ type: string; farmID: string }>> = ({\n  match: {\n    params: { type, farmID },\n  },\n}) => {\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: 'Deposit/Withdrawals',\n        accessor: 'depWith', // accessor is the \"key\" in the data\n      },\n      {\n        Header: 'Tokens Staked',\n        accessor: 'tokensStaked',\n      },\n      {\n        Header: 'Earnings',\n        accessor: 'earnings',\n      },\n      {\n        Header: 'Wallet Address',\n        accessor: 'txn',\n      },\n      {\n        Header: 'Time',\n        accessor: 'time',\n      },\n    ],\n    [],\n  )\n\n  return type === 'LP' ? (\n    <RenderFarm farmID={farmID} stakingType={type} tblColumns={columns} />\n  ) : (\n    <RenderPool farmID={farmID} tblColumns={columns} />\n  )\n}\n\nexport default FarmPage\n"],"sourceRoot":""}